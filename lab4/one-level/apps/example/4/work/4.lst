 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 235
    4                      ; Text size: 4528
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.align 2
   80  000010d4          	.proc _factorial
   81  000010d4          	.global _factorial
   82  000010d4          	_factorial:
   83                      ;  Function 'factorial'; 0 bytes of locals, 0 regs to save.
   84  000010d4  afbefffc	sw	-4(r29),r30; push fp
   85  000010d8  001df020	add	r30,r0,r29; fp = sp
   86  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   87  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
   88  000010e4  8fdf0000	lw	r31,(r30)
   89  000010e8  67e10000	snei	r1,r31,#0
   90  000010ec  10200028	beqz	r1,L16_LF0
   91  000010f0  54000000	nop; not filled.
   92  000010f4  23bdfff8	addi	r29,r29,#-8
   93  000010f8  23e1ffff	addi	r1,r31,#-1
   94  000010fc  afa10000	sw	(r29),r1
   95  00001100  0fffffd0	jal	_factorial
   96  00001104  54000000	nop; not filled.
   97  00001108  20210001	addi	r1,r1,#1
   98  0000110c  23bd0008	addi	r29,r29,#8
   99  00001110  08000008	j	L15_LF0
  100  00001114  54000000	nop; not filled.
  101  00001118          	L16_LF0:
  102  00001118  20010001	addi	r1,r0,#1
  103  0000111c          	L15_LF0:
  104  0000111c  8fdffff8	lw	r31,-8(r30)
  105  00001120  001ee820	add	r29,r0,r30
  106  00001124  8fdefffc	lw	r30,-4(r30)
  107  00001128  4be00000	jr	r31
  108  0000112c  54000000	nop
  109  00001130          	.endproc _factorial
  110  00001130          	.data
  111  00003000          	.align 2
  112  00003000          	LC0_LF0:
  113  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
  113  00003004  653a2025	
  113  00003008  73203c68	
  113  0000300c  616e646c	
  113  00003010  655f746f	
  113  00003014  5f70726f	
  113  00003018  63735f63	
  113  0000301c  6f6d706c	
  113  00003020  65746564	
  113  00003024  5f73656d	
  113  00003028  6170686f	
  113  0000302c  72653e0a	
  113  00003030  00      	
  114  00003031          	.align 2
  115  00003034          	LC1_LF0:
  116  00003034  54657374	.ascii "Test Stack Growth (%d): Start\n\000"
  116  00003038  20537461	
  116  0000303c  636b2047	
  116  00003040  726f7774	
  116  00003044  68202825	
  116  00003048  64293a20	
  116  0000304c  53746172	
  116  00003050  740a00  	
  117  00003053          	.align 2
  118  00003054          	LC2_LF0:
  119  00003054  43616c6c	.ascii "Calling Recursive Function %d\n\000"
  119  00003058  696e6720	
  119  0000305c  52656375	
  119  00003060  72736976	
  119  00003064  65204675	
  119  00003068  6e637469	
  119  0000306c  6f6e2025	
  119  00003070  640a00  	
  120  00003073          	.align 2
  121  00003074          	LC3_LF0:
  122  00003074  25642052	.ascii "%d Recursive Calls Made\n\000"
  122  00003078  65637572	
  122  0000307c  73697665	
  122  00003080  2043616c	
  122  00003084  6c73204d	
  122  00003088  6164650a	
  122  0000308c  00      	
  123  0000308d          	.align 2
  124  00003090          	LC4_LF0:
  125  00003090  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
  125  00003094  6f5f776f	
  125  00003098  726c6420	
  125  0000309c  28256429	
  125  000030a0  3a204261	
  125  000030a4  64207365	
  125  000030a8  6d617068	
  125  000030ac  6f726520	
  125  000030b0  735f7072	
  125  000030b4  6f63735f	
  125  000030b8  636f6d70	
  125  000030bc  6c657465	
  125  000030c0  64202825	
  125  000030c4  6429210a	
  125  000030c8  00      	
  126  000030c9          	.align 2
  127  000030cc          	LC5_LF0:
  128  000030cc  53746163	.ascii "Stack Growth Test (%d): Done!\n\000"
  128  000030d0  6b204772	
  128  000030d4  6f777468	
  128  000030d8  20546573	
  128  000030dc  74202825	
  128  000030e0  64293a20	
  128  000030e4  446f6e65	
  128  000030e8  210a00  	
  129  000030eb          	.text
  130  00001130          	.align 2
  131  00001130          	.proc _main
  132  00001130          	.global _main
  133  00001130          	_main:
  134                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  135  00001130  afbefffc	sw	-4(r29),r30; push fp
  136  00001134  001df020	add	r30,r0,r29; fp = sp
  137  00001138  afbffff8	sw	-8(r29),r31; push ret addr
  138  0000113c  2fbd0008	subui	r29,r29,#8; alloc local storage
  139  00001140  8fc20000	lw	r2,(r30)
  140  00001144  8fc30004	lw	r3,4(r30)
  141  00001148  0c00105c	jal	___main
  142  0000114c  54000000	nop; not filled.
  143  00001150  64410002	snei	r1,r2,#2
  144  00001154  10200028	beqz	r1,L19_LF0
  145  00001158  54000000	nop; not filled.
  146  0000115c  23bdfff8	addi	r29,r29,#-8
  147  00001160  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  148  00001164  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  149  00001168  afa40000	sw	(r29),r4
  150  0000116c  0c000178	jal	_Printf
  151  00001170  54000000	nop; not filled.
  152  00001174  0c000278	jal	_Exit
  153  00001178  54000000	nop; not filled.
  154  0000117c  23bd0008	addi	r29,r29,#8
  155  00001180          	L19_LF0:
  156  00001180  23bdfff0	addi	r29,r29,#-16
  157  00001184  8c630004	lw	r3,4(r3)
  158  00001188  afa30000	sw	(r29),r3
  159  0000118c  20040000	addi	r4,r0,#0
  160  00001190  afa40004	sw	4(r29),r4
  161  00001194  2004000a	addi	r4,r0,#10
  162  00001198  afa40008	sw	8(r29),r4
  163  0000119c  0c000b0c	jal	_dstrtol
  164  000011a0  54000000	nop; not filled.
  165  000011a4  00011020	add	r2,r0,r1
  166  000011a8  0c000148	jal	_getpid
  167  000011ac  54000000	nop; not filled.
  168  000011b0  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  169  000011b4  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  170  000011b8  afa40000	sw	(r29),r4
  171  000011bc  afa10004	sw	4(r29),r1
  172  000011c0  0c000124	jal	_Printf
  173  000011c4  54000000	nop; not filled.
  174  000011c8  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  175  000011cc  24843054	addui	r4,r4,(LC2_LF0)&0xffff
  176  000011d0  afa40000	sw	(r29),r4
  177  000011d4  20042710	addi	r4,r0,#10000
  178  000011d8  afa40004	sw	4(r29),r4
  179  000011dc  0c000108	jal	_Printf
  180  000011e0  54000000	nop; not filled.
  181  000011e4  23bd0010	addi	r29,r29,#16
  182  000011e8  23bdfff8	addi	r29,r29,#-8
  183  000011ec  2004270f	addi	r4,r0,#9999
  184  000011f0  afa40000	sw	(r29),r4
  185  000011f4  0ffffedc	jal	_factorial
  186  000011f8  54000000	nop; not filled.
  187  000011fc  20210001	addi	r1,r1,#1
  188  00001200  23bd0008	addi	r29,r29,#8
  189  00001204  23bdfff8	addi	r29,r29,#-8
  190  00001208  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  191  0000120c  24843074	addui	r4,r4,(LC3_LF0)&0xffff
  192  00001210  afa40000	sw	(r29),r4
  193  00001214  afa10004	sw	4(r29),r1
  194  00001218  0c0000cc	jal	_Printf
  195  0000121c  54000000	nop; not filled.
  196  00001220  afa20000	sw	(r29),r2
  197  00001224  0c000114	jal	_sem_signal
  198  00001228  54000000	nop; not filled.
  199  0000122c  23bd0008	addi	r29,r29,#8
  200  00001230  64210001	snei	r1,r1,#1
  201  00001234  10200038	beqz	r1,L22_LF0
  202  00001238  54000000	nop; not filled.
  203  0000123c  0c0000b4	jal	_getpid
  204  00001240  54000000	nop; not filled.
  205  00001244  23bdfff0	addi	r29,r29,#-16
  206  00001248  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  207  0000124c  24843090	addui	r4,r4,(LC4_LF0)&0xffff
  208  00001250  afa40000	sw	(r29),r4
  209  00001254  afa10004	sw	4(r29),r1
  210  00001258  afa20008	sw	8(r29),r2
  211  0000125c  0c000088	jal	_Printf
  212  00001260  54000000	nop; not filled.
  213  00001264  0c000188	jal	_Exit
  214  00001268  54000000	nop; not filled.
  215  0000126c  23bd0010	addi	r29,r29,#16
  216  00001270          	L22_LF0:
  217  00001270  0c000080	jal	_getpid
  218  00001274  54000000	nop; not filled.
  219  00001278  23bdfff8	addi	r29,r29,#-8
  220  0000127c  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  221  00001280  248430cc	addui	r4,r4,(LC5_LF0)&0xffff
  222  00001284  afa40000	sw	(r29),r4
  223  00001288  afa10004	sw	4(r29),r1
  224  0000128c  0c000058	jal	_Printf
  225  00001290  54000000	nop; not filled.
  226  00001294  23bd0008	addi	r29,r29,#8
  227  00001298  0c000f00	jal	_exit
  228  0000129c  54000000	nop
  229  000012a0          	.endproc _main
  230                      ;;;
  231                      ;;; Stub functions for DLX traps.
  232                      ;;;
  233                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  234                      ;;;
  235                      ;;; The traps such as Open and Close
  236                      ;;; (note the capital letters) are for use by user programs.  The traps
  237                      ;;; with names such as open and close (lower case) are for use by the OS.
  238                      ;;;
  241  000012a0          	.align 2
  243                      ;;; The following are the traps to be used by user-level programs
  244                      ;;;
  246  000012a0          	.align 2
  247  000012a0          	.proc _Open
  248  000012a0          	.global _Open
  249  000012a0          	_Open:
  250                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  251                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  252                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  253  000012a0  44000213	trap	#0x213
  254  000012a4  4be00000	jr	r31
  255  000012a8  54000000	nop
  256  000012ac          	.endproc _Open
  258  000012ac          	.proc _Close
  259  000012ac          	.global _Close
  260  000012ac          	_Close:
  261  000012ac  44000214	trap	#0x214
  262  000012b0  4be00000	jr	r31
  263  000012b4  54000000	nop
  264  000012b8          	.endproc _Close
  266  000012b8          	.proc _Read
  267  000012b8          	.global _Read
  268  000012b8          	_Read:
  269  000012b8  44000210	trap	#0x210
  270  000012bc  4be00000	jr	r31
  271  000012c0  54000000	nop
  272  000012c4          	.endproc _Read
  274  000012c4          	.proc _Write
  275  000012c4          	.global _Write
  276  000012c4          	_Write:
  277  000012c4  44000211	trap	#0x211
  278  000012c8  4be00000	jr	r31
  279  000012cc  54000000	nop
  280  000012d0          	.endproc _Write
  282  000012d0          	.proc _Lseek
  283  000012d0          	.global _Lseek
  284  000012d0          	_Lseek:
  285  000012d0  44000212	trap	#0x212
  286  000012d4  4be00000	jr	r31
  287  000012d8  54000000	nop
  288  000012dc          	.endproc _Lseek
  290  000012dc          	.proc _Putchar
  291  000012dc          	.global _Putchar
  292  000012dc          	_Putchar:
  293  000012dc  44000280	trap	#0x280
  294  000012e0  4be00000	jr	r31
  295  000012e4  54000000	nop
  296  000012e8          	.endproc _Putchar
  298  000012e8          	.proc _Printf
  299  000012e8          	.global _Printf
  300  000012e8          	_Printf:
  301  000012e8  44000201	trap	#0x201
  302  000012ec  4be00000	jr	r31
  303  000012f0  54000000	nop
  304  000012f4          	.endproc _Printf
  306  000012f4          	.proc _getpid
  307  000012f4          	.global _getpid
  308  000012f4          	_getpid:
  309  000012f4  44000431	trap	#0x431
  310  000012f8  4be00000	jr	r31
  311  000012fc  54000000	nop
  312  00001300          	.endproc _getpid
  314  00001300          	.proc _process_create
  315  00001300          	.global _process_create
  316  00001300          	_process_create:
  317  00001300  44000432	trap	#0x432
  318  00001304  4be00000	jr	r31
  319  00001308  54000000	nop
  320  0000130c          	.endproc _process_create
  322  0000130c          	.proc _shmget
  323  0000130c          	.global _shmget
  324  0000130c          	_shmget:
  325  0000130c  44000440	trap	#0x440
  326  00001310  4be00000	jr	r31
  327  00001314  54000000	nop
  328  00001318          	.endproc _shmget
  330  00001318          	.proc _shmat
  331  00001318          	.global _shmat
  332  00001318          	_shmat:
  333  00001318  44000441	trap	#0x441
  334  0000131c  4be00000	jr	r31
  335  00001320  54000000	nop
  336  00001324          	.endproc _shmat
  338  00001324          	.proc _sem_create
  339  00001324          	.global _sem_create
  340  00001324          	_sem_create:
  341  00001324  44000450	trap	#0x450
  342  00001328  4be00000	jr	r31
  343  0000132c  54000000	nop
  344  00001330          	.endproc _sem_create
  346  00001330          	.proc _sem_wait
  347  00001330          	.global _sem_wait
  348  00001330          	_sem_wait:
  349  00001330  44000451	trap	#0x451
  350  00001334  4be00000	jr	r31
  351  00001338  54000000	nop
  352  0000133c          	.endproc _sem_wait
  354  0000133c          	.proc _sem_signal
  355  0000133c          	.global _sem_signal
  356  0000133c          	_sem_signal:
  357  0000133c  44000452	trap	#0x452
  358  00001340  4be00000	jr	r31
  359  00001344  54000000	nop
  360  00001348          	.endproc _sem_signal
  362  00001348          	.proc _lock_create
  363  00001348          	.global _lock_create
  364  00001348          	_lock_create:
  365  00001348  44000453	trap	#0x453
  366  0000134c  4be00000	jr	r31
  367  00001350  54000000	nop
  368  00001354          	.endproc _lock_create
  370  00001354          	.proc _lock_acquire
  371  00001354          	.global _lock_acquire
  372  00001354          	_lock_acquire:
  373  00001354  44000454	trap	#0x454
  374  00001358  4be00000	jr	r31
  375  0000135c  54000000	nop
  376  00001360          	.endproc _lock_acquire
  378  00001360          	.proc _lock_release
  379  00001360          	.global _lock_release
  380  00001360          	_lock_release:
  381  00001360  44000455	trap	#0x455
  382  00001364  4be00000	jr	r31
  383  00001368  54000000	nop
  384  0000136c          	.endproc _lock_release
  386  0000136c          	.proc _cond_create
  387  0000136c          	.global _cond_create
  388  0000136c          	_cond_create:
  389  0000136c  44000456	trap	#0x456
  390  00001370  4be00000	jr	r31
  391  00001374  54000000	nop
  392  00001378          	.endproc _cond_create
  394  00001378          	.proc _cond_wait
  395  00001378          	.global _cond_wait
  396  00001378          	_cond_wait:
  397  00001378  44000457	trap	#0x457
  398  0000137c  4be00000	jr	r31
  399  00001380  54000000	nop
  400  00001384          	.endproc _cond_wait
  402  00001384          	.proc _cond_signal
  403  00001384          	.global _cond_signal
  404  00001384          	_cond_signal:
  405  00001384  44000458	trap	#0x458
  406  00001388  4be00000	jr	r31
  407  0000138c  54000000	nop
  408  00001390          	.endproc _cond_signal
  410  00001390          	.proc _cond_broadcast
  411  00001390          	.global _cond_broadcast
  412  00001390          	_cond_broadcast:
  413  00001390  44000459	trap	#0x459
  414  00001394  4be00000	jr	r31
  415  00001398  54000000	nop
  416  0000139c          	.endproc _cond_broadcast
  418  0000139c          	.proc _mbox_create
  419  0000139c          	.global _mbox_create
  420  0000139c          	_mbox_create:
  421  0000139c  44000460	trap	#0x460
  422  000013a0  4be00000	jr	r31
  423  000013a4  54000000	nop
  424  000013a8          	.endproc _mbox_create
  426  000013a8          	.proc _mbox_open
  427  000013a8          	.global _mbox_open
  428  000013a8          	_mbox_open:
  429  000013a8  44000461	trap	#0x461
  430  000013ac  4be00000	jr	r31
  431  000013b0  54000000	nop
  432  000013b4          	.endproc _mbox_open
  434  000013b4          	.proc _mbox_close
  435  000013b4          	.global _mbox_close
  436  000013b4          	_mbox_close:
  437  000013b4  44000462	trap	#0x462
  438  000013b8  4be00000	jr	r31
  439  000013bc  54000000	nop
  440  000013c0          	.endproc _mbox_close
  442  000013c0          	.proc _mbox_send
  443  000013c0          	.global _mbox_send
  444  000013c0          	_mbox_send:
  445  000013c0  44000463	trap	#0x463
  446  000013c4  4be00000	jr	r31
  447  000013c8  54000000	nop
  448  000013cc          	.endproc _mbox_send
  450  000013cc          	.proc _mbox_recv
  451  000013cc          	.global _mbox_recv
  452  000013cc          	_mbox_recv:
  453  000013cc  44000464	trap	#0x464
  454  000013d0  4be00000	jr	r31
  455  000013d4  54000000	nop
  456  000013d8          	.endproc _mbox_recv
  458  000013d8          	.proc _sleep
  459  000013d8          	.global _sleep
  460  000013d8          	_sleep:
  461  000013d8  44000465	trap	#0x465
  462  000013dc  4be00000	jr	r31
  463  000013e0  54000000	nop
  464  000013e4          	.endproc _sleep
  466  000013e4          	.proc _yield
  467  000013e4          	.global _yield
  468  000013e4          	_yield:
  469  000013e4  44000466	trap	#0x466
  470  000013e8  4be00000	jr	r31
  471  000013ec  54000000	nop
  472  000013f0          	.endproc _yield
  475  000013f0          	.proc _Exit
  476  000013f0          	.global _Exit
  477  000013f0          	_Exit:
  478  000013f0  44000500	trap	#0x500
  479  000013f4  4be00000	jr	r31
  480  000013f8  54000000	nop
  481  000013fc          	.endproc _Exit
  484  000013fc          	.proc _malloc
  485  000013fc          	.global _malloc
  486  000013fc          	_malloc:
  487  000013fc  44000467	trap	#0x467
  488  00001400  4be00000	jr	r31
  489  00001404          	.endproc _malloc
  492  00001404          	.proc _mfree
  493  00001404          	.global _mfree
  494  00001404          	_mfree:
  495  00001404  44000468	trap	#0x468
  496  00001408  4be00000	jr	r31
  497  0000140c          	.endproc _mfree
  498                      ; Compiled by GCC
  500  0000140c          	.align 2
  501  0000140c          	.proc _isspace
  502  0000140c          	.global _isspace
  503  0000140c          	_isspace:
  504                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  505  0000140c  afbefffc	sw	-4(r29),r30; push fp
  506  00001410  001df020	add	r30,r0,r29; fp = sp
  507  00001414  afbffff8	sw	-8(r29),r31; push ret addr
  508  00001418  2fbd0018	subui	r29,r29,#24; alloc local storage
  509  0000141c  afa20000	sw	0(r29),r2
  510  00001420  afa30004	sw	4(r29),r3
  511  00001424  afa40008	sw	8(r29),r4
  512  00001428  83c20003	lb	r2,3(r30)
  513  0000142c  20010000	addi	r1,r0,#0
  514  00001430  304300ff	andi	r3,r2,#0x00ff
  515  00001434  60640020	seqi	r4,r3,#32
  516  00001438  1480002c	bnez	r4,L3_LF2
  517  0000143c  54000000	nop; delay slot nop
  518  00001440  304300ff	andi	r3,r2,#0x00ff
  519  00001444  60640009	seqi	r4,r3,#9
  520  00001448  1480001c	bnez	r4,L3_LF2
  521  0000144c  54000000	nop; delay slot nop
  522  00001450  304300ff	andi	r3,r2,#0x00ff
  523  00001454  6064000a	seqi	r4,r3,#10
  524  00001458  1480000c	bnez	r4,L3_LF2
  525  0000145c  54000000	nop; delay slot nop
  526  00001460  08000008	j	L2_LF2
  527  00001464  54000000	nop; delay slot nop
  528  00001468          	L3_LF2:
  529  00001468  20010001	addi	r1,r0,#1
  530  0000146c          	L2_LF2:
  531  0000146c  08000004	j	L1_LF2
  532  00001470  54000000	nop; delay slot nop
  533  00001474          	L1_LF2:
  534  00001474  8fa20000	lw	r2,0(r29)
  535  00001478  8fa30004	lw	r3,4(r29)
  536  0000147c  8fa40008	lw	r4,8(r29)
  537  00001480  8fdffff8	lw	r31,-8(r30)
  538  00001484  001ee820	add	r29,r0,r30
  539  00001488  8fdefffc	lw	r30,-4(r30)
  540  0000148c  4be00000	jr	r31
  541  00001490  54000000	nop
  542  00001494          	.endproc _isspace
  543  00001494          	.align 2
  544  00001494          	.proc _isxdigit
  545  00001494          	.global _isxdigit
  546  00001494          	_isxdigit:
  547                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  548  00001494  afbefffc	sw	-4(r29),r30; push fp
  549  00001498  001df020	add	r30,r0,r29; fp = sp
  550  0000149c  afbffff8	sw	-8(r29),r31; push ret addr
  551  000014a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  552  000014a4  afa20000	sw	0(r29),r2
  553  000014a8  afa30004	sw	4(r29),r3
  554  000014ac  afa40008	sw	8(r29),r4
  555  000014b0  83c20003	lb	r2,3(r30)
  556  000014b4  20010000	addi	r1,r0,#0
  557  000014b8  304300ff	andi	r3,r2,#0x00ff
  558  000014bc  6c64002f	sgtui	r4,r3,#47
  559  000014c0  1080001c	beqz	r4,L7_LF2
  560  000014c4  54000000	nop; delay slot nop
  561  000014c8  304300ff	andi	r3,r2,#0x00ff
  562  000014cc  70640039	sleui	r4,r3,#57
  563  000014d0  1480005c	bnez	r4,L6_LF2
  564  000014d4  54000000	nop; delay slot nop
  565  000014d8  08000004	j	L7_LF2
  566  000014dc  54000000	nop; delay slot nop
  567  000014e0          	L7_LF2:
  568  000014e0  304300ff	andi	r3,r2,#0x00ff
  569  000014e4  6c640060	sgtui	r4,r3,#96
  570  000014e8  1080001c	beqz	r4,L8_LF2
  571  000014ec  54000000	nop; delay slot nop
  572  000014f0  304300ff	andi	r3,r2,#0x00ff
  573  000014f4  70640066	sleui	r4,r3,#102
  574  000014f8  14800034	bnez	r4,L6_LF2
  575  000014fc  54000000	nop; delay slot nop
  576  00001500  08000004	j	L8_LF2
  577  00001504  54000000	nop; delay slot nop
  578  00001508          	L8_LF2:
  579  00001508  304300ff	andi	r3,r2,#0x00ff
  580  0000150c  6c640040	sgtui	r4,r3,#64
  581  00001510  10800020	beqz	r4,L5_LF2
  582  00001514  54000000	nop; delay slot nop
  583  00001518  304300ff	andi	r3,r2,#0x00ff
  584  0000151c  70640041	sleui	r4,r3,#65
  585  00001520  1480000c	bnez	r4,L6_LF2
  586  00001524  54000000	nop; delay slot nop
  587  00001528  08000008	j	L5_LF2
  588  0000152c  54000000	nop; delay slot nop
  589  00001530          	L6_LF2:
  590  00001530  20010001	addi	r1,r0,#1
  591  00001534          	L5_LF2:
  592  00001534  08000004	j	L4_LF2
  593  00001538  54000000	nop; delay slot nop
  594  0000153c          	L4_LF2:
  595  0000153c  8fa20000	lw	r2,0(r29)
  596  00001540  8fa30004	lw	r3,4(r29)
  597  00001544  8fa40008	lw	r4,8(r29)
  598  00001548  8fdffff8	lw	r31,-8(r30)
  599  0000154c  001ee820	add	r29,r0,r30
  600  00001550  8fdefffc	lw	r30,-4(r30)
  601  00001554  4be00000	jr	r31
  602  00001558  54000000	nop
  603  0000155c          	.endproc _isxdigit
  604  0000155c          	.align 2
  605  0000155c          	.proc _dstrcpy
  606  0000155c          	.global _dstrcpy
  607  0000155c          	_dstrcpy:
  608                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  609  0000155c  afbefffc	sw	-4(r29),r30; push fp
  610  00001560  001df020	add	r30,r0,r29; fp = sp
  611  00001564  afbffff8	sw	-8(r29),r31; push ret addr
  612  00001568  2fbd0018	subui	r29,r29,#24; alloc local storage
  613  0000156c  afa20000	sw	0(r29),r2
  614  00001570  afa30004	sw	4(r29),r3
  615  00001574  8fc10000	lw	r1,(r30)
  616  00001578  afc1fff4	sw	-12(r30),r1
  617  0000157c          	L10_LF2:
  618  0000157c  8fc10000	lw	r1,(r30)
  619  00001580  20220001	addi	r2,r1,#1
  620  00001584  afc20000	sw	(r30),r2
  621  00001588  8fc20004	lw	r2,4(r30)
  622  0000158c  20430001	addi	r3,r2,#1
  623  00001590  afc30004	sw	4(r30),r3
  624  00001594  80420000	lb	r2,(r2)
  625  00001598  a0220000	sb	(r1),r2
  626  0000159c  a3c2fff3	sb	-13(r30),r2
  627  000015a0          	L12_LF2:
  628  000015a0  93c1fff3	lbu	r1,-13(r30)
  629  000015a4  64220000	snei	r2,r1,#0
  630  000015a8  1440000c	bnez	r2,L13_LF2
  631  000015ac  54000000	nop; delay slot nop
  632  000015b0  0800000c	j	L11_LF2
  633  000015b4  54000000	nop; delay slot nop
  634  000015b8          	L13_LF2:
  635  000015b8  0bffffc0	j	L10_LF2
  636  000015bc  54000000	nop; delay slot nop
  637  000015c0          	L11_LF2:
  638  000015c0  8fc1fff4	lw	r1,-12(r30)
  639  000015c4  08000004	j	L9_LF2
  640  000015c8  54000000	nop; delay slot nop
  641  000015cc          	L9_LF2:
  642  000015cc  8fa20000	lw	r2,0(r29)
  643  000015d0  8fa30004	lw	r3,4(r29)
  644  000015d4  8fdffff8	lw	r31,-8(r30)
  645  000015d8  001ee820	add	r29,r0,r30
  646  000015dc  8fdefffc	lw	r30,-4(r30)
  647  000015e0  4be00000	jr	r31
  648  000015e4  54000000	nop
  649  000015e8          	.endproc _dstrcpy
  650  000015e8          	.align 2
  651  000015e8          	.proc _dstrncpy
  652  000015e8          	.global _dstrncpy
  653  000015e8          	_dstrncpy:
  654                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  655  000015e8  afbefffc	sw	-4(r29),r30; push fp
  656  000015ec  001df020	add	r30,r0,r29; fp = sp
  657  000015f0  afbffff8	sw	-8(r29),r31; push ret addr
  658  000015f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  659  000015f8  afa20000	sw	0(r29),r2
  660  000015fc  afa30004	sw	4(r29),r3
  661  00001600  8fc10000	lw	r1,(r30)
  662  00001604  afc1fff4	sw	-12(r30),r1
  663  00001608          	L15_LF2:
  664  00001608  8fc10008	lw	r1,8(r30)
  665  0000160c  2022ffff	addi	r2,r1,#-1
  666  00001610  afc20008	sw	8(r30),r2
  667  00001614  70210000	slei	r1,r1,#0
  668  00001618  1020000c	beqz	r1,L18_LF2
  669  0000161c  54000000	nop; delay slot nop
  670  00001620  08000048	j	L16_LF2
  671  00001624  54000000	nop; delay slot nop
  672  00001628          	L18_LF2:
  673  00001628  8fc10000	lw	r1,(r30)
  674  0000162c  20220001	addi	r2,r1,#1
  675  00001630  afc20000	sw	(r30),r2
  676  00001634  8fc20004	lw	r2,4(r30)
  677  00001638  20430001	addi	r3,r2,#1
  678  0000163c  afc30004	sw	4(r30),r3
  679  00001640  80420000	lb	r2,(r2)
  680  00001644  a0220000	sb	(r1),r2
  681  00001648  a3c2fff3	sb	-13(r30),r2
  682  0000164c          	L17_LF2:
  683  0000164c  93c1fff3	lbu	r1,-13(r30)
  684  00001650  64220000	snei	r2,r1,#0
  685  00001654  1440000c	bnez	r2,L19_LF2
  686  00001658  54000000	nop; delay slot nop
  687  0000165c  0800000c	j	L16_LF2
  688  00001660  54000000	nop; delay slot nop
  689  00001664          	L19_LF2:
  690  00001664  0bffffa0	j	L15_LF2
  691  00001668  54000000	nop; delay slot nop
  692  0000166c          	L16_LF2:
  693  0000166c  8fc1fff4	lw	r1,-12(r30)
  694  00001670  08000004	j	L14_LF2
  695  00001674  54000000	nop; delay slot nop
  696  00001678          	L14_LF2:
  697  00001678  8fa20000	lw	r2,0(r29)
  698  0000167c  8fa30004	lw	r3,4(r29)
  699  00001680  8fdffff8	lw	r31,-8(r30)
  700  00001684  001ee820	add	r29,r0,r30
  701  00001688  8fdefffc	lw	r30,-4(r30)
  702  0000168c  4be00000	jr	r31
  703  00001690  54000000	nop
  704  00001694          	.endproc _dstrncpy
  705  00001694          	.align 2
  706  00001694          	.proc _dstrcat
  707  00001694          	.global _dstrcat
  708  00001694          	_dstrcat:
  709                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  710  00001694  afbefffc	sw	-4(r29),r30; push fp
  711  00001698  001df020	add	r30,r0,r29; fp = sp
  712  0000169c  afbffff8	sw	-8(r29),r31; push ret addr
  713  000016a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  714  000016a4  afa20000	sw	0(r29),r2
  715  000016a8  8fc10000	lw	r1,(r30)
  716  000016ac  afc1fff4	sw	-12(r30),r1
  717  000016b0          	L21_LF2:
  718  000016b0  8fc10000	lw	r1,(r30)
  719  000016b4  90220000	lbu	r2,(r1)
  720  000016b8  64410000	snei	r1,r2,#0
  721  000016bc  1420000c	bnez	r1,L23_LF2
  722  000016c0  54000000	nop; delay slot nop
  723  000016c4  0800001c	j	L22_LF2
  724  000016c8  54000000	nop; delay slot nop
  725  000016cc          	L23_LF2:
  726  000016cc  8fc20000	lw	r2,(r30)
  727  000016d0  20410001	addi	r1,r2,#1
  728  000016d4  00011020	add	r2,r0,r1
  729  000016d8  afc20000	sw	(r30),r2
  730  000016dc  0bffffd0	j	L21_LF2
  731  000016e0  54000000	nop; delay slot nop
  732  000016e4          	L22_LF2:
  733  000016e4  23bdfff8	addi	r29,r29,#-8
  734  000016e8  001d0820	add	r1,r0,r29
  735  000016ec  8fc20000	lw	r2,(r30)
  736  000016f0  ac220000	sw	(r1),r2
  737  000016f4  8fc20004	lw	r2,4(r30)
  738  000016f8  ac220004	sw	4(r1),r2
  739  000016fc  0ffffe5c	jal	_dstrcpy
  740  00001700  54000000	nop; delay slot nop
  741  00001704  23bd0008	addi	r29,r29,#8
  742  00001708  8fc1fff4	lw	r1,-12(r30)
  743  0000170c  08000004	j	L20_LF2
  744  00001710  54000000	nop; delay slot nop
  745  00001714          	L20_LF2:
  746  00001714  8fa20000	lw	r2,0(r29)
  747  00001718  8fdffff8	lw	r31,-8(r30)
  748  0000171c  001ee820	add	r29,r0,r30
  749  00001720  8fdefffc	lw	r30,-4(r30)
  750  00001724  4be00000	jr	r31
  751  00001728  54000000	nop
  752  0000172c          	.endproc _dstrcat
  753  0000172c          	.align 2
  754  0000172c          	.proc _dstrncmp
  755  0000172c          	.global _dstrncmp
  756  0000172c          	_dstrncmp:
  757                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  758  0000172c  afbefffc	sw	-4(r29),r30; push fp
  759  00001730  001df020	add	r30,r0,r29; fp = sp
  760  00001734  afbffff8	sw	-8(r29),r31; push ret addr
  761  00001738  2fbd0018	subui	r29,r29,#24; alloc local storage
  762  0000173c  afa20000	sw	0(r29),r2
  763  00001740  afa30004	sw	4(r29),r3
  764  00001744  54000000	nop
  765  00001748  20010000	addi	r1,r0,#0
  766  0000174c  afc1fff4	sw	-12(r30),r1
  767  00001750          	L25_LF2:
  768  00001750  8fc1fff4	lw	r1,-12(r30)
  769  00001754  8fc20008	lw	r2,8(r30)
  770  00001758  0022082a	slt	r1,r1,r2
  771  0000175c  1420000c	bnez	r1,L28_LF2
  772  00001760  54000000	nop; delay slot nop
  773  00001764  08000088	j	L26_LF2
  774  00001768  54000000	nop; delay slot nop
  775  0000176c          	L28_LF2:
  776  0000176c  8fc10004	lw	r1,4(r30)
  777  00001770  90220000	lbu	r2,(r1)
  778  00001774  64410000	snei	r1,r2,#0
  779  00001778  14200018	bnez	r1,L29_LF2
  780  0000177c  54000000	nop; delay slot nop
  781  00001780  20010000	addi	r1,r0,#0
  782  00001784  080000d8	j	L24_LF2
  783  00001788  54000000	nop; delay slot nop
  784  0000178c  08000028	j	L30_LF2
  785  00001790  54000000	nop; delay slot nop
  786  00001794          	L29_LF2:
  787  00001794  8fc10000	lw	r1,(r30)
  788  00001798  8fc20004	lw	r2,4(r30)
  789  0000179c  90210000	lbu	r1,(r1)
  790  000017a0  90420000	lbu	r2,(r2)
  791  000017a4  00220829	sne	r1,r1,r2
  792  000017a8  1020000c	beqz	r1,L30_LF2
  793  000017ac  54000000	nop; delay slot nop
  794  000017b0  0800003c	j	L26_LF2
  795  000017b4  54000000	nop; delay slot nop
  796  000017b8          	L31_LF2:
  797  000017b8          	L30_LF2:
  798  000017b8  8fc20000	lw	r2,(r30)
  799  000017bc  20410001	addi	r1,r2,#1
  800  000017c0  00011020	add	r2,r0,r1
  801  000017c4  afc20000	sw	(r30),r2
  802  000017c8  8fc20004	lw	r2,4(r30)
  803  000017cc  20410001	addi	r1,r2,#1
  804  000017d0  00011020	add	r2,r0,r1
  805  000017d4  afc20004	sw	4(r30),r2
  806  000017d8          	L27_LF2:
  807  000017d8  8fc2fff4	lw	r2,-12(r30)
  808  000017dc  20410001	addi	r1,r2,#1
  809  000017e0  00011020	add	r2,r0,r1
  810  000017e4  afc2fff4	sw	-12(r30),r2
  811  000017e8  0bffff64	j	L25_LF2
  812  000017ec  54000000	nop; delay slot nop
  813  000017f0          	L26_LF2:
  814  000017f0  8fc1fff4	lw	r1,-12(r30)
  815  000017f4  8fc20008	lw	r2,8(r30)
  816  000017f8  00220828	seq	r1,r1,r2
  817  000017fc  10200018	beqz	r1,L32_LF2
  818  00001800  54000000	nop; delay slot nop
  819  00001804  20010000	addi	r1,r0,#0
  820  00001808  08000054	j	L24_LF2
  821  0000180c  54000000	nop; delay slot nop
  822  00001810  0800004c	j	L33_LF2
  823  00001814  54000000	nop; delay slot nop
  824  00001818          	L32_LF2:
  825  00001818  8fc20000	lw	r2,(r30)
  826  0000181c  90410000	lbu	r1,(r2)
  827  00001820  8fc20004	lw	r2,4(r30)
  828  00001824  90430000	lbu	r3,(r2)
  829  00001828  00230822	sub	r1,r1,r3
  830  0000182c  74220000	sgei	r2,r1,#0
  831  00001830  10400020	beqz	r2,L34_LF2
  832  00001834  54000000	nop; delay slot nop
  833  00001838  8fc10000	lw	r1,(r30)
  834  0000183c  8fc20004	lw	r2,4(r30)
  835  00001840  90210000	lbu	r1,(r1)
  836  00001844  90420000	lbu	r2,(r2)
  837  00001848  00220829	sne	r1,r1,r2
  838  0000184c  08000008	j	L35_LF2
  839  00001850  54000000	nop; delay slot nop
  840  00001854          	L34_LF2:
  841  00001854  2001ffff	addi	r1,r0,#-1
  842  00001858          	L35_LF2:
  843  00001858  08000004	j	L24_LF2
  844  0000185c  54000000	nop; delay slot nop
  845  00001860          	L33_LF2:
  846  00001860          	L24_LF2:
  847  00001860  8fa20000	lw	r2,0(r29)
  848  00001864  8fa30004	lw	r3,4(r29)
  849  00001868  8fdffff8	lw	r31,-8(r30)
  850  0000186c  001ee820	add	r29,r0,r30
  851  00001870  8fdefffc	lw	r30,-4(r30)
  852  00001874  4be00000	jr	r31
  853  00001878  54000000	nop
  854  0000187c          	.endproc _dstrncmp
  855  0000187c          	.align 2
  856  0000187c          	.proc _dstrlen
  857  0000187c          	.global _dstrlen
  858  0000187c          	_dstrlen:
  859                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  860  0000187c  afbefffc	sw	-4(r29),r30; push fp
  861  00001880  001df020	add	r30,r0,r29; fp = sp
  862  00001884  afbffff8	sw	-8(r29),r31; push ret addr
  863  00001888  2fbd0018	subui	r29,r29,#24; alloc local storage
  864  0000188c  afa20000	sw	0(r29),r2
  865  00001890  20010000	addi	r1,r0,#0
  866  00001894  afc1fff4	sw	-12(r30),r1
  867  00001898          	L37_LF2:
  868  00001898  8fc10000	lw	r1,(r30)
  869  0000189c  20220001	addi	r2,r1,#1
  870  000018a0  afc20000	sw	(r30),r2
  871  000018a4  90210000	lbu	r1,(r1)
  872  000018a8  64220000	snei	r2,r1,#0
  873  000018ac  1440000c	bnez	r2,L39_LF2
  874  000018b0  54000000	nop; delay slot nop
  875  000018b4  0800001c	j	L38_LF2
  876  000018b8  54000000	nop; delay slot nop
  877  000018bc          	L39_LF2:
  878  000018bc  8fc2fff4	lw	r2,-12(r30)
  879  000018c0  20410001	addi	r1,r2,#1
  880  000018c4  00011020	add	r2,r0,r1
  881  000018c8  afc2fff4	sw	-12(r30),r2
  882  000018cc  0bffffc8	j	L37_LF2
  883  000018d0  54000000	nop; delay slot nop
  884  000018d4          	L38_LF2:
  885  000018d4  8fc1fff4	lw	r1,-12(r30)
  886  000018d8  08000004	j	L36_LF2
  887  000018dc  54000000	nop; delay slot nop
  888  000018e0          	L36_LF2:
  889  000018e0  8fa20000	lw	r2,0(r29)
  890  000018e4  8fdffff8	lw	r31,-8(r30)
  891  000018e8  001ee820	add	r29,r0,r30
  892  000018ec  8fdefffc	lw	r30,-4(r30)
  893  000018f0  4be00000	jr	r31
  894  000018f4  54000000	nop
  895  000018f8          	.endproc _dstrlen
  896  000018f8          	.align 2
  897  000018f8          	.proc _dstrstr
  898  000018f8          	.global _dstrstr
  899  000018f8          	_dstrstr:
  900                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  901  000018f8  afbefffc	sw	-4(r29),r30; push fp
  902  000018fc  001df020	add	r30,r0,r29; fp = sp
  903  00001900  afbffff8	sw	-8(r29),r31; push ret addr
  904  00001904  2fbd0018	subui	r29,r29,#24; alloc local storage
  905  00001908  afa20000	sw	0(r29),r2
  906  0000190c  23bdfff8	addi	r29,r29,#-8
  907  00001910  001d0820	add	r1,r0,r29
  908  00001914  8fc20004	lw	r2,4(r30)
  909  00001918  ac220000	sw	(r1),r2
  910  0000191c  0fffff5c	jal	_dstrlen
  911  00001920  54000000	nop; delay slot nop
  912  00001924  23bd0008	addi	r29,r29,#8
  913  00001928  afc1fff4	sw	-12(r30),r1
  914  0000192c          	L41_LF2:
  915  0000192c  8fc10000	lw	r1,(r30)
  916  00001930  90220000	lbu	r2,(r1)
  917  00001934  64410000	snei	r1,r2,#0
  918  00001938  1420000c	bnez	r1,L43_LF2
  919  0000193c  54000000	nop; delay slot nop
  920  00001940  08000060	j	L42_LF2
  921  00001944  54000000	nop; delay slot nop
  922  00001948          	L43_LF2:
  923  00001948  23bdfff0	addi	r29,r29,#-16
  924  0000194c  001d0820	add	r1,r0,r29
  925  00001950  8fc20000	lw	r2,(r30)
  926  00001954  ac220000	sw	(r1),r2
  927  00001958  8fc20004	lw	r2,4(r30)
  928  0000195c  ac220004	sw	4(r1),r2
  929  00001960  8fc2fff4	lw	r2,-12(r30)
  930  00001964  ac220008	sw	8(r1),r2
  931  00001968  0ffffdc0	jal	_dstrncmp
  932  0000196c  54000000	nop; delay slot nop
  933  00001970  23bd0010	addi	r29,r29,#16
  934  00001974  64220000	snei	r2,r1,#0
  935  00001978  14400010	bnez	r2,L44_LF2
  936  0000197c  54000000	nop; delay slot nop
  937  00001980  8fc10000	lw	r1,(r30)
  938  00001984  08000028	j	L40_LF2
  939  00001988  54000000	nop; delay slot nop
  940  0000198c          	L44_LF2:
  941  0000198c  8fc20000	lw	r2,(r30)
  942  00001990  20410001	addi	r1,r2,#1
  943  00001994  00011020	add	r2,r0,r1
  944  00001998  afc20000	sw	(r30),r2
  945  0000199c  0bffff8c	j	L41_LF2
  946  000019a0  54000000	nop; delay slot nop
  947  000019a4          	L42_LF2:
  948  000019a4  20010000	addi	r1,r0,#0
  949  000019a8  08000004	j	L40_LF2
  950  000019ac  54000000	nop; delay slot nop
  951  000019b0          	L40_LF2:
  952  000019b0  8fa20000	lw	r2,0(r29)
  953  000019b4  8fdffff8	lw	r31,-8(r30)
  954  000019b8  001ee820	add	r29,r0,r30
  955  000019bc  8fdefffc	lw	r30,-4(r30)
  956  000019c0  4be00000	jr	r31
  957  000019c4  54000000	nop
  958  000019c8          	.endproc _dstrstr
  959  000019c8          	.align 2
  960  000019c8          	.proc _dmindex
  961  000019c8          	.global _dmindex
  962  000019c8          	_dmindex:
  963                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  964  000019c8  afbefffc	sw	-4(r29),r30; push fp
  965  000019cc  001df020	add	r30,r0,r29; fp = sp
  966  000019d0  afbffff8	sw	-8(r29),r31; push ret addr
  967  000019d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  968  000019d8  afa20000	sw	0(r29),r2
  969  000019dc  54000000	nop
  970  000019e0          	L46_LF2:
  971  000019e0  8fc10000	lw	r1,(r30)
  972  000019e4  90220000	lbu	r2,(r1)
  973  000019e8  64410000	snei	r1,r2,#0
  974  000019ec  1420000c	bnez	r1,L48_LF2
  975  000019f0  54000000	nop; delay slot nop
  976  000019f4  08000070	j	L47_LF2
  977  000019f8  54000000	nop; delay slot nop
  978  000019fc          	L48_LF2:
  979  000019fc  8fc10004	lw	r1,4(r30)
  980  00001a00  afc1fff4	sw	-12(r30),r1
  981  00001a04          	L49_LF2:
  982  00001a04  8fc1fff4	lw	r1,-12(r30)
  983  00001a08  90220000	lbu	r2,(r1)
  984  00001a0c  64410000	snei	r1,r2,#0
  985  00001a10  1420000c	bnez	r1,L52_LF2
  986  00001a14  54000000	nop; delay slot nop
  987  00001a18  08000044	j	L50_LF2
  988  00001a1c  54000000	nop; delay slot nop
  989  00001a20          	L52_LF2:
  990  00001a20  8fc10000	lw	r1,(r30)
  991  00001a24  8fc2fff4	lw	r2,-12(r30)
  992  00001a28  90210000	lbu	r1,(r1)
  993  00001a2c  90420000	lbu	r2,(r2)
  994  00001a30  00220828	seq	r1,r1,r2
  995  00001a34  10200010	beqz	r1,L51_LF2
  996  00001a38  54000000	nop; delay slot nop
  997  00001a3c  8fc10000	lw	r1,(r30)
  998  00001a40  08000030	j	L45_LF2
  999  00001a44  54000000	nop; delay slot nop
 1000  00001a48          	L53_LF2:
 1001  00001a48          	L51_LF2:
 1002  00001a48  8fc2fff4	lw	r2,-12(r30)
 1003  00001a4c  20410001	addi	r1,r2,#1
 1004  00001a50  00011020	add	r2,r0,r1
 1005  00001a54  afc2fff4	sw	-12(r30),r2
 1006  00001a58  0bffffa8	j	L49_LF2
 1007  00001a5c  54000000	nop; delay slot nop
 1008  00001a60          	L50_LF2:
 1009  00001a60  0bffff7c	j	L46_LF2
 1010  00001a64  54000000	nop; delay slot nop
 1011  00001a68          	L47_LF2:
 1012  00001a68  20010000	addi	r1,r0,#0
 1013  00001a6c  08000004	j	L45_LF2
 1014  00001a70  54000000	nop; delay slot nop
 1015  00001a74          	L45_LF2:
 1016  00001a74  8fa20000	lw	r2,0(r29)
 1017  00001a78  8fdffff8	lw	r31,-8(r30)
 1018  00001a7c  001ee820	add	r29,r0,r30
 1019  00001a80  8fdefffc	lw	r30,-4(r30)
 1020  00001a84  4be00000	jr	r31
 1021  00001a88  54000000	nop
 1022  00001a8c          	.endproc _dmindex
 1023  00001a8c          	.align 2
 1024  00001a8c          	.proc _dindex
 1025  00001a8c          	.global _dindex
 1026  00001a8c          	_dindex:
 1027                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1028  00001a8c  afbefffc	sw	-4(r29),r30; push fp
 1029  00001a90  001df020	add	r30,r0,r29; fp = sp
 1030  00001a94  afbffff8	sw	-8(r29),r31; push ret addr
 1031  00001a98  2fbd0010	subui	r29,r29,#16; alloc local storage
 1032  00001a9c  afa20000	sw	0(r29),r2
 1033  00001aa0  54000000	nop
 1034  00001aa4          	L55_LF2:
 1035  00001aa4  8fc10000	lw	r1,(r30)
 1036  00001aa8  90220000	lbu	r2,(r1)
 1037  00001aac  64410000	snei	r1,r2,#0
 1038  00001ab0  1420000c	bnez	r1,L57_LF2
 1039  00001ab4  54000000	nop; delay slot nop
 1040  00001ab8  08000040	j	L56_LF2
 1041  00001abc  54000000	nop; delay slot nop
 1042  00001ac0          	L57_LF2:
 1043  00001ac0  8fc10000	lw	r1,(r30)
 1044  00001ac4  90220000	lbu	r2,(r1)
 1045  00001ac8  8fc10004	lw	r1,4(r30)
 1046  00001acc  00411028	seq	r2,r2,r1
 1047  00001ad0  10400010	beqz	r2,L58_LF2
 1048  00001ad4  54000000	nop; delay slot nop
 1049  00001ad8  8fc10000	lw	r1,(r30)
 1050  00001adc  08000028	j	L54_LF2
 1051  00001ae0  54000000	nop; delay slot nop
 1052  00001ae4          	L58_LF2:
 1053  00001ae4  8fc20000	lw	r2,(r30)
 1054  00001ae8  20410001	addi	r1,r2,#1
 1055  00001aec  00011020	add	r2,r0,r1
 1056  00001af0  afc20000	sw	(r30),r2
 1057  00001af4  0bffffac	j	L55_LF2
 1058  00001af8  54000000	nop; delay slot nop
 1059  00001afc          	L56_LF2:
 1060  00001afc  20010000	addi	r1,r0,#0
 1061  00001b00  08000004	j	L54_LF2
 1062  00001b04  54000000	nop; delay slot nop
 1063  00001b08          	L54_LF2:
 1064  00001b08  8fa20000	lw	r2,0(r29)
 1065  00001b0c  8fdffff8	lw	r31,-8(r30)
 1066  00001b10  001ee820	add	r29,r0,r30
 1067  00001b14  8fdefffc	lw	r30,-4(r30)
 1068  00001b18  4be00000	jr	r31
 1069  00001b1c  54000000	nop
 1070  00001b20          	.endproc _dindex
 1071  00001b20          	.align 2
 1072  00001b20          	.proc _ditoa
 1073  00001b20          	.global _ditoa
 1074  00001b20          	_ditoa:
 1075                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1076  00001b20  afbefffc	sw	-4(r29),r30; push fp
 1077  00001b24  001df020	add	r30,r0,r29; fp = sp
 1078  00001b28  afbffff8	sw	-8(r29),r31; push ret addr
 1079  00001b2c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1080  00001b30  afa20000	sw	0(r29),r2
 1081  00001b34  afa30004	sw	4(r29),r3
 1082  00001b38  8fc10000	lw	r1,(r30)
 1083  00001b3c  68220000	slti	r2,r1,#0
 1084  00001b40  1040002c	beqz	r2,L60_LF2
 1085  00001b44  54000000	nop; delay slot nop
 1086  00001b48  8fc10004	lw	r1,4(r30)
 1087  00001b4c  20220001	addi	r2,r1,#1
 1088  00001b50  afc20004	sw	4(r30),r2
 1089  00001b54  2002002d	addi	r2,r0,(#0x2d)&0xff
 1090  00001b58  a0220000	sb	(r1),r2
 1091  00001b5c  8fc10000	lw	r1,(r30)
 1092  00001b60  00011022	sub	r2,r0,r1
 1093  00001b64  afc20000	sw	(r30),r2
 1094  00001b68  08000118	j	L61_LF2
 1095  00001b6c  54000000	nop; delay slot nop
 1096  00001b70          	L60_LF2:
 1097  00001b70  8fc10000	lw	r1,(r30)
 1098  00001b74  64220000	snei	r2,r1,#0
 1099  00001b78  14400020	bnez	r2,L62_LF2
 1100  00001b7c  54000000	nop; delay slot nop
 1101  00001b80  8fc10004	lw	r1,4(r30)
 1102  00001b84  20220001	addi	r2,r1,#1
 1103  00001b88  afc20004	sw	4(r30),r2
 1104  00001b8c  20020030	addi	r2,r0,(#0x30)&0xff
 1105  00001b90  a0220000	sb	(r1),r2
 1106  00001b94  080000ec	j	L61_LF2
 1107  00001b98  54000000	nop; delay slot nop
 1108  00001b9c          	L62_LF2:
 1109  00001b9c  20010001	addi	r1,r0,#1
 1110  00001ba0  afc1fff4	sw	-12(r30),r1
 1111  00001ba4          	L64_LF2:
 1112  00001ba4  8fc1fff4	lw	r1,-12(r30)
 1113  00001ba8  8fc20000	lw	r2,(r30)
 1114  00001bac  0022082c	sle	r1,r1,r2
 1115  00001bb0  1420000c	bnez	r1,L66_LF2
 1116  00001bb4  54000000	nop; delay slot nop
 1117  00001bb8  08000024	j	L65_LF2
 1118  00001bbc  54000000	nop; delay slot nop
 1119  00001bc0          	L67_LF2:
 1120  00001bc0          	L66_LF2:
 1121  00001bc0  8fc1fff4	lw	r1,-12(r30)
 1122  00001bc4  00011820	add	r3,r0,r1
 1123  00001bc8  50620002	slli	r2,r3,#0x2
 1124  00001bcc  00411020	add	r2,r2,r1
 1125  00001bd0  50410001	slli	r1,r2,#0x1
 1126  00001bd4  afc1fff4	sw	-12(r30),r1
 1127  00001bd8  0bffffc8	j	L64_LF2
 1128  00001bdc  54000000	nop; delay slot nop
 1129  00001be0          	L65_LF2:
 1130  00001be0  54000000	nop
 1131  00001be4          	L68_LF2:
 1132  00001be4  8fc1fff4	lw	r1,-12(r30)
 1133  00001be8  2002000a	addi	r2,r0,#10
 1134  00001bec  00200035	movi2fp	f0,r1
 1135  00001bf0  00400835	movi2fp	f1,r2
 1136  00001bf4  0401000f	div	f0,f0,f1
 1137  00001bf8  00000834	movfp2i	r1,f0
 1138  00001bfc  afc1fff4	sw	-12(r30),r1
 1139  00001c00  8fc10004	lw	r1,4(r30)
 1140  00001c04  20220001	addi	r2,r1,#1
 1141  00001c08  afc20004	sw	4(r30),r2
 1142  00001c0c  8fc20000	lw	r2,(r30)
 1143  00001c10  8fc3fff4	lw	r3,-12(r30)
 1144  00001c14  00400035	movi2fp	f0,r2
 1145  00001c18  00600835	movi2fp	f1,r3
 1146  00001c1c  0401000f	div	f0,f0,f1
 1147  00001c20  00001034	movfp2i	r2,f0
 1148  00001c24  00021820	add	r3,r0,r2
 1149  00001c28  20620030	addi	r2,r3,#48
 1150  00001c2c  a0220000	sb	(r1),r2
 1151  00001c30  8fc10000	lw	r1,(r30)
 1152  00001c34  8fc3fff4	lw	r3,-12(r30)
 1153  00001c38  00200035	movi2fp	f0,r1
 1154  00001c3c  00600835	movi2fp	f1,r3
 1155  00001c40  0401000f	div	f0,f0,f1
 1156  00001c44  00001034	movfp2i	r2,f0
 1157  00001c48  8fc3fff4	lw	r3,-12(r30)
 1158  00001c4c  00400035	movi2fp	f0,r2
 1159  00001c50  00600835	movi2fp	f1,r3
 1160  00001c54  0401000e	mult	f0,f0,f1
 1161  00001c58  00001034	movfp2i	r2,f0
 1162  00001c5c  00220822	sub	r1,r1,r2
 1163  00001c60  afc10000	sw	(r30),r1
 1164  00001c64          	L70_LF2:
 1165  00001c64  8fc1fff4	lw	r1,-12(r30)
 1166  00001c68  6c220001	sgti	r2,r1,#1
 1167  00001c6c  1440000c	bnez	r2,L71_LF2
 1168  00001c70  54000000	nop; delay slot nop
 1169  00001c74  0800000c	j	L61_LF2
 1170  00001c78  54000000	nop; delay slot nop
 1171  00001c7c          	L71_LF2:
 1172  00001c7c  0bffff64	j	L68_LF2
 1173  00001c80  54000000	nop; delay slot nop
 1174  00001c84          	L69_LF2:
 1175  00001c84          	L63_LF2:
 1176  00001c84          	L61_LF2:
 1177  00001c84  8fc10004	lw	r1,4(r30)
 1178  00001c88  20020000	addi	r2,r0,(#0x0)&0xff
 1179  00001c8c  a0220000	sb	(r1),r2
 1180  00001c90          	L59_LF2:
 1181  00001c90  8fa20000	lw	r2,0(r29)
 1182  00001c94  8fa30004	lw	r3,4(r29)
 1183  00001c98  8fdffff8	lw	r31,-8(r30)
 1184  00001c9c  001ee820	add	r29,r0,r30
 1185  00001ca0  8fdefffc	lw	r30,-4(r30)
 1186  00001ca4  4be00000	jr	r31
 1187  00001ca8  54000000	nop
 1188  00001cac          	.endproc _ditoa
 1189  00001cac          	.align 2
 1190  00001cac          	.proc _dstrtol
 1191  00001cac          	.global _dstrtol
 1192  00001cac          	_dstrtol:
 1193                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1194  00001cac  afbefffc	sw	-4(r29),r30; push fp
 1195  00001cb0  001df020	add	r30,r0,r29; fp = sp
 1196  00001cb4  afbffff8	sw	-8(r29),r31; push ret addr
 1197  00001cb8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1198  00001cbc  afa20000	sw	0(r29),r2
 1199  00001cc0  20010000	addi	r1,r0,#0
 1200  00001cc4  afc1fff4	sw	-12(r30),r1
 1201  00001cc8          	L73_LF2:
 1202  00001cc8  8fc10000	lw	r1,(r30)
 1203  00001ccc  90220000	lbu	r2,(r1)
 1204  00001cd0  60410020	seqi	r1,r2,#32
 1205  00001cd4  14200034	bnez	r1,L75_LF2
 1206  00001cd8  54000000	nop; delay slot nop
 1207  00001cdc  8fc10000	lw	r1,(r30)
 1208  00001ce0  90220000	lbu	r2,(r1)
 1209  00001ce4  60410009	seqi	r1,r2,#9
 1210  00001ce8  14200020	bnez	r1,L75_LF2
 1211  00001cec  54000000	nop; delay slot nop
 1212  00001cf0  8fc10000	lw	r1,(r30)
 1213  00001cf4  90220000	lbu	r2,(r1)
 1214  00001cf8  6041000a	seqi	r1,r2,#10
 1215  00001cfc  1420000c	bnez	r1,L75_LF2
 1216  00001d00  54000000	nop; delay slot nop
 1217  00001d04  0800001c	j	L74_LF2
 1218  00001d08  54000000	nop; delay slot nop
 1219  00001d0c          	L75_LF2:
 1220  00001d0c  8fc20000	lw	r2,(r30)
 1221  00001d10  20410001	addi	r1,r2,#1
 1222  00001d14  00011020	add	r2,r0,r1
 1223  00001d18  afc20000	sw	(r30),r2
 1224  00001d1c  0bffffa8	j	L73_LF2
 1225  00001d20  54000000	nop; delay slot nop
 1226  00001d24          	L74_LF2:
 1227  00001d24  8fc10004	lw	r1,4(r30)
 1228  00001d28  64220000	snei	r2,r1,#0
 1229  00001d2c  10400010	beqz	r2,L76_LF2
 1230  00001d30  54000000	nop; delay slot nop
 1231  00001d34  8fc10004	lw	r1,4(r30)
 1232  00001d38  8fc20000	lw	r2,(r30)
 1233  00001d3c  ac220000	sw	(r1),r2
 1234  00001d40          	L76_LF2:
 1235  00001d40  8fc10000	lw	r1,(r30)
 1236  00001d44  90220000	lbu	r2,(r1)
 1237  00001d48  64410000	snei	r1,r2,#0
 1238  00001d4c  14200010	bnez	r1,L77_LF2
 1239  00001d50  54000000	nop; delay slot nop
 1240  00001d54  8fc1fff4	lw	r1,-12(r30)
 1241  00001d58  08000294	j	L72_LF2
 1242  00001d5c  54000000	nop; delay slot nop
 1243  00001d60          	L77_LF2:
 1244  00001d60  8fc10000	lw	r1,(r30)
 1245  00001d64  90220000	lbu	r2,(r1)
 1246  00001d68  6041002d	seqi	r1,r2,#45
 1247  00001d6c  10200024	beqz	r1,L78_LF2
 1248  00001d70  54000000	nop; delay slot nop
 1249  00001d74  2001ffff	addi	r1,r0,#-1
 1250  00001d78  afc1ffec	sw	-20(r30),r1
 1251  00001d7c  8fc20000	lw	r2,(r30)
 1252  00001d80  20410001	addi	r1,r2,#1
 1253  00001d84  00011020	add	r2,r0,r1
 1254  00001d88  afc20000	sw	(r30),r2
 1255  00001d8c  0800000c	j	L79_LF2
 1256  00001d90  54000000	nop; delay slot nop
 1257  00001d94          	L78_LF2:
 1258  00001d94  20010001	addi	r1,r0,#1
 1259  00001d98  afc1ffec	sw	-20(r30),r1
 1260  00001d9c          	L79_LF2:
 1261  00001d9c  8fc10008	lw	r1,8(r30)
 1262  00001da0  64220000	snei	r2,r1,#0
 1263  00001da4  14400090	bnez	r2,L80_LF2
 1264  00001da8  54000000	nop; delay slot nop
 1265  00001dac  8fc10000	lw	r1,(r30)
 1266  00001db0  90220000	lbu	r2,(r1)
 1267  00001db4  60410030	seqi	r1,r2,#48
 1268  00001db8  10200074	beqz	r1,L81_LF2
 1269  00001dbc  54000000	nop; delay slot nop
 1270  00001dc0  8fc20000	lw	r2,(r30)
 1271  00001dc4  20410001	addi	r1,r2,#1
 1272  00001dc8  00011020	add	r2,r0,r1
 1273  00001dcc  afc20000	sw	(r30),r2
 1274  00001dd0  8fc10000	lw	r1,(r30)
 1275  00001dd4  90220000	lbu	r2,(r1)
 1276  00001dd8  60410078	seqi	r1,r2,#120
 1277  00001ddc  14200020	bnez	r1,L83_LF2
 1278  00001de0  54000000	nop; delay slot nop
 1279  00001de4  8fc10000	lw	r1,(r30)
 1280  00001de8  90220000	lbu	r2,(r1)
 1281  00001dec  60410058	seqi	r1,r2,#88
 1282  00001df0  1420000c	bnez	r1,L83_LF2
 1283  00001df4  54000000	nop; delay slot nop
 1284  00001df8  08000024	j	L82_LF2
 1285  00001dfc  54000000	nop; delay slot nop
 1286  00001e00          	L83_LF2:
 1287  00001e00  20010010	addi	r1,r0,#16
 1288  00001e04  afc10008	sw	8(r30),r1
 1289  00001e08  8fc20000	lw	r2,(r30)
 1290  00001e0c  20410001	addi	r1,r2,#1
 1291  00001e10  00011020	add	r2,r0,r1
 1292  00001e14  afc20000	sw	(r30),r2
 1293  00001e18  0800000c	j	L84_LF2
 1294  00001e1c  54000000	nop; delay slot nop
 1295  00001e20          	L82_LF2:
 1296  00001e20  20010008	addi	r1,r0,#8
 1297  00001e24  afc10008	sw	8(r30),r1
 1298  00001e28          	L84_LF2:
 1299  00001e28  0800000c	j	L80_LF2
 1300  00001e2c  54000000	nop; delay slot nop
 1301  00001e30          	L81_LF2:
 1302  00001e30  2001000a	addi	r1,r0,#10
 1303  00001e34  afc10008	sw	8(r30),r1
 1304  00001e38          	L85_LF2:
 1305  00001e38          	L80_LF2:
 1306  00001e38  8fc10008	lw	r1,8(r30)
 1307  00001e3c  70220000	slei	r2,r1,#0
 1308  00001e40  1440001c	bnez	r2,L87_LF2
 1309  00001e44  54000000	nop; delay slot nop
 1310  00001e48  8fc10008	lw	r1,8(r30)
 1311  00001e4c  6c220010	sgti	r2,r1,#16
 1312  00001e50  1440000c	bnez	r2,L87_LF2
 1313  00001e54  54000000	nop; delay slot nop
 1314  00001e58  08000010	j	L86_LF2
 1315  00001e5c  54000000	nop; delay slot nop
 1316  00001e60          	L87_LF2:
 1317  00001e60  8fc1fff4	lw	r1,-12(r30)
 1318  00001e64  08000188	j	L72_LF2
 1319  00001e68  54000000	nop; delay slot nop
 1320  00001e6c          	L86_LF2:
 1321  00001e6c  54000000	nop
 1322  00001e70          	L88_LF2:
 1323  00001e70  8fc10000	lw	r1,(r30)
 1324  00001e74  90220000	lbu	r2,(r1)
 1325  00001e78  6c41002f	sgtui	r1,r2,#47
 1326  00001e7c  10200030	beqz	r1,L91_LF2
 1327  00001e80  54000000	nop; delay slot nop
 1328  00001e84  8fc10000	lw	r1,(r30)
 1329  00001e88  90220000	lbu	r2,(r1)
 1330  00001e8c  70410039	sleui	r1,r2,#57
 1331  00001e90  1020001c	beqz	r1,L91_LF2
 1332  00001e94  54000000	nop; delay slot nop
 1333  00001e98  8fc10000	lw	r1,(r30)
 1334  00001e9c  90220000	lbu	r2,(r1)
 1335  00001ea0  2041ffd0	addi	r1,r2,#-48
 1336  00001ea4  afc1fff0	sw	-16(r30),r1
 1337  00001ea8  0800008c	j	L92_LF2
 1338  00001eac  54000000	nop; delay slot nop
 1339  00001eb0          	L91_LF2:
 1340  00001eb0  8fc10000	lw	r1,(r30)
 1341  00001eb4  90220000	lbu	r2,(r1)
 1342  00001eb8  6c410060	sgtui	r1,r2,#96
 1343  00001ebc  10200030	beqz	r1,L93_LF2
 1344  00001ec0  54000000	nop; delay slot nop
 1345  00001ec4  8fc10000	lw	r1,(r30)
 1346  00001ec8  90220000	lbu	r2,(r1)
 1347  00001ecc  7041007a	sleui	r1,r2,#122
 1348  00001ed0  1020001c	beqz	r1,L93_LF2
 1349  00001ed4  54000000	nop; delay slot nop
 1350  00001ed8  8fc10000	lw	r1,(r30)
 1351  00001edc  90220000	lbu	r2,(r1)
 1352  00001ee0  2041ffa9	addi	r1,r2,#-87
 1353  00001ee4  afc1fff0	sw	-16(r30),r1
 1354  00001ee8  0800004c	j	L92_LF2
 1355  00001eec  54000000	nop; delay slot nop
 1356  00001ef0          	L93_LF2:
 1357  00001ef0  8fc10000	lw	r1,(r30)
 1358  00001ef4  90220000	lbu	r2,(r1)
 1359  00001ef8  6c410040	sgtui	r1,r2,#64
 1360  00001efc  10200030	beqz	r1,L95_LF2
 1361  00001f00  54000000	nop; delay slot nop
 1362  00001f04  8fc10000	lw	r1,(r30)
 1363  00001f08  90220000	lbu	r2,(r1)
 1364  00001f0c  7041005a	sleui	r1,r2,#90
 1365  00001f10  1020001c	beqz	r1,L95_LF2
 1366  00001f14  54000000	nop; delay slot nop
 1367  00001f18  8fc10000	lw	r1,(r30)
 1368  00001f1c  90220000	lbu	r2,(r1)
 1369  00001f20  2041ffc9	addi	r1,r2,#-55
 1370  00001f24  afc1fff0	sw	-16(r30),r1
 1371  00001f28  0800000c	j	L92_LF2
 1372  00001f2c  54000000	nop; delay slot nop
 1373  00001f30          	L95_LF2:
 1374  00001f30  200103e8	addi	r1,r0,#1000
 1375  00001f34  afc1fff0	sw	-16(r30),r1
 1376  00001f38          	L96_LF2:
 1377  00001f38          	L94_LF2:
 1378  00001f38          	L92_LF2:
 1379  00001f38  8fc1fff0	lw	r1,-16(r30)
 1380  00001f3c  8fc20008	lw	r2,8(r30)
 1381  00001f40  0022082a	slt	r1,r1,r2
 1382  00001f44  10200040	beqz	r1,L90_LF2
 1383  00001f48  54000000	nop; delay slot nop
 1384  00001f4c  8fc1fff4	lw	r1,-12(r30)
 1385  00001f50  8fc20008	lw	r2,8(r30)
 1386  00001f54  00200035	movi2fp	f0,r1
 1387  00001f58  00400835	movi2fp	f1,r2
 1388  00001f5c  0401000e	mult	f0,f0,f1
 1389  00001f60  00000834	movfp2i	r1,f0
 1390  00001f64  afc1fff4	sw	-12(r30),r1
 1391  00001f68  8fc1fff4	lw	r1,-12(r30)
 1392  00001f6c  8fc2fff0	lw	r2,-16(r30)
 1393  00001f70  00220820	add	r1,r1,r2
 1394  00001f74  afc1fff4	sw	-12(r30),r1
 1395  00001f78  8fc20000	lw	r2,(r30)
 1396  00001f7c  20410001	addi	r1,r2,#1
 1397  00001f80  00011020	add	r2,r0,r1
 1398  00001f84  afc20000	sw	(r30),r2
 1399  00001f88          	L97_LF2:
 1400  00001f88          	L90_LF2:
 1401  00001f88  8fc1fff0	lw	r1,-16(r30)
 1402  00001f8c  8fc20008	lw	r2,8(r30)
 1403  00001f90  0022082a	slt	r1,r1,r2
 1404  00001f94  1420000c	bnez	r1,L98_LF2
 1405  00001f98  54000000	nop; delay slot nop
 1406  00001f9c  0800000c	j	L89_LF2
 1407  00001fa0  54000000	nop; delay slot nop
 1408  00001fa4          	L98_LF2:
 1409  00001fa4  0bfffec8	j	L88_LF2
 1410  00001fa8  54000000	nop; delay slot nop
 1411  00001fac          	L89_LF2:
 1412  00001fac  8fc10004	lw	r1,4(r30)
 1413  00001fb0  64220000	snei	r2,r1,#0
 1414  00001fb4  10400010	beqz	r2,L99_LF2
 1415  00001fb8  54000000	nop; delay slot nop
 1416  00001fbc  8fc10004	lw	r1,4(r30)
 1417  00001fc0  8fc20000	lw	r2,(r30)
 1418  00001fc4  ac220000	sw	(r1),r2
 1419  00001fc8          	L99_LF2:
 1420  00001fc8  8fc1fff4	lw	r1,-12(r30)
 1421  00001fcc  8fc2ffec	lw	r2,-20(r30)
 1422  00001fd0  00200035	movi2fp	f0,r1
 1423  00001fd4  00400835	movi2fp	f1,r2
 1424  00001fd8  0401000e	mult	f0,f0,f1
 1425  00001fdc  00000834	movfp2i	r1,f0
 1426  00001fe0  afc1fff4	sw	-12(r30),r1
 1427  00001fe4  8fc1fff4	lw	r1,-12(r30)
 1428  00001fe8  08000004	j	L72_LF2
 1429  00001fec  54000000	nop; delay slot nop
 1430  00001ff0          	L72_LF2:
 1431  00001ff0  8fa20000	lw	r2,0(r29)
 1432  00001ff4  8fdffff8	lw	r31,-8(r30)
 1433  00001ff8  001ee820	add	r29,r0,r30
 1434  00001ffc  8fdefffc	lw	r30,-4(r30)
 1435  00002000  4be00000	jr	r31
 1436  00002004  54000000	nop
 1437  00002008          	.endproc _dstrtol
 1438  00002008          	.align 2
 1439  00002008          	.proc _bcopy
 1440  00002008          	.global _bcopy
 1441  00002008          	_bcopy:
 1442                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1443  00002008  afbefffc	sw	-4(r29),r30; push fp
 1444  0000200c  001df020	add	r30,r0,r29; fp = sp
 1445  00002010  afbffff8	sw	-8(r29),r31; push ret addr
 1446  00002014  2fbd0010	subui	r29,r29,#16; alloc local storage
 1447  00002018  afa20000	sw	0(r29),r2
 1448  0000201c  afa30004	sw	4(r29),r3
 1449  00002020  54000000	nop
 1450  00002024          	L101_LF2:
 1451  00002024  8fc10008	lw	r1,8(r30)
 1452  00002028  2022ffff	addi	r2,r1,#-1
 1453  0000202c  afc20008	sw	8(r30),r2
 1454  00002030  6c210000	sgti	r1,r1,#0
 1455  00002034  1420000c	bnez	r1,L103_LF2
 1456  00002038  54000000	nop; delay slot nop
 1457  0000203c  0800002c	j	L102_LF2
 1458  00002040  54000000	nop; delay slot nop
 1459  00002044          	L103_LF2:
 1460  00002044  8fc10004	lw	r1,4(r30)
 1461  00002048  20220001	addi	r2,r1,#1
 1462  0000204c  afc20004	sw	4(r30),r2
 1463  00002050  8fc20000	lw	r2,(r30)
 1464  00002054  20430001	addi	r3,r2,#1
 1465  00002058  afc30000	sw	(r30),r3
 1466  0000205c  80420000	lb	r2,(r2)
 1467  00002060  a0220000	sb	(r1),r2
 1468  00002064  0bffffbc	j	L101_LF2
 1469  00002068  54000000	nop; delay slot nop
 1470  0000206c          	L102_LF2:
 1471  0000206c          	L100_LF2:
 1472  0000206c  8fa20000	lw	r2,0(r29)
 1473  00002070  8fa30004	lw	r3,4(r29)
 1474  00002074  8fdffff8	lw	r31,-8(r30)
 1475  00002078  001ee820	add	r29,r0,r30
 1476  0000207c  8fdefffc	lw	r30,-4(r30)
 1477  00002080  4be00000	jr	r31
 1478  00002084  54000000	nop
 1479  00002088          	.endproc _bcopy
 1480  00002088          	.align 2
 1481  00002088          	.proc _bzero
 1482  00002088          	.global _bzero
 1483  00002088          	_bzero:
 1484                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1485  00002088  afbefffc	sw	-4(r29),r30; push fp
 1486  0000208c  001df020	add	r30,r0,r29; fp = sp
 1487  00002090  afbffff8	sw	-8(r29),r31; push ret addr
 1488  00002094  2fbd0010	subui	r29,r29,#16; alloc local storage
 1489  00002098  afa20000	sw	0(r29),r2
 1490  0000209c  54000000	nop
 1491  000020a0          	L105_LF2:
 1492  000020a0  8fc10004	lw	r1,4(r30)
 1493  000020a4  2022ffff	addi	r2,r1,#-1
 1494  000020a8  afc20004	sw	4(r30),r2
 1495  000020ac  6c210000	sgti	r1,r1,#0
 1496  000020b0  1420000c	bnez	r1,L107_LF2
 1497  000020b4  54000000	nop; delay slot nop
 1498  000020b8  08000020	j	L106_LF2
 1499  000020bc  54000000	nop; delay slot nop
 1500  000020c0          	L107_LF2:
 1501  000020c0  8fc10000	lw	r1,(r30)
 1502  000020c4  20220001	addi	r2,r1,#1
 1503  000020c8  afc20000	sw	(r30),r2
 1504  000020cc  20020000	addi	r2,r0,(#0x0)&0xff
 1505  000020d0  a0220000	sb	(r1),r2
 1506  000020d4  0bffffc8	j	L105_LF2
 1507  000020d8  54000000	nop; delay slot nop
 1508  000020dc          	L106_LF2:
 1509  000020dc          	L104_LF2:
 1510  000020dc  8fa20000	lw	r2,0(r29)
 1511  000020e0  8fdffff8	lw	r31,-8(r30)
 1512  000020e4  001ee820	add	r29,r0,r30
 1513  000020e8  8fdefffc	lw	r30,-4(r30)
 1514  000020ec  4be00000	jr	r31
 1515  000020f0  54000000	nop
 1516  000020f4          	.endproc _bzero
 1517  000020f4          	.align 2
 1518  000020f4          	.proc _min
 1519  000020f4          	.global _min
 1520  000020f4          	_min:
 1521                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1522  000020f4  afbefffc	sw	-4(r29),r30; push fp
 1523  000020f8  001df020	add	r30,r0,r29; fp = sp
 1524  000020fc  afbffff8	sw	-8(r29),r31; push ret addr
 1525  00002100  2fbd0010	subui	r29,r29,#16; alloc local storage
 1526  00002104  afa20000	sw	0(r29),r2
 1527  00002108  afa30004	sw	4(r29),r3
 1528  0000210c  8fc10000	lw	r1,(r30)
 1529  00002110  8fc20004	lw	r2,4(r30)
 1530  00002114  0022182c	sle	r3,r1,r2
 1531  00002118  14600008	bnez	r3,L109_LF2
 1532  0000211c  54000000	nop; delay slot nop
 1533  00002120  8fc10004	lw	r1,4(r30)
 1534  00002124          	L109_LF2:
 1535  00002124  08000004	j	L108_LF2
 1536  00002128  54000000	nop; delay slot nop
 1537  0000212c          	L108_LF2:
 1538  0000212c  8fa20000	lw	r2,0(r29)
 1539  00002130  8fa30004	lw	r3,4(r29)
 1540  00002134  8fdffff8	lw	r31,-8(r30)
 1541  00002138  001ee820	add	r29,r0,r30
 1542  0000213c  8fdefffc	lw	r30,-4(r30)
 1543  00002140  4be00000	jr	r31
 1544  00002144  54000000	nop
 1545  00002148          	.endproc _min
 1546  00002148          	.align 2
 1547  00002148          	.proc _max
 1548  00002148          	.global _max
 1549  00002148          	_max:
 1550                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1551  00002148  afbefffc	sw	-4(r29),r30; push fp
 1552  0000214c  001df020	add	r30,r0,r29; fp = sp
 1553  00002150  afbffff8	sw	-8(r29),r31; push ret addr
 1554  00002154  2fbd0010	subui	r29,r29,#16; alloc local storage
 1555  00002158  afa20000	sw	0(r29),r2
 1556  0000215c  afa30004	sw	4(r29),r3
 1557  00002160  8fc10000	lw	r1,(r30)
 1558  00002164  8fc20004	lw	r2,4(r30)
 1559  00002168  0022182d	sge	r3,r1,r2
 1560  0000216c  14600008	bnez	r3,L111_LF2
 1561  00002170  54000000	nop; delay slot nop
 1562  00002174  8fc10004	lw	r1,4(r30)
 1563  00002178          	L111_LF2:
 1564  00002178  08000004	j	L110_LF2
 1565  0000217c  54000000	nop; delay slot nop
 1566  00002180          	L110_LF2:
 1567  00002180  8fa20000	lw	r2,0(r29)
 1568  00002184  8fa30004	lw	r3,4(r29)
 1569  00002188  8fdffff8	lw	r31,-8(r30)
 1570  0000218c  001ee820	add	r29,r0,r30
 1571  00002190  8fdefffc	lw	r30,-4(r30)
 1572  00002194  4be00000	jr	r31
 1573  00002198  54000000	nop
 1574  0000219c          	.endproc _max
 1575                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1576                      ;;;
 1577                      ;;; Most of the traps are called in files from libtraps.
 1580  0000219c          	.align 2
 1581  0000219c          	.proc _exit
 1582  0000219c          	.global _exit
 1583  0000219c          	_exit:
 1584  0000219c  44000300	trap	#0x300
 1585  000021a0  4be00000	jr	r31
 1586  000021a4  54000000	nop
 1587  000021a8          	.endproc _exit
 1589                      ; for the benefit of gcc.
 1590  000021a8          	.proc ___main
 1591  000021a8          	.global ___main
 1592  000021a8          	___main:
 1593  000021a8  4be00000	jr	r31
 1594  000021ac  54000000	nop
 1595  000021b0          	.endproc ___main
 1596  000021b0          	.text
 1597  000021b0          	.global _etext
 1598  000021b0          	_etext:
 1599  000021b0          	.align 3
 1600  000021b0          	.data
 1601  000030eb          	.global _edata
 1602  000030eb          	_edata:
