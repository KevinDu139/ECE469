 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 249
    4                      ; Text size: 4392
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  54657374	.ascii "Test Unallocated Virtual Access (%d): Start\n\000"
   85  00003038  20556e61	
   85  0000303c  6c6c6f63	
   85  00003040  61746564	
   85  00003044  20566972	
   85  00003048  7475616c	
   85  0000304c  20416363	
   85  00003050  65737320	
   85  00003054  28256429	
   85  00003058  3a205374	
   85  0000305c  6172740a	
   85  00003060  00      	
   86  00003061          	.align 2
   87  00003064          	LC2_LF0:
   88  00003064  556e616c	.ascii "Unallocated Virtual Access (%d): Bad semaphore s_procs_completed (%d)!"
   88  00003068  6c6f6361	
   88  0000306c  74656420	
   88  00003070  56697274	
   88  00003074  75616c20	
   88  00003078  41636365	
   88  0000307c  73732028	
   88  00003080  2564293a	
   88  00003084  20426164	
   88  00003088  2073656d	
   88  0000308c  6170686f	
   88  00003090  72652073	
   88  00003094  5f70726f	
   88  00003098  63735f63	
   88  0000309c  6f6d706c	
   88  000030a0  65746564	
   88  000030a4  20282564	
   88  000030a8  2921    	
   89  000030aa  0a00    	.ascii "\n\000"
   90  000030ac          	.align 2
   91  000030ac          	LC3_LF0:
   92  000030ac  41636365	.ascii "Accessing Memory Location: %x\n\000"
   92  000030b0  7373696e	
   92  000030b4  67204d65	
   92  000030b8  6d6f7279	
   92  000030bc  204c6f63	
   92  000030c0  6174696f	
   92  000030c4  6e3a2025	
   92  000030c8  780a00  	
   93  000030cb          	.align 2
   94  000030cc          	LC4_LF0:
   95  000030cc  54657374	.ascii "Test Unallocated Virtual Access (%d): Done!\n\000"
   95  000030d0  20556e61	
   95  000030d4  6c6c6f63	
   95  000030d8  61746564	
   95  000030dc  20566972	
   95  000030e0  7475616c	
   95  000030e4  20416363	
   95  000030e8  65737320	
   95  000030ec  28256429	
   95  000030f0  3a20446f	
   95  000030f4  6e65210a	
   95  000030f8  00      	
   96  000030f9          	.text
   97  000010d4          	.align 2
   98  000010d4          	.proc _main
   99  000010d4          	.global _main
  100  000010d4          	_main:
  101                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  102  000010d4  afbefffc	sw	-4(r29),r30; push fp
  103  000010d8  001df020	add	r30,r0,r29; fp = sp
  104  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  105  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  106  000010e4  8fc20000	lw	r2,(r30)
  107  000010e8  8fc30004	lw	r3,4(r30)
  108  000010ec  0c001030	jal	___main
  109  000010f0  54000000	nop; not filled.
  110  000010f4  64410002	snei	r1,r2,#2
  111  000010f8  10200028	beqz	r1,L17_LF0
  112  000010fc  54000000	nop; not filled.
  113  00001100  23bdfff8	addi	r29,r29,#-8
  114  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  115  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  116  0000110c  afa40000	sw	(r29),r4
  117  00001110  0c00014c	jal	_Printf
  118  00001114  54000000	nop; not filled.
  119  00001118  0c00024c	jal	_Exit
  120  0000111c  54000000	nop; not filled.
  121  00001120  23bd0008	addi	r29,r29,#8
  122  00001124          	L17_LF0:
  123  00001124  23bdfff0	addi	r29,r29,#-16
  124  00001128  8c630004	lw	r3,4(r3)
  125  0000112c  afa30000	sw	(r29),r3
  126  00001130  20040000	addi	r4,r0,#0
  127  00001134  afa40004	sw	4(r29),r4
  128  00001138  2004000a	addi	r4,r0,#10
  129  0000113c  afa40008	sw	8(r29),r4
  130  00001140  0c000ae0	jal	_dstrtol
  131  00001144  54000000	nop; not filled.
  132  00001148  00011020	add	r2,r0,r1
  133  0000114c  0c00011c	jal	_getpid
  134  00001150  54000000	nop; not filled.
  135  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  136  00001158  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  137  0000115c  afa40000	sw	(r29),r4
  138  00001160  afa10004	sw	4(r29),r1
  139  00001164  0c0000f8	jal	_Printf
  140  00001168  54000000	nop; not filled.
  141  0000116c  afa20000	sw	(r29),r2
  142  00001170  0c000140	jal	_sem_signal
  143  00001174  54000000	nop; not filled.
  144  00001178  23bd0010	addi	r29,r29,#16
  145  0000117c  64210001	snei	r1,r1,#1
  146  00001180  10200038	beqz	r1,L18_LF0
  147  00001184  54000000	nop; not filled.
  148  00001188  0c0000e0	jal	_getpid
  149  0000118c  54000000	nop; not filled.
  150  00001190  23bdfff0	addi	r29,r29,#-16
  151  00001194  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  152  00001198  24843064	addui	r4,r4,(LC2_LF0)&0xffff
  153  0000119c  afa40000	sw	(r29),r4
  154  000011a0  afa10004	sw	4(r29),r1
  155  000011a4  afa20008	sw	8(r29),r2
  156  000011a8  0c0000b4	jal	_Printf
  157  000011ac  54000000	nop; not filled.
  158  000011b0  0c0001b4	jal	_Exit
  159  000011b4  54000000	nop; not filled.
  160  000011b8  23bd0010	addi	r29,r29,#16
  161  000011bc          	L18_LF0:
  162  000011bc  3c020007	lhi	r2,#7
  163  000011c0  2442d000	addui	r2,r2,#53248
  164  000011c4  23bdfff8	addi	r29,r29,#-8
  165  000011c8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  166  000011cc  248430ac	addui	r4,r4,(LC3_LF0)&0xffff
  167  000011d0  afa40000	sw	(r29),r4
  168  000011d4  afa20004	sw	4(r29),r2
  169  000011d8  0c000084	jal	_Printf
  170  000011dc  54000000	nop; not filled.
  171  000011e0  3c04dead	lhi	r4,#-8531
  172  000011e4  2484beef	addui	r4,r4,#48879
  173  000011e8  ac440000	sw	(r2),r4
  174  000011ec  0c00007c	jal	_getpid
  175  000011f0  54000000	nop; not filled.
  176  000011f4  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  177  000011f8  248430cc	addui	r4,r4,(LC4_LF0)&0xffff
  178  000011fc  afa40000	sw	(r29),r4
  179  00001200  afa10004	sw	4(r29),r1
  180  00001204  0c000058	jal	_Printf
  181  00001208  54000000	nop; not filled.
  182  0000120c  23bd0008	addi	r29,r29,#8
  183  00001210  0c000f00	jal	_exit
  184  00001214  54000000	nop
  185  00001218          	.endproc _main
  186                      ;;;
  187                      ;;; Stub functions for DLX traps.
  188                      ;;;
  189                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  190                      ;;;
  191                      ;;; The traps such as Open and Close
  192                      ;;; (note the capital letters) are for use by user programs.  The traps
  193                      ;;; with names such as open and close (lower case) are for use by the OS.
  194                      ;;;
  197  00001218          	.align 2
  199                      ;;; The following are the traps to be used by user-level programs
  200                      ;;;
  202  00001218          	.align 2
  203  00001218          	.proc _Open
  204  00001218          	.global _Open
  205  00001218          	_Open:
  206                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  207                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  208                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  209  00001218  44000213	trap	#0x213
  210  0000121c  4be00000	jr	r31
  211  00001220  54000000	nop
  212  00001224          	.endproc _Open
  214  00001224          	.proc _Close
  215  00001224          	.global _Close
  216  00001224          	_Close:
  217  00001224  44000214	trap	#0x214
  218  00001228  4be00000	jr	r31
  219  0000122c  54000000	nop
  220  00001230          	.endproc _Close
  222  00001230          	.proc _Read
  223  00001230          	.global _Read
  224  00001230          	_Read:
  225  00001230  44000210	trap	#0x210
  226  00001234  4be00000	jr	r31
  227  00001238  54000000	nop
  228  0000123c          	.endproc _Read
  230  0000123c          	.proc _Write
  231  0000123c          	.global _Write
  232  0000123c          	_Write:
  233  0000123c  44000211	trap	#0x211
  234  00001240  4be00000	jr	r31
  235  00001244  54000000	nop
  236  00001248          	.endproc _Write
  238  00001248          	.proc _Lseek
  239  00001248          	.global _Lseek
  240  00001248          	_Lseek:
  241  00001248  44000212	trap	#0x212
  242  0000124c  4be00000	jr	r31
  243  00001250  54000000	nop
  244  00001254          	.endproc _Lseek
  246  00001254          	.proc _Putchar
  247  00001254          	.global _Putchar
  248  00001254          	_Putchar:
  249  00001254  44000280	trap	#0x280
  250  00001258  4be00000	jr	r31
  251  0000125c  54000000	nop
  252  00001260          	.endproc _Putchar
  254  00001260          	.proc _Printf
  255  00001260          	.global _Printf
  256  00001260          	_Printf:
  257  00001260  44000201	trap	#0x201
  258  00001264  4be00000	jr	r31
  259  00001268  54000000	nop
  260  0000126c          	.endproc _Printf
  262  0000126c          	.proc _getpid
  263  0000126c          	.global _getpid
  264  0000126c          	_getpid:
  265  0000126c  44000431	trap	#0x431
  266  00001270  4be00000	jr	r31
  267  00001274  54000000	nop
  268  00001278          	.endproc _getpid
  270  00001278          	.proc _process_create
  271  00001278          	.global _process_create
  272  00001278          	_process_create:
  273  00001278  44000432	trap	#0x432
  274  0000127c  4be00000	jr	r31
  275  00001280  54000000	nop
  276  00001284          	.endproc _process_create
  278  00001284          	.proc _shmget
  279  00001284          	.global _shmget
  280  00001284          	_shmget:
  281  00001284  44000440	trap	#0x440
  282  00001288  4be00000	jr	r31
  283  0000128c  54000000	nop
  284  00001290          	.endproc _shmget
  286  00001290          	.proc _shmat
  287  00001290          	.global _shmat
  288  00001290          	_shmat:
  289  00001290  44000441	trap	#0x441
  290  00001294  4be00000	jr	r31
  291  00001298  54000000	nop
  292  0000129c          	.endproc _shmat
  294  0000129c          	.proc _sem_create
  295  0000129c          	.global _sem_create
  296  0000129c          	_sem_create:
  297  0000129c  44000450	trap	#0x450
  298  000012a0  4be00000	jr	r31
  299  000012a4  54000000	nop
  300  000012a8          	.endproc _sem_create
  302  000012a8          	.proc _sem_wait
  303  000012a8          	.global _sem_wait
  304  000012a8          	_sem_wait:
  305  000012a8  44000451	trap	#0x451
  306  000012ac  4be00000	jr	r31
  307  000012b0  54000000	nop
  308  000012b4          	.endproc _sem_wait
  310  000012b4          	.proc _sem_signal
  311  000012b4          	.global _sem_signal
  312  000012b4          	_sem_signal:
  313  000012b4  44000452	trap	#0x452
  314  000012b8  4be00000	jr	r31
  315  000012bc  54000000	nop
  316  000012c0          	.endproc _sem_signal
  318  000012c0          	.proc _lock_create
  319  000012c0          	.global _lock_create
  320  000012c0          	_lock_create:
  321  000012c0  44000453	trap	#0x453
  322  000012c4  4be00000	jr	r31
  323  000012c8  54000000	nop
  324  000012cc          	.endproc _lock_create
  326  000012cc          	.proc _lock_acquire
  327  000012cc          	.global _lock_acquire
  328  000012cc          	_lock_acquire:
  329  000012cc  44000454	trap	#0x454
  330  000012d0  4be00000	jr	r31
  331  000012d4  54000000	nop
  332  000012d8          	.endproc _lock_acquire
  334  000012d8          	.proc _lock_release
  335  000012d8          	.global _lock_release
  336  000012d8          	_lock_release:
  337  000012d8  44000455	trap	#0x455
  338  000012dc  4be00000	jr	r31
  339  000012e0  54000000	nop
  340  000012e4          	.endproc _lock_release
  342  000012e4          	.proc _cond_create
  343  000012e4          	.global _cond_create
  344  000012e4          	_cond_create:
  345  000012e4  44000456	trap	#0x456
  346  000012e8  4be00000	jr	r31
  347  000012ec  54000000	nop
  348  000012f0          	.endproc _cond_create
  350  000012f0          	.proc _cond_wait
  351  000012f0          	.global _cond_wait
  352  000012f0          	_cond_wait:
  353  000012f0  44000457	trap	#0x457
  354  000012f4  4be00000	jr	r31
  355  000012f8  54000000	nop
  356  000012fc          	.endproc _cond_wait
  358  000012fc          	.proc _cond_signal
  359  000012fc          	.global _cond_signal
  360  000012fc          	_cond_signal:
  361  000012fc  44000458	trap	#0x458
  362  00001300  4be00000	jr	r31
  363  00001304  54000000	nop
  364  00001308          	.endproc _cond_signal
  366  00001308          	.proc _cond_broadcast
  367  00001308          	.global _cond_broadcast
  368  00001308          	_cond_broadcast:
  369  00001308  44000459	trap	#0x459
  370  0000130c  4be00000	jr	r31
  371  00001310  54000000	nop
  372  00001314          	.endproc _cond_broadcast
  374  00001314          	.proc _mbox_create
  375  00001314          	.global _mbox_create
  376  00001314          	_mbox_create:
  377  00001314  44000460	trap	#0x460
  378  00001318  4be00000	jr	r31
  379  0000131c  54000000	nop
  380  00001320          	.endproc _mbox_create
  382  00001320          	.proc _mbox_open
  383  00001320          	.global _mbox_open
  384  00001320          	_mbox_open:
  385  00001320  44000461	trap	#0x461
  386  00001324  4be00000	jr	r31
  387  00001328  54000000	nop
  388  0000132c          	.endproc _mbox_open
  390  0000132c          	.proc _mbox_close
  391  0000132c          	.global _mbox_close
  392  0000132c          	_mbox_close:
  393  0000132c  44000462	trap	#0x462
  394  00001330  4be00000	jr	r31
  395  00001334  54000000	nop
  396  00001338          	.endproc _mbox_close
  398  00001338          	.proc _mbox_send
  399  00001338          	.global _mbox_send
  400  00001338          	_mbox_send:
  401  00001338  44000463	trap	#0x463
  402  0000133c  4be00000	jr	r31
  403  00001340  54000000	nop
  404  00001344          	.endproc _mbox_send
  406  00001344          	.proc _mbox_recv
  407  00001344          	.global _mbox_recv
  408  00001344          	_mbox_recv:
  409  00001344  44000464	trap	#0x464
  410  00001348  4be00000	jr	r31
  411  0000134c  54000000	nop
  412  00001350          	.endproc _mbox_recv
  414  00001350          	.proc _sleep
  415  00001350          	.global _sleep
  416  00001350          	_sleep:
  417  00001350  44000465	trap	#0x465
  418  00001354  4be00000	jr	r31
  419  00001358  54000000	nop
  420  0000135c          	.endproc _sleep
  422  0000135c          	.proc _yield
  423  0000135c          	.global _yield
  424  0000135c          	_yield:
  425  0000135c  44000466	trap	#0x466
  426  00001360  4be00000	jr	r31
  427  00001364  54000000	nop
  428  00001368          	.endproc _yield
  431  00001368          	.proc _Exit
  432  00001368          	.global _Exit
  433  00001368          	_Exit:
  434  00001368  44000500	trap	#0x500
  435  0000136c  4be00000	jr	r31
  436  00001370  54000000	nop
  437  00001374          	.endproc _Exit
  440  00001374          	.proc _malloc
  441  00001374          	.global _malloc
  442  00001374          	_malloc:
  443  00001374  44000467	trap	#0x467
  444  00001378  4be00000	jr	r31
  445  0000137c          	.endproc _malloc
  448  0000137c          	.proc _mfree
  449  0000137c          	.global _mfree
  450  0000137c          	_mfree:
  451  0000137c  44000468	trap	#0x468
  452  00001380  4be00000	jr	r31
  453  00001384          	.endproc _mfree
  454                      ; Compiled by GCC
  456  00001384          	.align 2
  457  00001384          	.proc _isspace
  458  00001384          	.global _isspace
  459  00001384          	_isspace:
  460                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  461  00001384  afbefffc	sw	-4(r29),r30; push fp
  462  00001388  001df020	add	r30,r0,r29; fp = sp
  463  0000138c  afbffff8	sw	-8(r29),r31; push ret addr
  464  00001390  2fbd0018	subui	r29,r29,#24; alloc local storage
  465  00001394  afa20000	sw	0(r29),r2
  466  00001398  afa30004	sw	4(r29),r3
  467  0000139c  afa40008	sw	8(r29),r4
  468  000013a0  83c20003	lb	r2,3(r30)
  469  000013a4  20010000	addi	r1,r0,#0
  470  000013a8  304300ff	andi	r3,r2,#0x00ff
  471  000013ac  60640020	seqi	r4,r3,#32
  472  000013b0  1480002c	bnez	r4,L3_LF2
  473  000013b4  54000000	nop; delay slot nop
  474  000013b8  304300ff	andi	r3,r2,#0x00ff
  475  000013bc  60640009	seqi	r4,r3,#9
  476  000013c0  1480001c	bnez	r4,L3_LF2
  477  000013c4  54000000	nop; delay slot nop
  478  000013c8  304300ff	andi	r3,r2,#0x00ff
  479  000013cc  6064000a	seqi	r4,r3,#10
  480  000013d0  1480000c	bnez	r4,L3_LF2
  481  000013d4  54000000	nop; delay slot nop
  482  000013d8  08000008	j	L2_LF2
  483  000013dc  54000000	nop; delay slot nop
  484  000013e0          	L3_LF2:
  485  000013e0  20010001	addi	r1,r0,#1
  486  000013e4          	L2_LF2:
  487  000013e4  08000004	j	L1_LF2
  488  000013e8  54000000	nop; delay slot nop
  489  000013ec          	L1_LF2:
  490  000013ec  8fa20000	lw	r2,0(r29)
  491  000013f0  8fa30004	lw	r3,4(r29)
  492  000013f4  8fa40008	lw	r4,8(r29)
  493  000013f8  8fdffff8	lw	r31,-8(r30)
  494  000013fc  001ee820	add	r29,r0,r30
  495  00001400  8fdefffc	lw	r30,-4(r30)
  496  00001404  4be00000	jr	r31
  497  00001408  54000000	nop
  498  0000140c          	.endproc _isspace
  499  0000140c          	.align 2
  500  0000140c          	.proc _isxdigit
  501  0000140c          	.global _isxdigit
  502  0000140c          	_isxdigit:
  503                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  504  0000140c  afbefffc	sw	-4(r29),r30; push fp
  505  00001410  001df020	add	r30,r0,r29; fp = sp
  506  00001414  afbffff8	sw	-8(r29),r31; push ret addr
  507  00001418  2fbd0018	subui	r29,r29,#24; alloc local storage
  508  0000141c  afa20000	sw	0(r29),r2
  509  00001420  afa30004	sw	4(r29),r3
  510  00001424  afa40008	sw	8(r29),r4
  511  00001428  83c20003	lb	r2,3(r30)
  512  0000142c  20010000	addi	r1,r0,#0
  513  00001430  304300ff	andi	r3,r2,#0x00ff
  514  00001434  6c64002f	sgtui	r4,r3,#47
  515  00001438  1080001c	beqz	r4,L7_LF2
  516  0000143c  54000000	nop; delay slot nop
  517  00001440  304300ff	andi	r3,r2,#0x00ff
  518  00001444  70640039	sleui	r4,r3,#57
  519  00001448  1480005c	bnez	r4,L6_LF2
  520  0000144c  54000000	nop; delay slot nop
  521  00001450  08000004	j	L7_LF2
  522  00001454  54000000	nop; delay slot nop
  523  00001458          	L7_LF2:
  524  00001458  304300ff	andi	r3,r2,#0x00ff
  525  0000145c  6c640060	sgtui	r4,r3,#96
  526  00001460  1080001c	beqz	r4,L8_LF2
  527  00001464  54000000	nop; delay slot nop
  528  00001468  304300ff	andi	r3,r2,#0x00ff
  529  0000146c  70640066	sleui	r4,r3,#102
  530  00001470  14800034	bnez	r4,L6_LF2
  531  00001474  54000000	nop; delay slot nop
  532  00001478  08000004	j	L8_LF2
  533  0000147c  54000000	nop; delay slot nop
  534  00001480          	L8_LF2:
  535  00001480  304300ff	andi	r3,r2,#0x00ff
  536  00001484  6c640040	sgtui	r4,r3,#64
  537  00001488  10800020	beqz	r4,L5_LF2
  538  0000148c  54000000	nop; delay slot nop
  539  00001490  304300ff	andi	r3,r2,#0x00ff
  540  00001494  70640041	sleui	r4,r3,#65
  541  00001498  1480000c	bnez	r4,L6_LF2
  542  0000149c  54000000	nop; delay slot nop
  543  000014a0  08000008	j	L5_LF2
  544  000014a4  54000000	nop; delay slot nop
  545  000014a8          	L6_LF2:
  546  000014a8  20010001	addi	r1,r0,#1
  547  000014ac          	L5_LF2:
  548  000014ac  08000004	j	L4_LF2
  549  000014b0  54000000	nop; delay slot nop
  550  000014b4          	L4_LF2:
  551  000014b4  8fa20000	lw	r2,0(r29)
  552  000014b8  8fa30004	lw	r3,4(r29)
  553  000014bc  8fa40008	lw	r4,8(r29)
  554  000014c0  8fdffff8	lw	r31,-8(r30)
  555  000014c4  001ee820	add	r29,r0,r30
  556  000014c8  8fdefffc	lw	r30,-4(r30)
  557  000014cc  4be00000	jr	r31
  558  000014d0  54000000	nop
  559  000014d4          	.endproc _isxdigit
  560  000014d4          	.align 2
  561  000014d4          	.proc _dstrcpy
  562  000014d4          	.global _dstrcpy
  563  000014d4          	_dstrcpy:
  564                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  565  000014d4  afbefffc	sw	-4(r29),r30; push fp
  566  000014d8  001df020	add	r30,r0,r29; fp = sp
  567  000014dc  afbffff8	sw	-8(r29),r31; push ret addr
  568  000014e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  569  000014e4  afa20000	sw	0(r29),r2
  570  000014e8  afa30004	sw	4(r29),r3
  571  000014ec  8fc10000	lw	r1,(r30)
  572  000014f0  afc1fff4	sw	-12(r30),r1
  573  000014f4          	L10_LF2:
  574  000014f4  8fc10000	lw	r1,(r30)
  575  000014f8  20220001	addi	r2,r1,#1
  576  000014fc  afc20000	sw	(r30),r2
  577  00001500  8fc20004	lw	r2,4(r30)
  578  00001504  20430001	addi	r3,r2,#1
  579  00001508  afc30004	sw	4(r30),r3
  580  0000150c  80420000	lb	r2,(r2)
  581  00001510  a0220000	sb	(r1),r2
  582  00001514  a3c2fff3	sb	-13(r30),r2
  583  00001518          	L12_LF2:
  584  00001518  93c1fff3	lbu	r1,-13(r30)
  585  0000151c  64220000	snei	r2,r1,#0
  586  00001520  1440000c	bnez	r2,L13_LF2
  587  00001524  54000000	nop; delay slot nop
  588  00001528  0800000c	j	L11_LF2
  589  0000152c  54000000	nop; delay slot nop
  590  00001530          	L13_LF2:
  591  00001530  0bffffc0	j	L10_LF2
  592  00001534  54000000	nop; delay slot nop
  593  00001538          	L11_LF2:
  594  00001538  8fc1fff4	lw	r1,-12(r30)
  595  0000153c  08000004	j	L9_LF2
  596  00001540  54000000	nop; delay slot nop
  597  00001544          	L9_LF2:
  598  00001544  8fa20000	lw	r2,0(r29)
  599  00001548  8fa30004	lw	r3,4(r29)
  600  0000154c  8fdffff8	lw	r31,-8(r30)
  601  00001550  001ee820	add	r29,r0,r30
  602  00001554  8fdefffc	lw	r30,-4(r30)
  603  00001558  4be00000	jr	r31
  604  0000155c  54000000	nop
  605  00001560          	.endproc _dstrcpy
  606  00001560          	.align 2
  607  00001560          	.proc _dstrncpy
  608  00001560          	.global _dstrncpy
  609  00001560          	_dstrncpy:
  610                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  611  00001560  afbefffc	sw	-4(r29),r30; push fp
  612  00001564  001df020	add	r30,r0,r29; fp = sp
  613  00001568  afbffff8	sw	-8(r29),r31; push ret addr
  614  0000156c  2fbd0018	subui	r29,r29,#24; alloc local storage
  615  00001570  afa20000	sw	0(r29),r2
  616  00001574  afa30004	sw	4(r29),r3
  617  00001578  8fc10000	lw	r1,(r30)
  618  0000157c  afc1fff4	sw	-12(r30),r1
  619  00001580          	L15_LF2:
  620  00001580  8fc10008	lw	r1,8(r30)
  621  00001584  2022ffff	addi	r2,r1,#-1
  622  00001588  afc20008	sw	8(r30),r2
  623  0000158c  70210000	slei	r1,r1,#0
  624  00001590  1020000c	beqz	r1,L18_LF2
  625  00001594  54000000	nop; delay slot nop
  626  00001598  08000048	j	L16_LF2
  627  0000159c  54000000	nop; delay slot nop
  628  000015a0          	L18_LF2:
  629  000015a0  8fc10000	lw	r1,(r30)
  630  000015a4  20220001	addi	r2,r1,#1
  631  000015a8  afc20000	sw	(r30),r2
  632  000015ac  8fc20004	lw	r2,4(r30)
  633  000015b0  20430001	addi	r3,r2,#1
  634  000015b4  afc30004	sw	4(r30),r3
  635  000015b8  80420000	lb	r2,(r2)
  636  000015bc  a0220000	sb	(r1),r2
  637  000015c0  a3c2fff3	sb	-13(r30),r2
  638  000015c4          	L17_LF2:
  639  000015c4  93c1fff3	lbu	r1,-13(r30)
  640  000015c8  64220000	snei	r2,r1,#0
  641  000015cc  1440000c	bnez	r2,L19_LF2
  642  000015d0  54000000	nop; delay slot nop
  643  000015d4  0800000c	j	L16_LF2
  644  000015d8  54000000	nop; delay slot nop
  645  000015dc          	L19_LF2:
  646  000015dc  0bffffa0	j	L15_LF2
  647  000015e0  54000000	nop; delay slot nop
  648  000015e4          	L16_LF2:
  649  000015e4  8fc1fff4	lw	r1,-12(r30)
  650  000015e8  08000004	j	L14_LF2
  651  000015ec  54000000	nop; delay slot nop
  652  000015f0          	L14_LF2:
  653  000015f0  8fa20000	lw	r2,0(r29)
  654  000015f4  8fa30004	lw	r3,4(r29)
  655  000015f8  8fdffff8	lw	r31,-8(r30)
  656  000015fc  001ee820	add	r29,r0,r30
  657  00001600  8fdefffc	lw	r30,-4(r30)
  658  00001604  4be00000	jr	r31
  659  00001608  54000000	nop
  660  0000160c          	.endproc _dstrncpy
  661  0000160c          	.align 2
  662  0000160c          	.proc _dstrcat
  663  0000160c          	.global _dstrcat
  664  0000160c          	_dstrcat:
  665                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  666  0000160c  afbefffc	sw	-4(r29),r30; push fp
  667  00001610  001df020	add	r30,r0,r29; fp = sp
  668  00001614  afbffff8	sw	-8(r29),r31; push ret addr
  669  00001618  2fbd0018	subui	r29,r29,#24; alloc local storage
  670  0000161c  afa20000	sw	0(r29),r2
  671  00001620  8fc10000	lw	r1,(r30)
  672  00001624  afc1fff4	sw	-12(r30),r1
  673  00001628          	L21_LF2:
  674  00001628  8fc10000	lw	r1,(r30)
  675  0000162c  90220000	lbu	r2,(r1)
  676  00001630  64410000	snei	r1,r2,#0
  677  00001634  1420000c	bnez	r1,L23_LF2
  678  00001638  54000000	nop; delay slot nop
  679  0000163c  0800001c	j	L22_LF2
  680  00001640  54000000	nop; delay slot nop
  681  00001644          	L23_LF2:
  682  00001644  8fc20000	lw	r2,(r30)
  683  00001648  20410001	addi	r1,r2,#1
  684  0000164c  00011020	add	r2,r0,r1
  685  00001650  afc20000	sw	(r30),r2
  686  00001654  0bffffd0	j	L21_LF2
  687  00001658  54000000	nop; delay slot nop
  688  0000165c          	L22_LF2:
  689  0000165c  23bdfff8	addi	r29,r29,#-8
  690  00001660  001d0820	add	r1,r0,r29
  691  00001664  8fc20000	lw	r2,(r30)
  692  00001668  ac220000	sw	(r1),r2
  693  0000166c  8fc20004	lw	r2,4(r30)
  694  00001670  ac220004	sw	4(r1),r2
  695  00001674  0ffffe5c	jal	_dstrcpy
  696  00001678  54000000	nop; delay slot nop
  697  0000167c  23bd0008	addi	r29,r29,#8
  698  00001680  8fc1fff4	lw	r1,-12(r30)
  699  00001684  08000004	j	L20_LF2
  700  00001688  54000000	nop; delay slot nop
  701  0000168c          	L20_LF2:
  702  0000168c  8fa20000	lw	r2,0(r29)
  703  00001690  8fdffff8	lw	r31,-8(r30)
  704  00001694  001ee820	add	r29,r0,r30
  705  00001698  8fdefffc	lw	r30,-4(r30)
  706  0000169c  4be00000	jr	r31
  707  000016a0  54000000	nop
  708  000016a4          	.endproc _dstrcat
  709  000016a4          	.align 2
  710  000016a4          	.proc _dstrncmp
  711  000016a4          	.global _dstrncmp
  712  000016a4          	_dstrncmp:
  713                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  714  000016a4  afbefffc	sw	-4(r29),r30; push fp
  715  000016a8  001df020	add	r30,r0,r29; fp = sp
  716  000016ac  afbffff8	sw	-8(r29),r31; push ret addr
  717  000016b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  718  000016b4  afa20000	sw	0(r29),r2
  719  000016b8  afa30004	sw	4(r29),r3
  720  000016bc  54000000	nop
  721  000016c0  20010000	addi	r1,r0,#0
  722  000016c4  afc1fff4	sw	-12(r30),r1
  723  000016c8          	L25_LF2:
  724  000016c8  8fc1fff4	lw	r1,-12(r30)
  725  000016cc  8fc20008	lw	r2,8(r30)
  726  000016d0  0022082a	slt	r1,r1,r2
  727  000016d4  1420000c	bnez	r1,L28_LF2
  728  000016d8  54000000	nop; delay slot nop
  729  000016dc  08000088	j	L26_LF2
  730  000016e0  54000000	nop; delay slot nop
  731  000016e4          	L28_LF2:
  732  000016e4  8fc10004	lw	r1,4(r30)
  733  000016e8  90220000	lbu	r2,(r1)
  734  000016ec  64410000	snei	r1,r2,#0
  735  000016f0  14200018	bnez	r1,L29_LF2
  736  000016f4  54000000	nop; delay slot nop
  737  000016f8  20010000	addi	r1,r0,#0
  738  000016fc  080000d8	j	L24_LF2
  739  00001700  54000000	nop; delay slot nop
  740  00001704  08000028	j	L30_LF2
  741  00001708  54000000	nop; delay slot nop
  742  0000170c          	L29_LF2:
  743  0000170c  8fc10000	lw	r1,(r30)
  744  00001710  8fc20004	lw	r2,4(r30)
  745  00001714  90210000	lbu	r1,(r1)
  746  00001718  90420000	lbu	r2,(r2)
  747  0000171c  00220829	sne	r1,r1,r2
  748  00001720  1020000c	beqz	r1,L30_LF2
  749  00001724  54000000	nop; delay slot nop
  750  00001728  0800003c	j	L26_LF2
  751  0000172c  54000000	nop; delay slot nop
  752  00001730          	L31_LF2:
  753  00001730          	L30_LF2:
  754  00001730  8fc20000	lw	r2,(r30)
  755  00001734  20410001	addi	r1,r2,#1
  756  00001738  00011020	add	r2,r0,r1
  757  0000173c  afc20000	sw	(r30),r2
  758  00001740  8fc20004	lw	r2,4(r30)
  759  00001744  20410001	addi	r1,r2,#1
  760  00001748  00011020	add	r2,r0,r1
  761  0000174c  afc20004	sw	4(r30),r2
  762  00001750          	L27_LF2:
  763  00001750  8fc2fff4	lw	r2,-12(r30)
  764  00001754  20410001	addi	r1,r2,#1
  765  00001758  00011020	add	r2,r0,r1
  766  0000175c  afc2fff4	sw	-12(r30),r2
  767  00001760  0bffff64	j	L25_LF2
  768  00001764  54000000	nop; delay slot nop
  769  00001768          	L26_LF2:
  770  00001768  8fc1fff4	lw	r1,-12(r30)
  771  0000176c  8fc20008	lw	r2,8(r30)
  772  00001770  00220828	seq	r1,r1,r2
  773  00001774  10200018	beqz	r1,L32_LF2
  774  00001778  54000000	nop; delay slot nop
  775  0000177c  20010000	addi	r1,r0,#0
  776  00001780  08000054	j	L24_LF2
  777  00001784  54000000	nop; delay slot nop
  778  00001788  0800004c	j	L33_LF2
  779  0000178c  54000000	nop; delay slot nop
  780  00001790          	L32_LF2:
  781  00001790  8fc20000	lw	r2,(r30)
  782  00001794  90410000	lbu	r1,(r2)
  783  00001798  8fc20004	lw	r2,4(r30)
  784  0000179c  90430000	lbu	r3,(r2)
  785  000017a0  00230822	sub	r1,r1,r3
  786  000017a4  74220000	sgei	r2,r1,#0
  787  000017a8  10400020	beqz	r2,L34_LF2
  788  000017ac  54000000	nop; delay slot nop
  789  000017b0  8fc10000	lw	r1,(r30)
  790  000017b4  8fc20004	lw	r2,4(r30)
  791  000017b8  90210000	lbu	r1,(r1)
  792  000017bc  90420000	lbu	r2,(r2)
  793  000017c0  00220829	sne	r1,r1,r2
  794  000017c4  08000008	j	L35_LF2
  795  000017c8  54000000	nop; delay slot nop
  796  000017cc          	L34_LF2:
  797  000017cc  2001ffff	addi	r1,r0,#-1
  798  000017d0          	L35_LF2:
  799  000017d0  08000004	j	L24_LF2
  800  000017d4  54000000	nop; delay slot nop
  801  000017d8          	L33_LF2:
  802  000017d8          	L24_LF2:
  803  000017d8  8fa20000	lw	r2,0(r29)
  804  000017dc  8fa30004	lw	r3,4(r29)
  805  000017e0  8fdffff8	lw	r31,-8(r30)
  806  000017e4  001ee820	add	r29,r0,r30
  807  000017e8  8fdefffc	lw	r30,-4(r30)
  808  000017ec  4be00000	jr	r31
  809  000017f0  54000000	nop
  810  000017f4          	.endproc _dstrncmp
  811  000017f4          	.align 2
  812  000017f4          	.proc _dstrlen
  813  000017f4          	.global _dstrlen
  814  000017f4          	_dstrlen:
  815                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  816  000017f4  afbefffc	sw	-4(r29),r30; push fp
  817  000017f8  001df020	add	r30,r0,r29; fp = sp
  818  000017fc  afbffff8	sw	-8(r29),r31; push ret addr
  819  00001800  2fbd0018	subui	r29,r29,#24; alloc local storage
  820  00001804  afa20000	sw	0(r29),r2
  821  00001808  20010000	addi	r1,r0,#0
  822  0000180c  afc1fff4	sw	-12(r30),r1
  823  00001810          	L37_LF2:
  824  00001810  8fc10000	lw	r1,(r30)
  825  00001814  20220001	addi	r2,r1,#1
  826  00001818  afc20000	sw	(r30),r2
  827  0000181c  90210000	lbu	r1,(r1)
  828  00001820  64220000	snei	r2,r1,#0
  829  00001824  1440000c	bnez	r2,L39_LF2
  830  00001828  54000000	nop; delay slot nop
  831  0000182c  0800001c	j	L38_LF2
  832  00001830  54000000	nop; delay slot nop
  833  00001834          	L39_LF2:
  834  00001834  8fc2fff4	lw	r2,-12(r30)
  835  00001838  20410001	addi	r1,r2,#1
  836  0000183c  00011020	add	r2,r0,r1
  837  00001840  afc2fff4	sw	-12(r30),r2
  838  00001844  0bffffc8	j	L37_LF2
  839  00001848  54000000	nop; delay slot nop
  840  0000184c          	L38_LF2:
  841  0000184c  8fc1fff4	lw	r1,-12(r30)
  842  00001850  08000004	j	L36_LF2
  843  00001854  54000000	nop; delay slot nop
  844  00001858          	L36_LF2:
  845  00001858  8fa20000	lw	r2,0(r29)
  846  0000185c  8fdffff8	lw	r31,-8(r30)
  847  00001860  001ee820	add	r29,r0,r30
  848  00001864  8fdefffc	lw	r30,-4(r30)
  849  00001868  4be00000	jr	r31
  850  0000186c  54000000	nop
  851  00001870          	.endproc _dstrlen
  852  00001870          	.align 2
  853  00001870          	.proc _dstrstr
  854  00001870          	.global _dstrstr
  855  00001870          	_dstrstr:
  856                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  857  00001870  afbefffc	sw	-4(r29),r30; push fp
  858  00001874  001df020	add	r30,r0,r29; fp = sp
  859  00001878  afbffff8	sw	-8(r29),r31; push ret addr
  860  0000187c  2fbd0018	subui	r29,r29,#24; alloc local storage
  861  00001880  afa20000	sw	0(r29),r2
  862  00001884  23bdfff8	addi	r29,r29,#-8
  863  00001888  001d0820	add	r1,r0,r29
  864  0000188c  8fc20004	lw	r2,4(r30)
  865  00001890  ac220000	sw	(r1),r2
  866  00001894  0fffff5c	jal	_dstrlen
  867  00001898  54000000	nop; delay slot nop
  868  0000189c  23bd0008	addi	r29,r29,#8
  869  000018a0  afc1fff4	sw	-12(r30),r1
  870  000018a4          	L41_LF2:
  871  000018a4  8fc10000	lw	r1,(r30)
  872  000018a8  90220000	lbu	r2,(r1)
  873  000018ac  64410000	snei	r1,r2,#0
  874  000018b0  1420000c	bnez	r1,L43_LF2
  875  000018b4  54000000	nop; delay slot nop
  876  000018b8  08000060	j	L42_LF2
  877  000018bc  54000000	nop; delay slot nop
  878  000018c0          	L43_LF2:
  879  000018c0  23bdfff0	addi	r29,r29,#-16
  880  000018c4  001d0820	add	r1,r0,r29
  881  000018c8  8fc20000	lw	r2,(r30)
  882  000018cc  ac220000	sw	(r1),r2
  883  000018d0  8fc20004	lw	r2,4(r30)
  884  000018d4  ac220004	sw	4(r1),r2
  885  000018d8  8fc2fff4	lw	r2,-12(r30)
  886  000018dc  ac220008	sw	8(r1),r2
  887  000018e0  0ffffdc0	jal	_dstrncmp
  888  000018e4  54000000	nop; delay slot nop
  889  000018e8  23bd0010	addi	r29,r29,#16
  890  000018ec  64220000	snei	r2,r1,#0
  891  000018f0  14400010	bnez	r2,L44_LF2
  892  000018f4  54000000	nop; delay slot nop
  893  000018f8  8fc10000	lw	r1,(r30)
  894  000018fc  08000028	j	L40_LF2
  895  00001900  54000000	nop; delay slot nop
  896  00001904          	L44_LF2:
  897  00001904  8fc20000	lw	r2,(r30)
  898  00001908  20410001	addi	r1,r2,#1
  899  0000190c  00011020	add	r2,r0,r1
  900  00001910  afc20000	sw	(r30),r2
  901  00001914  0bffff8c	j	L41_LF2
  902  00001918  54000000	nop; delay slot nop
  903  0000191c          	L42_LF2:
  904  0000191c  20010000	addi	r1,r0,#0
  905  00001920  08000004	j	L40_LF2
  906  00001924  54000000	nop; delay slot nop
  907  00001928          	L40_LF2:
  908  00001928  8fa20000	lw	r2,0(r29)
  909  0000192c  8fdffff8	lw	r31,-8(r30)
  910  00001930  001ee820	add	r29,r0,r30
  911  00001934  8fdefffc	lw	r30,-4(r30)
  912  00001938  4be00000	jr	r31
  913  0000193c  54000000	nop
  914  00001940          	.endproc _dstrstr
  915  00001940          	.align 2
  916  00001940          	.proc _dmindex
  917  00001940          	.global _dmindex
  918  00001940          	_dmindex:
  919                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  920  00001940  afbefffc	sw	-4(r29),r30; push fp
  921  00001944  001df020	add	r30,r0,r29; fp = sp
  922  00001948  afbffff8	sw	-8(r29),r31; push ret addr
  923  0000194c  2fbd0018	subui	r29,r29,#24; alloc local storage
  924  00001950  afa20000	sw	0(r29),r2
  925  00001954  54000000	nop
  926  00001958          	L46_LF2:
  927  00001958  8fc10000	lw	r1,(r30)
  928  0000195c  90220000	lbu	r2,(r1)
  929  00001960  64410000	snei	r1,r2,#0
  930  00001964  1420000c	bnez	r1,L48_LF2
  931  00001968  54000000	nop; delay slot nop
  932  0000196c  08000070	j	L47_LF2
  933  00001970  54000000	nop; delay slot nop
  934  00001974          	L48_LF2:
  935  00001974  8fc10004	lw	r1,4(r30)
  936  00001978  afc1fff4	sw	-12(r30),r1
  937  0000197c          	L49_LF2:
  938  0000197c  8fc1fff4	lw	r1,-12(r30)
  939  00001980  90220000	lbu	r2,(r1)
  940  00001984  64410000	snei	r1,r2,#0
  941  00001988  1420000c	bnez	r1,L52_LF2
  942  0000198c  54000000	nop; delay slot nop
  943  00001990  08000044	j	L50_LF2
  944  00001994  54000000	nop; delay slot nop
  945  00001998          	L52_LF2:
  946  00001998  8fc10000	lw	r1,(r30)
  947  0000199c  8fc2fff4	lw	r2,-12(r30)
  948  000019a0  90210000	lbu	r1,(r1)
  949  000019a4  90420000	lbu	r2,(r2)
  950  000019a8  00220828	seq	r1,r1,r2
  951  000019ac  10200010	beqz	r1,L51_LF2
  952  000019b0  54000000	nop; delay slot nop
  953  000019b4  8fc10000	lw	r1,(r30)
  954  000019b8  08000030	j	L45_LF2
  955  000019bc  54000000	nop; delay slot nop
  956  000019c0          	L53_LF2:
  957  000019c0          	L51_LF2:
  958  000019c0  8fc2fff4	lw	r2,-12(r30)
  959  000019c4  20410001	addi	r1,r2,#1
  960  000019c8  00011020	add	r2,r0,r1
  961  000019cc  afc2fff4	sw	-12(r30),r2
  962  000019d0  0bffffa8	j	L49_LF2
  963  000019d4  54000000	nop; delay slot nop
  964  000019d8          	L50_LF2:
  965  000019d8  0bffff7c	j	L46_LF2
  966  000019dc  54000000	nop; delay slot nop
  967  000019e0          	L47_LF2:
  968  000019e0  20010000	addi	r1,r0,#0
  969  000019e4  08000004	j	L45_LF2
  970  000019e8  54000000	nop; delay slot nop
  971  000019ec          	L45_LF2:
  972  000019ec  8fa20000	lw	r2,0(r29)
  973  000019f0  8fdffff8	lw	r31,-8(r30)
  974  000019f4  001ee820	add	r29,r0,r30
  975  000019f8  8fdefffc	lw	r30,-4(r30)
  976  000019fc  4be00000	jr	r31
  977  00001a00  54000000	nop
  978  00001a04          	.endproc _dmindex
  979  00001a04          	.align 2
  980  00001a04          	.proc _dindex
  981  00001a04          	.global _dindex
  982  00001a04          	_dindex:
  983                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  984  00001a04  afbefffc	sw	-4(r29),r30; push fp
  985  00001a08  001df020	add	r30,r0,r29; fp = sp
  986  00001a0c  afbffff8	sw	-8(r29),r31; push ret addr
  987  00001a10  2fbd0010	subui	r29,r29,#16; alloc local storage
  988  00001a14  afa20000	sw	0(r29),r2
  989  00001a18  54000000	nop
  990  00001a1c          	L55_LF2:
  991  00001a1c  8fc10000	lw	r1,(r30)
  992  00001a20  90220000	lbu	r2,(r1)
  993  00001a24  64410000	snei	r1,r2,#0
  994  00001a28  1420000c	bnez	r1,L57_LF2
  995  00001a2c  54000000	nop; delay slot nop
  996  00001a30  08000040	j	L56_LF2
  997  00001a34  54000000	nop; delay slot nop
  998  00001a38          	L57_LF2:
  999  00001a38  8fc10000	lw	r1,(r30)
 1000  00001a3c  90220000	lbu	r2,(r1)
 1001  00001a40  8fc10004	lw	r1,4(r30)
 1002  00001a44  00411028	seq	r2,r2,r1
 1003  00001a48  10400010	beqz	r2,L58_LF2
 1004  00001a4c  54000000	nop; delay slot nop
 1005  00001a50  8fc10000	lw	r1,(r30)
 1006  00001a54  08000028	j	L54_LF2
 1007  00001a58  54000000	nop; delay slot nop
 1008  00001a5c          	L58_LF2:
 1009  00001a5c  8fc20000	lw	r2,(r30)
 1010  00001a60  20410001	addi	r1,r2,#1
 1011  00001a64  00011020	add	r2,r0,r1
 1012  00001a68  afc20000	sw	(r30),r2
 1013  00001a6c  0bffffac	j	L55_LF2
 1014  00001a70  54000000	nop; delay slot nop
 1015  00001a74          	L56_LF2:
 1016  00001a74  20010000	addi	r1,r0,#0
 1017  00001a78  08000004	j	L54_LF2
 1018  00001a7c  54000000	nop; delay slot nop
 1019  00001a80          	L54_LF2:
 1020  00001a80  8fa20000	lw	r2,0(r29)
 1021  00001a84  8fdffff8	lw	r31,-8(r30)
 1022  00001a88  001ee820	add	r29,r0,r30
 1023  00001a8c  8fdefffc	lw	r30,-4(r30)
 1024  00001a90  4be00000	jr	r31
 1025  00001a94  54000000	nop
 1026  00001a98          	.endproc _dindex
 1027  00001a98          	.align 2
 1028  00001a98          	.proc _ditoa
 1029  00001a98          	.global _ditoa
 1030  00001a98          	_ditoa:
 1031                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1032  00001a98  afbefffc	sw	-4(r29),r30; push fp
 1033  00001a9c  001df020	add	r30,r0,r29; fp = sp
 1034  00001aa0  afbffff8	sw	-8(r29),r31; push ret addr
 1035  00001aa4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1036  00001aa8  afa20000	sw	0(r29),r2
 1037  00001aac  afa30004	sw	4(r29),r3
 1038  00001ab0  8fc10000	lw	r1,(r30)
 1039  00001ab4  68220000	slti	r2,r1,#0
 1040  00001ab8  1040002c	beqz	r2,L60_LF2
 1041  00001abc  54000000	nop; delay slot nop
 1042  00001ac0  8fc10004	lw	r1,4(r30)
 1043  00001ac4  20220001	addi	r2,r1,#1
 1044  00001ac8  afc20004	sw	4(r30),r2
 1045  00001acc  2002002d	addi	r2,r0,(#0x2d)&0xff
 1046  00001ad0  a0220000	sb	(r1),r2
 1047  00001ad4  8fc10000	lw	r1,(r30)
 1048  00001ad8  00011022	sub	r2,r0,r1
 1049  00001adc  afc20000	sw	(r30),r2
 1050  00001ae0  08000118	j	L61_LF2
 1051  00001ae4  54000000	nop; delay slot nop
 1052  00001ae8          	L60_LF2:
 1053  00001ae8  8fc10000	lw	r1,(r30)
 1054  00001aec  64220000	snei	r2,r1,#0
 1055  00001af0  14400020	bnez	r2,L62_LF2
 1056  00001af4  54000000	nop; delay slot nop
 1057  00001af8  8fc10004	lw	r1,4(r30)
 1058  00001afc  20220001	addi	r2,r1,#1
 1059  00001b00  afc20004	sw	4(r30),r2
 1060  00001b04  20020030	addi	r2,r0,(#0x30)&0xff
 1061  00001b08  a0220000	sb	(r1),r2
 1062  00001b0c  080000ec	j	L61_LF2
 1063  00001b10  54000000	nop; delay slot nop
 1064  00001b14          	L62_LF2:
 1065  00001b14  20010001	addi	r1,r0,#1
 1066  00001b18  afc1fff4	sw	-12(r30),r1
 1067  00001b1c          	L64_LF2:
 1068  00001b1c  8fc1fff4	lw	r1,-12(r30)
 1069  00001b20  8fc20000	lw	r2,(r30)
 1070  00001b24  0022082c	sle	r1,r1,r2
 1071  00001b28  1420000c	bnez	r1,L66_LF2
 1072  00001b2c  54000000	nop; delay slot nop
 1073  00001b30  08000024	j	L65_LF2
 1074  00001b34  54000000	nop; delay slot nop
 1075  00001b38          	L67_LF2:
 1076  00001b38          	L66_LF2:
 1077  00001b38  8fc1fff4	lw	r1,-12(r30)
 1078  00001b3c  00011820	add	r3,r0,r1
 1079  00001b40  50620002	slli	r2,r3,#0x2
 1080  00001b44  00411020	add	r2,r2,r1
 1081  00001b48  50410001	slli	r1,r2,#0x1
 1082  00001b4c  afc1fff4	sw	-12(r30),r1
 1083  00001b50  0bffffc8	j	L64_LF2
 1084  00001b54  54000000	nop; delay slot nop
 1085  00001b58          	L65_LF2:
 1086  00001b58  54000000	nop
 1087  00001b5c          	L68_LF2:
 1088  00001b5c  8fc1fff4	lw	r1,-12(r30)
 1089  00001b60  2002000a	addi	r2,r0,#10
 1090  00001b64  00200035	movi2fp	f0,r1
 1091  00001b68  00400835	movi2fp	f1,r2
 1092  00001b6c  0401000f	div	f0,f0,f1
 1093  00001b70  00000834	movfp2i	r1,f0
 1094  00001b74  afc1fff4	sw	-12(r30),r1
 1095  00001b78  8fc10004	lw	r1,4(r30)
 1096  00001b7c  20220001	addi	r2,r1,#1
 1097  00001b80  afc20004	sw	4(r30),r2
 1098  00001b84  8fc20000	lw	r2,(r30)
 1099  00001b88  8fc3fff4	lw	r3,-12(r30)
 1100  00001b8c  00400035	movi2fp	f0,r2
 1101  00001b90  00600835	movi2fp	f1,r3
 1102  00001b94  0401000f	div	f0,f0,f1
 1103  00001b98  00001034	movfp2i	r2,f0
 1104  00001b9c  00021820	add	r3,r0,r2
 1105  00001ba0  20620030	addi	r2,r3,#48
 1106  00001ba4  a0220000	sb	(r1),r2
 1107  00001ba8  8fc10000	lw	r1,(r30)
 1108  00001bac  8fc3fff4	lw	r3,-12(r30)
 1109  00001bb0  00200035	movi2fp	f0,r1
 1110  00001bb4  00600835	movi2fp	f1,r3
 1111  00001bb8  0401000f	div	f0,f0,f1
 1112  00001bbc  00001034	movfp2i	r2,f0
 1113  00001bc0  8fc3fff4	lw	r3,-12(r30)
 1114  00001bc4  00400035	movi2fp	f0,r2
 1115  00001bc8  00600835	movi2fp	f1,r3
 1116  00001bcc  0401000e	mult	f0,f0,f1
 1117  00001bd0  00001034	movfp2i	r2,f0
 1118  00001bd4  00220822	sub	r1,r1,r2
 1119  00001bd8  afc10000	sw	(r30),r1
 1120  00001bdc          	L70_LF2:
 1121  00001bdc  8fc1fff4	lw	r1,-12(r30)
 1122  00001be0  6c220001	sgti	r2,r1,#1
 1123  00001be4  1440000c	bnez	r2,L71_LF2
 1124  00001be8  54000000	nop; delay slot nop
 1125  00001bec  0800000c	j	L61_LF2
 1126  00001bf0  54000000	nop; delay slot nop
 1127  00001bf4          	L71_LF2:
 1128  00001bf4  0bffff64	j	L68_LF2
 1129  00001bf8  54000000	nop; delay slot nop
 1130  00001bfc          	L69_LF2:
 1131  00001bfc          	L63_LF2:
 1132  00001bfc          	L61_LF2:
 1133  00001bfc  8fc10004	lw	r1,4(r30)
 1134  00001c00  20020000	addi	r2,r0,(#0x0)&0xff
 1135  00001c04  a0220000	sb	(r1),r2
 1136  00001c08          	L59_LF2:
 1137  00001c08  8fa20000	lw	r2,0(r29)
 1138  00001c0c  8fa30004	lw	r3,4(r29)
 1139  00001c10  8fdffff8	lw	r31,-8(r30)
 1140  00001c14  001ee820	add	r29,r0,r30
 1141  00001c18  8fdefffc	lw	r30,-4(r30)
 1142  00001c1c  4be00000	jr	r31
 1143  00001c20  54000000	nop
 1144  00001c24          	.endproc _ditoa
 1145  00001c24          	.align 2
 1146  00001c24          	.proc _dstrtol
 1147  00001c24          	.global _dstrtol
 1148  00001c24          	_dstrtol:
 1149                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1150  00001c24  afbefffc	sw	-4(r29),r30; push fp
 1151  00001c28  001df020	add	r30,r0,r29; fp = sp
 1152  00001c2c  afbffff8	sw	-8(r29),r31; push ret addr
 1153  00001c30  2fbd0020	subui	r29,r29,#32; alloc local storage
 1154  00001c34  afa20000	sw	0(r29),r2
 1155  00001c38  20010000	addi	r1,r0,#0
 1156  00001c3c  afc1fff4	sw	-12(r30),r1
 1157  00001c40          	L73_LF2:
 1158  00001c40  8fc10000	lw	r1,(r30)
 1159  00001c44  90220000	lbu	r2,(r1)
 1160  00001c48  60410020	seqi	r1,r2,#32
 1161  00001c4c  14200034	bnez	r1,L75_LF2
 1162  00001c50  54000000	nop; delay slot nop
 1163  00001c54  8fc10000	lw	r1,(r30)
 1164  00001c58  90220000	lbu	r2,(r1)
 1165  00001c5c  60410009	seqi	r1,r2,#9
 1166  00001c60  14200020	bnez	r1,L75_LF2
 1167  00001c64  54000000	nop; delay slot nop
 1168  00001c68  8fc10000	lw	r1,(r30)
 1169  00001c6c  90220000	lbu	r2,(r1)
 1170  00001c70  6041000a	seqi	r1,r2,#10
 1171  00001c74  1420000c	bnez	r1,L75_LF2
 1172  00001c78  54000000	nop; delay slot nop
 1173  00001c7c  0800001c	j	L74_LF2
 1174  00001c80  54000000	nop; delay slot nop
 1175  00001c84          	L75_LF2:
 1176  00001c84  8fc20000	lw	r2,(r30)
 1177  00001c88  20410001	addi	r1,r2,#1
 1178  00001c8c  00011020	add	r2,r0,r1
 1179  00001c90  afc20000	sw	(r30),r2
 1180  00001c94  0bffffa8	j	L73_LF2
 1181  00001c98  54000000	nop; delay slot nop
 1182  00001c9c          	L74_LF2:
 1183  00001c9c  8fc10004	lw	r1,4(r30)
 1184  00001ca0  64220000	snei	r2,r1,#0
 1185  00001ca4  10400010	beqz	r2,L76_LF2
 1186  00001ca8  54000000	nop; delay slot nop
 1187  00001cac  8fc10004	lw	r1,4(r30)
 1188  00001cb0  8fc20000	lw	r2,(r30)
 1189  00001cb4  ac220000	sw	(r1),r2
 1190  00001cb8          	L76_LF2:
 1191  00001cb8  8fc10000	lw	r1,(r30)
 1192  00001cbc  90220000	lbu	r2,(r1)
 1193  00001cc0  64410000	snei	r1,r2,#0
 1194  00001cc4  14200010	bnez	r1,L77_LF2
 1195  00001cc8  54000000	nop; delay slot nop
 1196  00001ccc  8fc1fff4	lw	r1,-12(r30)
 1197  00001cd0  08000294	j	L72_LF2
 1198  00001cd4  54000000	nop; delay slot nop
 1199  00001cd8          	L77_LF2:
 1200  00001cd8  8fc10000	lw	r1,(r30)
 1201  00001cdc  90220000	lbu	r2,(r1)
 1202  00001ce0  6041002d	seqi	r1,r2,#45
 1203  00001ce4  10200024	beqz	r1,L78_LF2
 1204  00001ce8  54000000	nop; delay slot nop
 1205  00001cec  2001ffff	addi	r1,r0,#-1
 1206  00001cf0  afc1ffec	sw	-20(r30),r1
 1207  00001cf4  8fc20000	lw	r2,(r30)
 1208  00001cf8  20410001	addi	r1,r2,#1
 1209  00001cfc  00011020	add	r2,r0,r1
 1210  00001d00  afc20000	sw	(r30),r2
 1211  00001d04  0800000c	j	L79_LF2
 1212  00001d08  54000000	nop; delay slot nop
 1213  00001d0c          	L78_LF2:
 1214  00001d0c  20010001	addi	r1,r0,#1
 1215  00001d10  afc1ffec	sw	-20(r30),r1
 1216  00001d14          	L79_LF2:
 1217  00001d14  8fc10008	lw	r1,8(r30)
 1218  00001d18  64220000	snei	r2,r1,#0
 1219  00001d1c  14400090	bnez	r2,L80_LF2
 1220  00001d20  54000000	nop; delay slot nop
 1221  00001d24  8fc10000	lw	r1,(r30)
 1222  00001d28  90220000	lbu	r2,(r1)
 1223  00001d2c  60410030	seqi	r1,r2,#48
 1224  00001d30  10200074	beqz	r1,L81_LF2
 1225  00001d34  54000000	nop; delay slot nop
 1226  00001d38  8fc20000	lw	r2,(r30)
 1227  00001d3c  20410001	addi	r1,r2,#1
 1228  00001d40  00011020	add	r2,r0,r1
 1229  00001d44  afc20000	sw	(r30),r2
 1230  00001d48  8fc10000	lw	r1,(r30)
 1231  00001d4c  90220000	lbu	r2,(r1)
 1232  00001d50  60410078	seqi	r1,r2,#120
 1233  00001d54  14200020	bnez	r1,L83_LF2
 1234  00001d58  54000000	nop; delay slot nop
 1235  00001d5c  8fc10000	lw	r1,(r30)
 1236  00001d60  90220000	lbu	r2,(r1)
 1237  00001d64  60410058	seqi	r1,r2,#88
 1238  00001d68  1420000c	bnez	r1,L83_LF2
 1239  00001d6c  54000000	nop; delay slot nop
 1240  00001d70  08000024	j	L82_LF2
 1241  00001d74  54000000	nop; delay slot nop
 1242  00001d78          	L83_LF2:
 1243  00001d78  20010010	addi	r1,r0,#16
 1244  00001d7c  afc10008	sw	8(r30),r1
 1245  00001d80  8fc20000	lw	r2,(r30)
 1246  00001d84  20410001	addi	r1,r2,#1
 1247  00001d88  00011020	add	r2,r0,r1
 1248  00001d8c  afc20000	sw	(r30),r2
 1249  00001d90  0800000c	j	L84_LF2
 1250  00001d94  54000000	nop; delay slot nop
 1251  00001d98          	L82_LF2:
 1252  00001d98  20010008	addi	r1,r0,#8
 1253  00001d9c  afc10008	sw	8(r30),r1
 1254  00001da0          	L84_LF2:
 1255  00001da0  0800000c	j	L80_LF2
 1256  00001da4  54000000	nop; delay slot nop
 1257  00001da8          	L81_LF2:
 1258  00001da8  2001000a	addi	r1,r0,#10
 1259  00001dac  afc10008	sw	8(r30),r1
 1260  00001db0          	L85_LF2:
 1261  00001db0          	L80_LF2:
 1262  00001db0  8fc10008	lw	r1,8(r30)
 1263  00001db4  70220000	slei	r2,r1,#0
 1264  00001db8  1440001c	bnez	r2,L87_LF2
 1265  00001dbc  54000000	nop; delay slot nop
 1266  00001dc0  8fc10008	lw	r1,8(r30)
 1267  00001dc4  6c220010	sgti	r2,r1,#16
 1268  00001dc8  1440000c	bnez	r2,L87_LF2
 1269  00001dcc  54000000	nop; delay slot nop
 1270  00001dd0  08000010	j	L86_LF2
 1271  00001dd4  54000000	nop; delay slot nop
 1272  00001dd8          	L87_LF2:
 1273  00001dd8  8fc1fff4	lw	r1,-12(r30)
 1274  00001ddc  08000188	j	L72_LF2
 1275  00001de0  54000000	nop; delay slot nop
 1276  00001de4          	L86_LF2:
 1277  00001de4  54000000	nop
 1278  00001de8          	L88_LF2:
 1279  00001de8  8fc10000	lw	r1,(r30)
 1280  00001dec  90220000	lbu	r2,(r1)
 1281  00001df0  6c41002f	sgtui	r1,r2,#47
 1282  00001df4  10200030	beqz	r1,L91_LF2
 1283  00001df8  54000000	nop; delay slot nop
 1284  00001dfc  8fc10000	lw	r1,(r30)
 1285  00001e00  90220000	lbu	r2,(r1)
 1286  00001e04  70410039	sleui	r1,r2,#57
 1287  00001e08  1020001c	beqz	r1,L91_LF2
 1288  00001e0c  54000000	nop; delay slot nop
 1289  00001e10  8fc10000	lw	r1,(r30)
 1290  00001e14  90220000	lbu	r2,(r1)
 1291  00001e18  2041ffd0	addi	r1,r2,#-48
 1292  00001e1c  afc1fff0	sw	-16(r30),r1
 1293  00001e20  0800008c	j	L92_LF2
 1294  00001e24  54000000	nop; delay slot nop
 1295  00001e28          	L91_LF2:
 1296  00001e28  8fc10000	lw	r1,(r30)
 1297  00001e2c  90220000	lbu	r2,(r1)
 1298  00001e30  6c410060	sgtui	r1,r2,#96
 1299  00001e34  10200030	beqz	r1,L93_LF2
 1300  00001e38  54000000	nop; delay slot nop
 1301  00001e3c  8fc10000	lw	r1,(r30)
 1302  00001e40  90220000	lbu	r2,(r1)
 1303  00001e44  7041007a	sleui	r1,r2,#122
 1304  00001e48  1020001c	beqz	r1,L93_LF2
 1305  00001e4c  54000000	nop; delay slot nop
 1306  00001e50  8fc10000	lw	r1,(r30)
 1307  00001e54  90220000	lbu	r2,(r1)
 1308  00001e58  2041ffa9	addi	r1,r2,#-87
 1309  00001e5c  afc1fff0	sw	-16(r30),r1
 1310  00001e60  0800004c	j	L92_LF2
 1311  00001e64  54000000	nop; delay slot nop
 1312  00001e68          	L93_LF2:
 1313  00001e68  8fc10000	lw	r1,(r30)
 1314  00001e6c  90220000	lbu	r2,(r1)
 1315  00001e70  6c410040	sgtui	r1,r2,#64
 1316  00001e74  10200030	beqz	r1,L95_LF2
 1317  00001e78  54000000	nop; delay slot nop
 1318  00001e7c  8fc10000	lw	r1,(r30)
 1319  00001e80  90220000	lbu	r2,(r1)
 1320  00001e84  7041005a	sleui	r1,r2,#90
 1321  00001e88  1020001c	beqz	r1,L95_LF2
 1322  00001e8c  54000000	nop; delay slot nop
 1323  00001e90  8fc10000	lw	r1,(r30)
 1324  00001e94  90220000	lbu	r2,(r1)
 1325  00001e98  2041ffc9	addi	r1,r2,#-55
 1326  00001e9c  afc1fff0	sw	-16(r30),r1
 1327  00001ea0  0800000c	j	L92_LF2
 1328  00001ea4  54000000	nop; delay slot nop
 1329  00001ea8          	L95_LF2:
 1330  00001ea8  200103e8	addi	r1,r0,#1000
 1331  00001eac  afc1fff0	sw	-16(r30),r1
 1332  00001eb0          	L96_LF2:
 1333  00001eb0          	L94_LF2:
 1334  00001eb0          	L92_LF2:
 1335  00001eb0  8fc1fff0	lw	r1,-16(r30)
 1336  00001eb4  8fc20008	lw	r2,8(r30)
 1337  00001eb8  0022082a	slt	r1,r1,r2
 1338  00001ebc  10200040	beqz	r1,L90_LF2
 1339  00001ec0  54000000	nop; delay slot nop
 1340  00001ec4  8fc1fff4	lw	r1,-12(r30)
 1341  00001ec8  8fc20008	lw	r2,8(r30)
 1342  00001ecc  00200035	movi2fp	f0,r1
 1343  00001ed0  00400835	movi2fp	f1,r2
 1344  00001ed4  0401000e	mult	f0,f0,f1
 1345  00001ed8  00000834	movfp2i	r1,f0
 1346  00001edc  afc1fff4	sw	-12(r30),r1
 1347  00001ee0  8fc1fff4	lw	r1,-12(r30)
 1348  00001ee4  8fc2fff0	lw	r2,-16(r30)
 1349  00001ee8  00220820	add	r1,r1,r2
 1350  00001eec  afc1fff4	sw	-12(r30),r1
 1351  00001ef0  8fc20000	lw	r2,(r30)
 1352  00001ef4  20410001	addi	r1,r2,#1
 1353  00001ef8  00011020	add	r2,r0,r1
 1354  00001efc  afc20000	sw	(r30),r2
 1355  00001f00          	L97_LF2:
 1356  00001f00          	L90_LF2:
 1357  00001f00  8fc1fff0	lw	r1,-16(r30)
 1358  00001f04  8fc20008	lw	r2,8(r30)
 1359  00001f08  0022082a	slt	r1,r1,r2
 1360  00001f0c  1420000c	bnez	r1,L98_LF2
 1361  00001f10  54000000	nop; delay slot nop
 1362  00001f14  0800000c	j	L89_LF2
 1363  00001f18  54000000	nop; delay slot nop
 1364  00001f1c          	L98_LF2:
 1365  00001f1c  0bfffec8	j	L88_LF2
 1366  00001f20  54000000	nop; delay slot nop
 1367  00001f24          	L89_LF2:
 1368  00001f24  8fc10004	lw	r1,4(r30)
 1369  00001f28  64220000	snei	r2,r1,#0
 1370  00001f2c  10400010	beqz	r2,L99_LF2
 1371  00001f30  54000000	nop; delay slot nop
 1372  00001f34  8fc10004	lw	r1,4(r30)
 1373  00001f38  8fc20000	lw	r2,(r30)
 1374  00001f3c  ac220000	sw	(r1),r2
 1375  00001f40          	L99_LF2:
 1376  00001f40  8fc1fff4	lw	r1,-12(r30)
 1377  00001f44  8fc2ffec	lw	r2,-20(r30)
 1378  00001f48  00200035	movi2fp	f0,r1
 1379  00001f4c  00400835	movi2fp	f1,r2
 1380  00001f50  0401000e	mult	f0,f0,f1
 1381  00001f54  00000834	movfp2i	r1,f0
 1382  00001f58  afc1fff4	sw	-12(r30),r1
 1383  00001f5c  8fc1fff4	lw	r1,-12(r30)
 1384  00001f60  08000004	j	L72_LF2
 1385  00001f64  54000000	nop; delay slot nop
 1386  00001f68          	L72_LF2:
 1387  00001f68  8fa20000	lw	r2,0(r29)
 1388  00001f6c  8fdffff8	lw	r31,-8(r30)
 1389  00001f70  001ee820	add	r29,r0,r30
 1390  00001f74  8fdefffc	lw	r30,-4(r30)
 1391  00001f78  4be00000	jr	r31
 1392  00001f7c  54000000	nop
 1393  00001f80          	.endproc _dstrtol
 1394  00001f80          	.align 2
 1395  00001f80          	.proc _bcopy
 1396  00001f80          	.global _bcopy
 1397  00001f80          	_bcopy:
 1398                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1399  00001f80  afbefffc	sw	-4(r29),r30; push fp
 1400  00001f84  001df020	add	r30,r0,r29; fp = sp
 1401  00001f88  afbffff8	sw	-8(r29),r31; push ret addr
 1402  00001f8c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1403  00001f90  afa20000	sw	0(r29),r2
 1404  00001f94  afa30004	sw	4(r29),r3
 1405  00001f98  54000000	nop
 1406  00001f9c          	L101_LF2:
 1407  00001f9c  8fc10008	lw	r1,8(r30)
 1408  00001fa0  2022ffff	addi	r2,r1,#-1
 1409  00001fa4  afc20008	sw	8(r30),r2
 1410  00001fa8  6c210000	sgti	r1,r1,#0
 1411  00001fac  1420000c	bnez	r1,L103_LF2
 1412  00001fb0  54000000	nop; delay slot nop
 1413  00001fb4  0800002c	j	L102_LF2
 1414  00001fb8  54000000	nop; delay slot nop
 1415  00001fbc          	L103_LF2:
 1416  00001fbc  8fc10004	lw	r1,4(r30)
 1417  00001fc0  20220001	addi	r2,r1,#1
 1418  00001fc4  afc20004	sw	4(r30),r2
 1419  00001fc8  8fc20000	lw	r2,(r30)
 1420  00001fcc  20430001	addi	r3,r2,#1
 1421  00001fd0  afc30000	sw	(r30),r3
 1422  00001fd4  80420000	lb	r2,(r2)
 1423  00001fd8  a0220000	sb	(r1),r2
 1424  00001fdc  0bffffbc	j	L101_LF2
 1425  00001fe0  54000000	nop; delay slot nop
 1426  00001fe4          	L102_LF2:
 1427  00001fe4          	L100_LF2:
 1428  00001fe4  8fa20000	lw	r2,0(r29)
 1429  00001fe8  8fa30004	lw	r3,4(r29)
 1430  00001fec  8fdffff8	lw	r31,-8(r30)
 1431  00001ff0  001ee820	add	r29,r0,r30
 1432  00001ff4  8fdefffc	lw	r30,-4(r30)
 1433  00001ff8  4be00000	jr	r31
 1434  00001ffc  54000000	nop
 1435  00002000          	.endproc _bcopy
 1436  00002000          	.align 2
 1437  00002000          	.proc _bzero
 1438  00002000          	.global _bzero
 1439  00002000          	_bzero:
 1440                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1441  00002000  afbefffc	sw	-4(r29),r30; push fp
 1442  00002004  001df020	add	r30,r0,r29; fp = sp
 1443  00002008  afbffff8	sw	-8(r29),r31; push ret addr
 1444  0000200c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1445  00002010  afa20000	sw	0(r29),r2
 1446  00002014  54000000	nop
 1447  00002018          	L105_LF2:
 1448  00002018  8fc10004	lw	r1,4(r30)
 1449  0000201c  2022ffff	addi	r2,r1,#-1
 1450  00002020  afc20004	sw	4(r30),r2
 1451  00002024  6c210000	sgti	r1,r1,#0
 1452  00002028  1420000c	bnez	r1,L107_LF2
 1453  0000202c  54000000	nop; delay slot nop
 1454  00002030  08000020	j	L106_LF2
 1455  00002034  54000000	nop; delay slot nop
 1456  00002038          	L107_LF2:
 1457  00002038  8fc10000	lw	r1,(r30)
 1458  0000203c  20220001	addi	r2,r1,#1
 1459  00002040  afc20000	sw	(r30),r2
 1460  00002044  20020000	addi	r2,r0,(#0x0)&0xff
 1461  00002048  a0220000	sb	(r1),r2
 1462  0000204c  0bffffc8	j	L105_LF2
 1463  00002050  54000000	nop; delay slot nop
 1464  00002054          	L106_LF2:
 1465  00002054          	L104_LF2:
 1466  00002054  8fa20000	lw	r2,0(r29)
 1467  00002058  8fdffff8	lw	r31,-8(r30)
 1468  0000205c  001ee820	add	r29,r0,r30
 1469  00002060  8fdefffc	lw	r30,-4(r30)
 1470  00002064  4be00000	jr	r31
 1471  00002068  54000000	nop
 1472  0000206c          	.endproc _bzero
 1473  0000206c          	.align 2
 1474  0000206c          	.proc _min
 1475  0000206c          	.global _min
 1476  0000206c          	_min:
 1477                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1478  0000206c  afbefffc	sw	-4(r29),r30; push fp
 1479  00002070  001df020	add	r30,r0,r29; fp = sp
 1480  00002074  afbffff8	sw	-8(r29),r31; push ret addr
 1481  00002078  2fbd0010	subui	r29,r29,#16; alloc local storage
 1482  0000207c  afa20000	sw	0(r29),r2
 1483  00002080  afa30004	sw	4(r29),r3
 1484  00002084  8fc10000	lw	r1,(r30)
 1485  00002088  8fc20004	lw	r2,4(r30)
 1486  0000208c  0022182c	sle	r3,r1,r2
 1487  00002090  14600008	bnez	r3,L109_LF2
 1488  00002094  54000000	nop; delay slot nop
 1489  00002098  8fc10004	lw	r1,4(r30)
 1490  0000209c          	L109_LF2:
 1491  0000209c  08000004	j	L108_LF2
 1492  000020a0  54000000	nop; delay slot nop
 1493  000020a4          	L108_LF2:
 1494  000020a4  8fa20000	lw	r2,0(r29)
 1495  000020a8  8fa30004	lw	r3,4(r29)
 1496  000020ac  8fdffff8	lw	r31,-8(r30)
 1497  000020b0  001ee820	add	r29,r0,r30
 1498  000020b4  8fdefffc	lw	r30,-4(r30)
 1499  000020b8  4be00000	jr	r31
 1500  000020bc  54000000	nop
 1501  000020c0          	.endproc _min
 1502  000020c0          	.align 2
 1503  000020c0          	.proc _max
 1504  000020c0          	.global _max
 1505  000020c0          	_max:
 1506                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1507  000020c0  afbefffc	sw	-4(r29),r30; push fp
 1508  000020c4  001df020	add	r30,r0,r29; fp = sp
 1509  000020c8  afbffff8	sw	-8(r29),r31; push ret addr
 1510  000020cc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1511  000020d0  afa20000	sw	0(r29),r2
 1512  000020d4  afa30004	sw	4(r29),r3
 1513  000020d8  8fc10000	lw	r1,(r30)
 1514  000020dc  8fc20004	lw	r2,4(r30)
 1515  000020e0  0022182d	sge	r3,r1,r2
 1516  000020e4  14600008	bnez	r3,L111_LF2
 1517  000020e8  54000000	nop; delay slot nop
 1518  000020ec  8fc10004	lw	r1,4(r30)
 1519  000020f0          	L111_LF2:
 1520  000020f0  08000004	j	L110_LF2
 1521  000020f4  54000000	nop; delay slot nop
 1522  000020f8          	L110_LF2:
 1523  000020f8  8fa20000	lw	r2,0(r29)
 1524  000020fc  8fa30004	lw	r3,4(r29)
 1525  00002100  8fdffff8	lw	r31,-8(r30)
 1526  00002104  001ee820	add	r29,r0,r30
 1527  00002108  8fdefffc	lw	r30,-4(r30)
 1528  0000210c  4be00000	jr	r31
 1529  00002110  54000000	nop
 1530  00002114          	.endproc _max
 1531                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1532                      ;;;
 1533                      ;;; Most of the traps are called in files from libtraps.
 1536  00002114          	.align 2
 1537  00002114          	.proc _exit
 1538  00002114          	.global _exit
 1539  00002114          	_exit:
 1540  00002114  44000300	trap	#0x300
 1541  00002118  4be00000	jr	r31
 1542  0000211c  54000000	nop
 1543  00002120          	.endproc _exit
 1545                      ; for the benefit of gcc.
 1546  00002120          	.proc ___main
 1547  00002120          	.global ___main
 1548  00002120          	___main:
 1549  00002120  4be00000	jr	r31
 1550  00002124  54000000	nop
 1551  00002128          	.endproc ___main
 1552  00002128          	.text
 1553  00002128          	.global _etext
 1554  00002128          	_etext:
 1555  00002128          	.align 3
 1556  00002128          	.data
 1557  000030f9          	.global _edata
 1558  000030f9          	_edata:
