; Compiled by GCC
.text
	.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#32
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#9
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#10
	bnez	r4,L3
	nop	; delay slot nop
	j	L2
	nop	; delay slot nop
L3:
	addi	r1,r0,#1
L2:
	j	L1
	nop	; delay slot nop
L1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
	.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#47
	beqz	r4,L7
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#57
	bnez	r4,L6
	nop	; delay slot nop
	j	L7
	nop	; delay slot nop
L7:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#96
	beqz	r4,L8
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#102
	bnez	r4,L6
	nop	; delay slot nop
	j	L8
	nop	; delay slot nop
L8:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#64
	beqz	r4,L5
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#65
	bnez	r4,L6
	nop	; delay slot nop
	j	L5
	nop	; delay slot nop
L6:
	addi	r1,r0,#1
L5:
	j	L4
	nop	; delay slot nop
L4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
	.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#15
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L9
	nop	; delay slot nop
L9:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
	.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#0
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L10
	nop	; delay slot nop
L10:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
	.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	addi	r29,r29,#-8
	add	r1,r0,r29
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r3,r0,r1
	add	r1,r0,r3
	j	L11
	nop	; delay slot nop
L11:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.global _pagemap
.data
	.align 2
_pagemap:
	.word 0
	.space 2044
	.align 2
_negativeone:
	.word -1
.text
	.align 2
.proc _MemoryGetSize
.global _MemoryGetSize
_MemoryGetSize:
;  Function 'MemoryGetSize'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lhi	r2,#-1
	addui	r2,r2,#0
	lw	r1,(r2)
	j	L14
	nop	; delay slot nop
L14:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryGetSize
	.align 2
.proc _MemoryModuleInit
.global _MemoryModuleInit
_MemoryModuleInit:
;  Function 'MemoryModuleInit'; 16 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lhi	r1,((_lastosaddress)>>16)&0xffff
	addui	r1,r1,(_lastosaddress)&0xffff
	lw	r2,(r1)
	add	r1,r0,r2
	sgei	r2,r1,#0
	bnez	r2,L16
	nop	; delay slot nop
	addi	r1,r1,#4095
L16:
	srai	r1,r1,#0xc
	sw	-20(r30),r1
	lhi	r2,((_lastosaddress)>>16)&0xffff
	addui	r2,r2,(_lastosaddress)&0xffff
	lw	r1,(r2)
	add	r2,r0,r1
	sgei	r3,r2,#0
	bnez	r3,L18
	nop	; delay slot nop
	addi	r2,r2,#4095
L18:
	srai	r2,r2,#0xc
	addi	r3,r0,#4096
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	sub	r1,r1,r2
	sgti	r2,r1,#0
	beqz	r2,L17
	nop	; delay slot nop
	lw	r2,-20(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-20(r30),r2
L17:
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L19:
	lw	r1,-12(r30)
	slei	r2,r1,#15
	bnez	r2,L22
	nop	; delay slot nop
	j	L20
	nop	; delay slot nop
L22:
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r2,r1,r31
	addi	r1,r0,#0
	sw	(r2),r1
	addi	r1,r0,#1
	sw	-24(r30),r1
	addi	r1,r0,#0
	sw	-16(r30),r1
L23:
	lw	r1,-16(r30)
	slei	r2,r1,#31
	bnez	r2,L26
	nop	; delay slot nop
	j	L21
	nop	; delay slot nop
L26:
	lw	r1,-20(r30)
	slei	r2,r1,#0
	beqz	r2,L27
	nop	; delay slot nop
	lw	r1,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r1,r2,r31
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r3,r2,r31
	lw	r2,(r3)
	lw	r3,-24(r30)
	or	r2,r2,r3
	sw	(r1),r2
	j	L28
	nop	; delay slot nop
L27:
	lw	r2,-20(r30)
	addi	r1,r2,#-1
	add	r2,r0,r1
	sw	-20(r30),r2
L28:
	lw	r1,-24(r30)
	slli	r2,r1,#0x1
	sw	-24(r30),r2
L25:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L23
	nop	; delay slot nop
L24:
L21:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L19
	nop	; delay slot nop
L20:
L15:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryModuleInit
	.align 2
.proc _MemoryTranslateUserToSystem
.global _MemoryTranslateUserToSystem
_MemoryTranslateUserToSystem:
;  Function 'MemoryTranslateUserToSystem'; 16 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,4(r30)
	andi	r2,r1,#4095
	sw	-16(r30),r2
	lw	r1,4(r30)
	srli	r2,r1,#0xc
	sw	-12(r30),r2
	lw	r1,-16(r30)
	sw	-20(r30),r1
	lw	r1,(r30)
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#96
	lw	r3,(r2)
	lhi	r31,#31
	addui	r31,r31,#61440
	and	r1,r3,r31
	lw	r2,-20(r30)
	or	r1,r2,r1
	sw	-20(r30),r1
	lw	r1,-20(r30)
	j	L29
	nop	; delay slot nop
L29:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryTranslateUserToSystem
	.align 2
.proc _MemoryMoveBetweenSpaces
.global _MemoryMoveBetweenSpaces
_MemoryMoveBetweenSpaces:
;  Function 'MemoryMoveBetweenSpaces'; 16 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	addi	r1,r0,#0
	sw	-16(r30),r1
L31:
	lw	r1,12(r30)
	sgti	r2,r1,#0
	bnez	r2,L33
	nop	; delay slot nop
	j	L32
	nop	; delay slot nop
L33:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,8(r30)
	sw	4(r1),r2
	jal	_MemoryTranslateUserToSystem
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
	lw	r1,-12(r30)
	snei	r2,r1,#0
	bnez	r2,L34
	nop	; delay slot nop
	j	L32
	nop	; delay slot nop
L34:
	lw	r2,-12(r30)
	andi	r1,r2,#4095
	addi	r2,r0,#4096
	sub	r1,r2,r1
	sw	-20(r30),r1
	lw	r1,-20(r30)
	lw	r2,12(r30)
	sgt	r1,r1,r2
	beqz	r1,L35
	nop	; delay slot nop
	lw	r1,12(r30)
	sw	-20(r30),r1
L35:
	lw	r1,16(r30)
	sgei	r2,r1,#0
	beqz	r2,L36
	nop	; delay slot nop
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,4(r30)
	sw	(r1),r2
	lw	r2,-12(r30)
	sw	4(r1),r2
	lw	r2,-20(r30)
	sw	8(r1),r2
	jal	_bcopy
	nop	; delay slot nop
	addi	r29,r29,#16
	j	L37
	nop	; delay slot nop
L36:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	lw	r2,-20(r30)
	sw	8(r1),r2
	jal	_bcopy
	nop	; delay slot nop
	addi	r29,r29,#16
L37:
	lw	r1,12(r30)
	lw	r2,-20(r30)
	sub	r1,r1,r2
	sw	12(r30),r1
	lw	r1,-16(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	sw	-16(r30),r1
	lw	r1,4(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	sw	4(r30),r1
	lw	r1,8(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	sw	8(r30),r1
	j	L31
	nop	; delay slot nop
L32:
	lw	r1,-16(r30)
	j	L30
	nop	; delay slot nop
L30:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryMoveBetweenSpaces
	.align 2
.proc _MemoryCopySystemToUser
.global _MemoryCopySystemToUser
_MemoryCopySystemToUser:
;  Function 'MemoryCopySystemToUser'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-24
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	lw	r2,8(r30)
	sw	8(r1),r2
	lw	r2,12(r30)
	sw	12(r1),r2
	addi	r2,r0,#1
	sw	16(r1),r2
	jal	_MemoryMoveBetweenSpaces
	nop	; delay slot nop
	addi	r29,r29,#24
	add	r2,r0,r1
	add	r1,r0,r2
	j	L38
	nop	; delay slot nop
L38:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryCopySystemToUser
	.align 2
.proc _MemoryCopyUserToSystem
.global _MemoryCopyUserToSystem
_MemoryCopyUserToSystem:
;  Function 'MemoryCopyUserToSystem'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-24
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,8(r30)
	sw	4(r1),r2
	lw	r2,4(r30)
	sw	8(r1),r2
	lw	r2,12(r30)
	sw	12(r1),r2
	addi	r2,r0,#-1
	sw	16(r1),r2
	jal	_MemoryMoveBetweenSpaces
	nop	; delay slot nop
	addi	r29,r29,#24
	add	r2,r0,r1
	add	r1,r0,r2
	j	L39
	nop	; delay slot nop
L39:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryCopyUserToSystem
.data
	.align 2
LC0:
	.ascii "Entering Page Fault Handling\n\000"
	.align 2
LC1:
	.ascii "fault address: %X\n\000"
	.align 2
LC2:
	.ascii "user stack pointer: %X\n\000"
	.align 2
LC3:
	.ascii "FATAL ERROR: Could not allocate memory\n\000"
	.align 2
LC4:
	.ascii "segfault!!!!\n\000"
.text
	.align 2
.proc _MemoryPageFaultHandler
.global _MemoryPageFaultHandler
_MemoryPageFaultHandler:
;  Function 'MemoryPageFaultHandler'; 24 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#48	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC0)>>16)&0xffff
	addui	r2,r2,(LC0)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,(r30)
	lw	r2,(r1)
	addi	r1,r2,#308
	lw	r2,(r1)
	sw	-12(r30),r2
	lw	r1,(r30)
	lw	r2,(r1)
	addi	r1,r2,#156
	lw	r2,(r1)
	sw	-16(r30),r2
	lw	r2,-12(r30)
	lhi	r5,#31
	addui	r5,r5,#61440
	and	r1,r2,r5
	andi	r2,r1,#31
	sw	-20(r30),r2
	lw	r2,-12(r30)
	srli	r1,r2,#0xc
	srli	r2,r1,#0x5
	sw	-24(r30),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC1)>>16)&0xffff
	addui	r2,r2,(LC1)&0xffff
	sw	(r1),r2
	lw	r2,-12(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC2)>>16)&0xffff
	addui	r2,r2,(LC2)&0xffff
	sw	(r1),r2
	lw	r2,-16(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-12(r30)
	lw	r2,-16(r30)
	sgeu	r1,r1,r2
	beqz	r1,L41
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_MemoryAllocPage
	nop	; delay slot nop
	add	r2,r0,r1
	sw	-28(r30),r2
	seqi	r1,r2,#-1
	beqz	r1,L42
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC3)>>16)&0xffff
	addui	r2,r2,(LC3)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_exitsim
	nop	; delay slot nop
L42:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-28(r30)
	sw	(r1),r2
	jal	_MemorySetupPte
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,(r30)
	lw	r3,-24(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	add	r2,r3,r2
	addi	r3,r2,#96
	sw	(r3),r1
	addi	r1,r0,#1
	j	L40
	nop	; delay slot nop
	j	L43
	nop	; delay slot nop
L41:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC4)>>16)&0xffff
	addui	r2,r2,(LC4)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	jal	_ProcessKill
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L40
	nop	; delay slot nop
L43:
L40:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryPageFaultHandler
	.align 2
.proc _MemoryAllocPage
.global _MemoryAllocPage
_MemoryAllocPage:
;  Function 'MemoryAllocPage'; 16 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L45:
	lw	r1,-12(r30)
	slei	r2,r1,#15
	bnez	r2,L48
	nop	; delay slot nop
	j	L46
	nop	; delay slot nop
L48:
	addi	r1,r0,#1
	sw	-24(r30),r1
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r2,r1,r31
	lw	r1,(r2)
	snei	r2,r1,#0
	beqz	r2,L47
	nop	; delay slot nop
	addi	r1,r0,#0
	sw	-16(r30),r1
L50:
	lw	r1,-16(r30)
	slei	r2,r1,#31
	bnez	r2,L53
	nop	; delay slot nop
	j	L47
	nop	; delay slot nop
L53:
	lw	r1,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r1,r2,r31
	lw	r2,-24(r30)
	lw	r3,-16(r30)
	sll	r2,r2,r3
	lw	r3,(r1)
	and	r1,r2,r3
	snei	r2,r1,#0
	beqz	r2,L52
	nop	; delay slot nop
	lw	r1,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r1,r2,r31
	lw	r2,-12(r30)
	addi	r4,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r2,r3,r31
	lw	r3,-24(r30)
	lw	r4,-16(r30)
	sll	r3,r3,r4
	lw	r2,(r2)
	xor	r3,r2,r3
	sw	(r1),r3
	lw	r1,-12(r30)
	addi	r2,r0,#32
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,-16(r30)
	add	r1,r1,r2
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_pagemap)>>16)&0xffff
	addui	r31,r31,(_pagemap)&0xffff
	add	r1,r2,r31
	lw	r2,-12(r30)
	addi	r3,r0,#32
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r1,f0
	lw	r2,-16(r30)
	add	r1,r1,r2
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_pagemap)>>16)&0xffff
	addui	r31,r31,(_pagemap)&0xffff
	add	r1,r2,r31
	lw	r2,-12(r30)
	addi	r3,r0,#32
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lw	r3,-16(r30)
	add	r2,r2,r3
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_pagemap)>>16)&0xffff
	addui	r31,r31,(_pagemap)&0xffff
	add	r3,r2,r31
	lw	r4,(r3)
	addi	r2,r4,#1
	add	r3,r0,r2
	sw	(r1),r3
	lw	r1,-12(r30)
	add	r2,r0,r1
	slli	r1,r2,#0x5
	lw	r3,-16(r30)
	add	r2,r1,r3
	add	r1,r0,r2
	j	L44
	nop	; delay slot nop
L54:
L52:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L50
	nop	; delay slot nop
L51:
L49:
L47:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L45
	nop	; delay slot nop
L46:
	addi	r1,r0,#-1
	j	L44
	nop	; delay slot nop
L44:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryAllocPage
	.align 2
.proc _MemorySetupPte
.global _MemorySetupPte
_MemorySetupPte:
;  Function 'MemorySetupPte'; 8 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	slli	r2,r1,#0xc
	sw	-12(r30),r2
	lw	r1,-12(r30)
	ori	r2,r1,#1
	sw	-12(r30),r2
	lw	r1,-12(r30)
	j	L55
	nop	; delay slot nop
L55:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemorySetupPte
	.align 2
.proc _MemoryFreePage
.global _MemoryFreePage
_MemoryFreePage:
;  Function 'MemoryFreePage'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,(r30)
	lhi	r31,#31
	addui	r31,r31,#61440
	and	r2,r1,r31
	sw	(r30),r2
	lw	r1,(r30)
	srli	r2,r1,#0xc
	sw	(r30),r2
	lw	r1,(r30)
	andi	r2,r1,#31
	sw	-12(r30),r2
	lw	r2,(r30)
	srli	r1,r2,#0x5
	sw	-16(r30),r1
	lw	r1,(r30)
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_pagemap)>>16)&0xffff
	addui	r31,r31,(_pagemap)&0xffff
	add	r1,r2,r31
	lw	r2,(r30)
	addi	r1,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r1
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_pagemap)>>16)&0xffff
	addui	r31,r31,(_pagemap)&0xffff
	add	r1,r2,r31
	lw	r2,(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_pagemap)>>16)&0xffff
	addui	r31,r31,(_pagemap)&0xffff
	add	r3,r2,r31
	lw	r4,(r3)
	addi	r2,r4,#-1
	add	r3,r0,r2
	sw	(r1),r3
	lw	r1,(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lhi	r31,((_pagemap)>>16)&0xffff
	addui	r31,r31,(_pagemap)&0xffff
	add	r2,r1,r31
	lw	r1,(r2)
	snei	r2,r1,#0
	bnez	r2,L57
	nop	; delay slot nop
	lw	r1,-16(r30)
	addi	r3,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r1,r2,r31
	lw	r2,-16(r30)
	addi	r4,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lhi	r31,((_freemap)>>16)&0xffff
	addui	r31,r31,(_freemap)&0xffff
	add	r2,r3,r31
	addi	r3,r0,#1
	lw	r4,-12(r30)
	sll	r3,r3,r4
	lw	r2,(r2)
	xor	r3,r2,r3
	sw	(r1),r3
L57:
L56:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryFreePage
.data
	.align 2
_freemap:
	.space 60
	.align 2
_pagestart:
	.space 4
	.align 2
_nfreepages:
	.space 4
	.align 2
_freemapmax:
	.space 4
