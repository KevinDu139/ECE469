 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 247
    4                      ; Text size: 4600
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  52454355	.ascii "RECURSE\n\000"
   82  00003004  5253450a	
   82  00003008  00      	
   83  00003009          	.text
   84  000010d4          	.align 2
   85  000010d4          	.proc _factorial
   86  000010d4          	.global _factorial
   87  000010d4          	_factorial:
   88                      ;  Function 'factorial'; 0 bytes of locals, 2 regs to save.
   89  000010d4  afbefffc	sw	-4(r29),r30; push fp
   90  000010d8  001df020	add	r30,r0,r29; fp = sp
   91  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   92  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
   93  000010e4  afa20000	sw	0(r29),r2
   94  000010e8  afa30004	sw	4(r29),r3
   95  000010ec  8fc20000	lw	r2,(r30)
   96  000010f0  23bdfff8	addi	r29,r29,#-8
   97  000010f4  3c030000	lhi	r3,((LC0_LF0)>>16)&0xffff
   98  000010f8  24633000	addui	r3,r3,(LC0_LF0)&0xffff
   99  000010fc  afa30000	sw	(r29),r3
  100  00001100  0c00022c	jal	_Printf
  101  00001104  54000000	nop; not filled.
  102  00001108  23bd0008	addi	r29,r29,#8
  103  0000110c  64410000	snei	r1,r2,#0
  104  00001110  10200028	beqz	r1,L16_LF0
  105  00001114  54000000	nop; not filled.
  106  00001118  23bdfff8	addi	r29,r29,#-8
  107  0000111c  2041ffff	addi	r1,r2,#-1
  108  00001120  afa10000	sw	(r29),r1
  109  00001124  0fffffac	jal	_factorial
  110  00001128  54000000	nop; not filled.
  111  0000112c  20210001	addi	r1,r1,#1
  112  00001130  23bd0008	addi	r29,r29,#8
  113  00001134  08000008	j	L15_LF0
  114  00001138  54000000	nop; not filled.
  115  0000113c          	L16_LF0:
  116  0000113c  20010001	addi	r1,r0,#1
  117  00001140          	L15_LF0:
  118  00001140  8fa20000	lw	r2,0(r29)
  119  00001144  8fa30004	lw	r3,4(r29)
  120  00001148  8fdffff8	lw	r31,-8(r30)
  121  0000114c  001ee820	add	r29,r0,r30
  122  00001150  8fdefffc	lw	r30,-4(r30)
  123  00001154  4be00000	jr	r31
  124  00001158  54000000	nop
  125  0000115c          	.endproc _factorial
  126  0000115c          	.data
  127  00003009          	.align 2
  128  0000300c          	LC1_LF0:
  129  0000300c  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
  129  00003010  653a2025	
  129  00003014  73203c68	
  129  00003018  616e646c	
  129  0000301c  655f746f	
  129  00003020  5f70726f	
  129  00003024  63735f63	
  129  00003028  6f6d706c	
  129  0000302c  65746564	
  129  00003030  5f73656d	
  129  00003034  6170686f	
  129  00003038  72653e0a	
  129  0000303c  00      	
  130  0000303d          	.align 2
  131  00003040          	LC2_LF0:
  132  00003040  54657374	.ascii "Test Stack Growth (%d): Start\n\000"
  132  00003044  20537461	
  132  00003048  636b2047	
  132  0000304c  726f7774	
  132  00003050  68202825	
  132  00003054  64293a20	
  132  00003058  53746172	
  132  0000305c  740a00  	
  133  0000305f          	.align 2
  134  00003060          	LC3_LF0:
  135  00003060  43616c6c	.ascii "Calling Recursive Function %d\n\000"
  135  00003064  696e6720	
  135  00003068  52656375	
  135  0000306c  72736976	
  135  00003070  65204675	
  135  00003074  6e637469	
  135  00003078  6f6e2025	
  135  0000307c  640a00  	
  136  0000307f          	.align 2
  137  00003080          	LC4_LF0:
  138  00003080  25642052	.ascii "%d Recursive Calls Made\n\000"
  138  00003084  65637572	
  138  00003088  73697665	
  138  0000308c  2043616c	
  138  00003090  6c73204d	
  138  00003094  6164650a	
  138  00003098  00      	
  139  00003099          	.align 2
  140  0000309c          	LC5_LF0:
  141  0000309c  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
  141  000030a0  6f5f776f	
  141  000030a4  726c6420	
  141  000030a8  28256429	
  141  000030ac  3a204261	
  141  000030b0  64207365	
  141  000030b4  6d617068	
  141  000030b8  6f726520	
  141  000030bc  735f7072	
  141  000030c0  6f63735f	
  141  000030c4  636f6d70	
  141  000030c8  6c657465	
  141  000030cc  64202825	
  141  000030d0  6429210a	
  141  000030d4  00      	
  142  000030d5          	.align 2
  143  000030d8          	LC6_LF0:
  144  000030d8  53746163	.ascii "Stack Growth Test (%d): Done!\n\000"
  144  000030dc  6b204772	
  144  000030e0  6f777468	
  144  000030e4  20546573	
  144  000030e8  74202825	
  144  000030ec  64293a20	
  144  000030f0  446f6e65	
  144  000030f4  210a00  	
  145  000030f7          	.text
  146  0000115c          	.align 2
  147  0000115c          	.proc _main
  148  0000115c          	.global _main
  149  0000115c          	_main:
  150                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  151  0000115c  afbefffc	sw	-4(r29),r30; push fp
  152  00001160  001df020	add	r30,r0,r29; fp = sp
  153  00001164  afbffff8	sw	-8(r29),r31; push ret addr
  154  00001168  2fbd0008	subui	r29,r29,#8; alloc local storage
  155  0000116c  8fc20000	lw	r2,(r30)
  156  00001170  8fc30004	lw	r3,4(r30)
  157  00001174  0c001078	jal	___main
  158  00001178  54000000	nop; not filled.
  159  0000117c  64410002	snei	r1,r2,#2
  160  00001180  10200028	beqz	r1,L19_LF0
  161  00001184  54000000	nop; not filled.
  162  00001188  23bdfff8	addi	r29,r29,#-8
  163  0000118c  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  164  00001190  2484300c	addui	r4,r4,(LC1_LF0)&0xffff
  165  00001194  afa40000	sw	(r29),r4
  166  00001198  0c000194	jal	_Printf
  167  0000119c  54000000	nop; not filled.
  168  000011a0  0c000294	jal	_Exit
  169  000011a4  54000000	nop; not filled.
  170  000011a8  23bd0008	addi	r29,r29,#8
  171  000011ac          	L19_LF0:
  172  000011ac  23bdfff0	addi	r29,r29,#-16
  173  000011b0  8c630004	lw	r3,4(r3)
  174  000011b4  afa30000	sw	(r29),r3
  175  000011b8  20040000	addi	r4,r0,#0
  176  000011bc  afa40004	sw	4(r29),r4
  177  000011c0  2004000a	addi	r4,r0,#10
  178  000011c4  afa40008	sw	8(r29),r4
  179  000011c8  0c000b28	jal	_dstrtol
  180  000011cc  54000000	nop; not filled.
  181  000011d0  00011020	add	r2,r0,r1
  182  000011d4  0c000164	jal	_getpid
  183  000011d8  54000000	nop; not filled.
  184  000011dc  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  185  000011e0  24843040	addui	r4,r4,(LC2_LF0)&0xffff
  186  000011e4  afa40000	sw	(r29),r4
  187  000011e8  afa10004	sw	4(r29),r1
  188  000011ec  0c000140	jal	_Printf
  189  000011f0  54000000	nop; not filled.
  190  000011f4  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  191  000011f8  24843060	addui	r4,r4,(LC3_LF0)&0xffff
  192  000011fc  afa40000	sw	(r29),r4
  193  00001200  20042710	addi	r4,r0,#10000
  194  00001204  afa40004	sw	4(r29),r4
  195  00001208  0c000124	jal	_Printf
  196  0000120c  54000000	nop; not filled.
  197  00001210  23bd0010	addi	r29,r29,#16
  198  00001214  23bdfff8	addi	r29,r29,#-8
  199  00001218  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  200  0000121c  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  201  00001220  afa40000	sw	(r29),r4
  202  00001224  0c000108	jal	_Printf
  203  00001228  54000000	nop; not filled.
  204  0000122c  23bd0008	addi	r29,r29,#8
  205  00001230  23bdfff8	addi	r29,r29,#-8
  206  00001234  2004270f	addi	r4,r0,#9999
  207  00001238  afa40000	sw	(r29),r4
  208  0000123c  0ffffe94	jal	_factorial
  209  00001240  54000000	nop; not filled.
  210  00001244  20210001	addi	r1,r1,#1
  211  00001248  23bd0008	addi	r29,r29,#8
  212  0000124c  23bdfff8	addi	r29,r29,#-8
  213  00001250  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  214  00001254  24843080	addui	r4,r4,(LC4_LF0)&0xffff
  215  00001258  afa40000	sw	(r29),r4
  216  0000125c  afa10004	sw	4(r29),r1
  217  00001260  0c0000cc	jal	_Printf
  218  00001264  54000000	nop; not filled.
  219  00001268  afa20000	sw	(r29),r2
  220  0000126c  0c000114	jal	_sem_signal
  221  00001270  54000000	nop; not filled.
  222  00001274  23bd0008	addi	r29,r29,#8
  223  00001278  64210001	snei	r1,r1,#1
  224  0000127c  10200038	beqz	r1,L22_LF0
  225  00001280  54000000	nop; not filled.
  226  00001284  0c0000b4	jal	_getpid
  227  00001288  54000000	nop; not filled.
  228  0000128c  23bdfff0	addi	r29,r29,#-16
  229  00001290  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  230  00001294  2484309c	addui	r4,r4,(LC5_LF0)&0xffff
  231  00001298  afa40000	sw	(r29),r4
  232  0000129c  afa10004	sw	4(r29),r1
  233  000012a0  afa20008	sw	8(r29),r2
  234  000012a4  0c000088	jal	_Printf
  235  000012a8  54000000	nop; not filled.
  236  000012ac  0c000188	jal	_Exit
  237  000012b0  54000000	nop; not filled.
  238  000012b4  23bd0010	addi	r29,r29,#16
  239  000012b8          	L22_LF0:
  240  000012b8  0c000080	jal	_getpid
  241  000012bc  54000000	nop; not filled.
  242  000012c0  23bdfff8	addi	r29,r29,#-8
  243  000012c4  3c040000	lhi	r4,((LC6_LF0)>>16)&0xffff
  244  000012c8  248430d8	addui	r4,r4,(LC6_LF0)&0xffff
  245  000012cc  afa40000	sw	(r29),r4
  246  000012d0  afa10004	sw	4(r29),r1
  247  000012d4  0c000058	jal	_Printf
  248  000012d8  54000000	nop; not filled.
  249  000012dc  23bd0008	addi	r29,r29,#8
  250  000012e0  0c000f00	jal	_exit
  251  000012e4  54000000	nop
  252  000012e8          	.endproc _main
  253                      ;;;
  254                      ;;; Stub functions for DLX traps.
  255                      ;;;
  256                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  257                      ;;;
  258                      ;;; The traps such as Open and Close
  259                      ;;; (note the capital letters) are for use by user programs.  The traps
  260                      ;;; with names such as open and close (lower case) are for use by the OS.
  261                      ;;;
  264  000012e8          	.align 2
  266                      ;;; The following are the traps to be used by user-level programs
  267                      ;;;
  269  000012e8          	.align 2
  270  000012e8          	.proc _Open
  271  000012e8          	.global _Open
  272  000012e8          	_Open:
  273                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  274                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  275                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  276  000012e8  44000213	trap	#0x213
  277  000012ec  4be00000	jr	r31
  278  000012f0  54000000	nop
  279  000012f4          	.endproc _Open
  281  000012f4          	.proc _Close
  282  000012f4          	.global _Close
  283  000012f4          	_Close:
  284  000012f4  44000214	trap	#0x214
  285  000012f8  4be00000	jr	r31
  286  000012fc  54000000	nop
  287  00001300          	.endproc _Close
  289  00001300          	.proc _Read
  290  00001300          	.global _Read
  291  00001300          	_Read:
  292  00001300  44000210	trap	#0x210
  293  00001304  4be00000	jr	r31
  294  00001308  54000000	nop
  295  0000130c          	.endproc _Read
  297  0000130c          	.proc _Write
  298  0000130c          	.global _Write
  299  0000130c          	_Write:
  300  0000130c  44000211	trap	#0x211
  301  00001310  4be00000	jr	r31
  302  00001314  54000000	nop
  303  00001318          	.endproc _Write
  305  00001318          	.proc _Lseek
  306  00001318          	.global _Lseek
  307  00001318          	_Lseek:
  308  00001318  44000212	trap	#0x212
  309  0000131c  4be00000	jr	r31
  310  00001320  54000000	nop
  311  00001324          	.endproc _Lseek
  313  00001324          	.proc _Putchar
  314  00001324          	.global _Putchar
  315  00001324          	_Putchar:
  316  00001324  44000280	trap	#0x280
  317  00001328  4be00000	jr	r31
  318  0000132c  54000000	nop
  319  00001330          	.endproc _Putchar
  321  00001330          	.proc _Printf
  322  00001330          	.global _Printf
  323  00001330          	_Printf:
  324  00001330  44000201	trap	#0x201
  325  00001334  4be00000	jr	r31
  326  00001338  54000000	nop
  327  0000133c          	.endproc _Printf
  329  0000133c          	.proc _getpid
  330  0000133c          	.global _getpid
  331  0000133c          	_getpid:
  332  0000133c  44000431	trap	#0x431
  333  00001340  4be00000	jr	r31
  334  00001344  54000000	nop
  335  00001348          	.endproc _getpid
  337  00001348          	.proc _process_create
  338  00001348          	.global _process_create
  339  00001348          	_process_create:
  340  00001348  44000432	trap	#0x432
  341  0000134c  4be00000	jr	r31
  342  00001350  54000000	nop
  343  00001354          	.endproc _process_create
  345  00001354          	.proc _shmget
  346  00001354          	.global _shmget
  347  00001354          	_shmget:
  348  00001354  44000440	trap	#0x440
  349  00001358  4be00000	jr	r31
  350  0000135c  54000000	nop
  351  00001360          	.endproc _shmget
  353  00001360          	.proc _shmat
  354  00001360          	.global _shmat
  355  00001360          	_shmat:
  356  00001360  44000441	trap	#0x441
  357  00001364  4be00000	jr	r31
  358  00001368  54000000	nop
  359  0000136c          	.endproc _shmat
  361  0000136c          	.proc _sem_create
  362  0000136c          	.global _sem_create
  363  0000136c          	_sem_create:
  364  0000136c  44000450	trap	#0x450
  365  00001370  4be00000	jr	r31
  366  00001374  54000000	nop
  367  00001378          	.endproc _sem_create
  369  00001378          	.proc _sem_wait
  370  00001378          	.global _sem_wait
  371  00001378          	_sem_wait:
  372  00001378  44000451	trap	#0x451
  373  0000137c  4be00000	jr	r31
  374  00001380  54000000	nop
  375  00001384          	.endproc _sem_wait
  377  00001384          	.proc _sem_signal
  378  00001384          	.global _sem_signal
  379  00001384          	_sem_signal:
  380  00001384  44000452	trap	#0x452
  381  00001388  4be00000	jr	r31
  382  0000138c  54000000	nop
  383  00001390          	.endproc _sem_signal
  385  00001390          	.proc _lock_create
  386  00001390          	.global _lock_create
  387  00001390          	_lock_create:
  388  00001390  44000453	trap	#0x453
  389  00001394  4be00000	jr	r31
  390  00001398  54000000	nop
  391  0000139c          	.endproc _lock_create
  393  0000139c          	.proc _lock_acquire
  394  0000139c          	.global _lock_acquire
  395  0000139c          	_lock_acquire:
  396  0000139c  44000454	trap	#0x454
  397  000013a0  4be00000	jr	r31
  398  000013a4  54000000	nop
  399  000013a8          	.endproc _lock_acquire
  401  000013a8          	.proc _lock_release
  402  000013a8          	.global _lock_release
  403  000013a8          	_lock_release:
  404  000013a8  44000455	trap	#0x455
  405  000013ac  4be00000	jr	r31
  406  000013b0  54000000	nop
  407  000013b4          	.endproc _lock_release
  409  000013b4          	.proc _cond_create
  410  000013b4          	.global _cond_create
  411  000013b4          	_cond_create:
  412  000013b4  44000456	trap	#0x456
  413  000013b8  4be00000	jr	r31
  414  000013bc  54000000	nop
  415  000013c0          	.endproc _cond_create
  417  000013c0          	.proc _cond_wait
  418  000013c0          	.global _cond_wait
  419  000013c0          	_cond_wait:
  420  000013c0  44000457	trap	#0x457
  421  000013c4  4be00000	jr	r31
  422  000013c8  54000000	nop
  423  000013cc          	.endproc _cond_wait
  425  000013cc          	.proc _cond_signal
  426  000013cc          	.global _cond_signal
  427  000013cc          	_cond_signal:
  428  000013cc  44000458	trap	#0x458
  429  000013d0  4be00000	jr	r31
  430  000013d4  54000000	nop
  431  000013d8          	.endproc _cond_signal
  433  000013d8          	.proc _cond_broadcast
  434  000013d8          	.global _cond_broadcast
  435  000013d8          	_cond_broadcast:
  436  000013d8  44000459	trap	#0x459
  437  000013dc  4be00000	jr	r31
  438  000013e0  54000000	nop
  439  000013e4          	.endproc _cond_broadcast
  441  000013e4          	.proc _mbox_create
  442  000013e4          	.global _mbox_create
  443  000013e4          	_mbox_create:
  444  000013e4  44000460	trap	#0x460
  445  000013e8  4be00000	jr	r31
  446  000013ec  54000000	nop
  447  000013f0          	.endproc _mbox_create
  449  000013f0          	.proc _mbox_open
  450  000013f0          	.global _mbox_open
  451  000013f0          	_mbox_open:
  452  000013f0  44000461	trap	#0x461
  453  000013f4  4be00000	jr	r31
  454  000013f8  54000000	nop
  455  000013fc          	.endproc _mbox_open
  457  000013fc          	.proc _mbox_close
  458  000013fc          	.global _mbox_close
  459  000013fc          	_mbox_close:
  460  000013fc  44000462	trap	#0x462
  461  00001400  4be00000	jr	r31
  462  00001404  54000000	nop
  463  00001408          	.endproc _mbox_close
  465  00001408          	.proc _mbox_send
  466  00001408          	.global _mbox_send
  467  00001408          	_mbox_send:
  468  00001408  44000463	trap	#0x463
  469  0000140c  4be00000	jr	r31
  470  00001410  54000000	nop
  471  00001414          	.endproc _mbox_send
  473  00001414          	.proc _mbox_recv
  474  00001414          	.global _mbox_recv
  475  00001414          	_mbox_recv:
  476  00001414  44000464	trap	#0x464
  477  00001418  4be00000	jr	r31
  478  0000141c  54000000	nop
  479  00001420          	.endproc _mbox_recv
  481  00001420          	.proc _sleep
  482  00001420          	.global _sleep
  483  00001420          	_sleep:
  484  00001420  44000465	trap	#0x465
  485  00001424  4be00000	jr	r31
  486  00001428  54000000	nop
  487  0000142c          	.endproc _sleep
  489  0000142c          	.proc _yield
  490  0000142c          	.global _yield
  491  0000142c          	_yield:
  492  0000142c  44000466	trap	#0x466
  493  00001430  4be00000	jr	r31
  494  00001434  54000000	nop
  495  00001438          	.endproc _yield
  498  00001438          	.proc _Exit
  499  00001438          	.global _Exit
  500  00001438          	_Exit:
  501  00001438  44000500	trap	#0x500
  502  0000143c  4be00000	jr	r31
  503  00001440  54000000	nop
  504  00001444          	.endproc _Exit
  507  00001444          	.proc _malloc
  508  00001444          	.global _malloc
  509  00001444          	_malloc:
  510  00001444  44000467	trap	#0x467
  511  00001448  4be00000	jr	r31
  512  0000144c          	.endproc _malloc
  515  0000144c          	.proc _mfree
  516  0000144c          	.global _mfree
  517  0000144c          	_mfree:
  518  0000144c  44000468	trap	#0x468
  519  00001450  4be00000	jr	r31
  520  00001454          	.endproc _mfree
  521                      ; Compiled by GCC
  523  00001454          	.align 2
  524  00001454          	.proc _isspace
  525  00001454          	.global _isspace
  526  00001454          	_isspace:
  527                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  528  00001454  afbefffc	sw	-4(r29),r30; push fp
  529  00001458  001df020	add	r30,r0,r29; fp = sp
  530  0000145c  afbffff8	sw	-8(r29),r31; push ret addr
  531  00001460  2fbd0018	subui	r29,r29,#24; alloc local storage
  532  00001464  afa20000	sw	0(r29),r2
  533  00001468  afa30004	sw	4(r29),r3
  534  0000146c  afa40008	sw	8(r29),r4
  535  00001470  83c20003	lb	r2,3(r30)
  536  00001474  20010000	addi	r1,r0,#0
  537  00001478  304300ff	andi	r3,r2,#0x00ff
  538  0000147c  60640020	seqi	r4,r3,#32
  539  00001480  1480002c	bnez	r4,L3_LF2
  540  00001484  54000000	nop; delay slot nop
  541  00001488  304300ff	andi	r3,r2,#0x00ff
  542  0000148c  60640009	seqi	r4,r3,#9
  543  00001490  1480001c	bnez	r4,L3_LF2
  544  00001494  54000000	nop; delay slot nop
  545  00001498  304300ff	andi	r3,r2,#0x00ff
  546  0000149c  6064000a	seqi	r4,r3,#10
  547  000014a0  1480000c	bnez	r4,L3_LF2
  548  000014a4  54000000	nop; delay slot nop
  549  000014a8  08000008	j	L2_LF2
  550  000014ac  54000000	nop; delay slot nop
  551  000014b0          	L3_LF2:
  552  000014b0  20010001	addi	r1,r0,#1
  553  000014b4          	L2_LF2:
  554  000014b4  08000004	j	L1_LF2
  555  000014b8  54000000	nop; delay slot nop
  556  000014bc          	L1_LF2:
  557  000014bc  8fa20000	lw	r2,0(r29)
  558  000014c0  8fa30004	lw	r3,4(r29)
  559  000014c4  8fa40008	lw	r4,8(r29)
  560  000014c8  8fdffff8	lw	r31,-8(r30)
  561  000014cc  001ee820	add	r29,r0,r30
  562  000014d0  8fdefffc	lw	r30,-4(r30)
  563  000014d4  4be00000	jr	r31
  564  000014d8  54000000	nop
  565  000014dc          	.endproc _isspace
  566  000014dc          	.align 2
  567  000014dc          	.proc _isxdigit
  568  000014dc          	.global _isxdigit
  569  000014dc          	_isxdigit:
  570                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  571  000014dc  afbefffc	sw	-4(r29),r30; push fp
  572  000014e0  001df020	add	r30,r0,r29; fp = sp
  573  000014e4  afbffff8	sw	-8(r29),r31; push ret addr
  574  000014e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  575  000014ec  afa20000	sw	0(r29),r2
  576  000014f0  afa30004	sw	4(r29),r3
  577  000014f4  afa40008	sw	8(r29),r4
  578  000014f8  83c20003	lb	r2,3(r30)
  579  000014fc  20010000	addi	r1,r0,#0
  580  00001500  304300ff	andi	r3,r2,#0x00ff
  581  00001504  6c64002f	sgtui	r4,r3,#47
  582  00001508  1080001c	beqz	r4,L7_LF2
  583  0000150c  54000000	nop; delay slot nop
  584  00001510  304300ff	andi	r3,r2,#0x00ff
  585  00001514  70640039	sleui	r4,r3,#57
  586  00001518  1480005c	bnez	r4,L6_LF2
  587  0000151c  54000000	nop; delay slot nop
  588  00001520  08000004	j	L7_LF2
  589  00001524  54000000	nop; delay slot nop
  590  00001528          	L7_LF2:
  591  00001528  304300ff	andi	r3,r2,#0x00ff
  592  0000152c  6c640060	sgtui	r4,r3,#96
  593  00001530  1080001c	beqz	r4,L8_LF2
  594  00001534  54000000	nop; delay slot nop
  595  00001538  304300ff	andi	r3,r2,#0x00ff
  596  0000153c  70640066	sleui	r4,r3,#102
  597  00001540  14800034	bnez	r4,L6_LF2
  598  00001544  54000000	nop; delay slot nop
  599  00001548  08000004	j	L8_LF2
  600  0000154c  54000000	nop; delay slot nop
  601  00001550          	L8_LF2:
  602  00001550  304300ff	andi	r3,r2,#0x00ff
  603  00001554  6c640040	sgtui	r4,r3,#64
  604  00001558  10800020	beqz	r4,L5_LF2
  605  0000155c  54000000	nop; delay slot nop
  606  00001560  304300ff	andi	r3,r2,#0x00ff
  607  00001564  70640041	sleui	r4,r3,#65
  608  00001568  1480000c	bnez	r4,L6_LF2
  609  0000156c  54000000	nop; delay slot nop
  610  00001570  08000008	j	L5_LF2
  611  00001574  54000000	nop; delay slot nop
  612  00001578          	L6_LF2:
  613  00001578  20010001	addi	r1,r0,#1
  614  0000157c          	L5_LF2:
  615  0000157c  08000004	j	L4_LF2
  616  00001580  54000000	nop; delay slot nop
  617  00001584          	L4_LF2:
  618  00001584  8fa20000	lw	r2,0(r29)
  619  00001588  8fa30004	lw	r3,4(r29)
  620  0000158c  8fa40008	lw	r4,8(r29)
  621  00001590  8fdffff8	lw	r31,-8(r30)
  622  00001594  001ee820	add	r29,r0,r30
  623  00001598  8fdefffc	lw	r30,-4(r30)
  624  0000159c  4be00000	jr	r31
  625  000015a0  54000000	nop
  626  000015a4          	.endproc _isxdigit
  627  000015a4          	.align 2
  628  000015a4          	.proc _dstrcpy
  629  000015a4          	.global _dstrcpy
  630  000015a4          	_dstrcpy:
  631                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  632  000015a4  afbefffc	sw	-4(r29),r30; push fp
  633  000015a8  001df020	add	r30,r0,r29; fp = sp
  634  000015ac  afbffff8	sw	-8(r29),r31; push ret addr
  635  000015b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  636  000015b4  afa20000	sw	0(r29),r2
  637  000015b8  afa30004	sw	4(r29),r3
  638  000015bc  8fc10000	lw	r1,(r30)
  639  000015c0  afc1fff4	sw	-12(r30),r1
  640  000015c4          	L10_LF2:
  641  000015c4  8fc10000	lw	r1,(r30)
  642  000015c8  20220001	addi	r2,r1,#1
  643  000015cc  afc20000	sw	(r30),r2
  644  000015d0  8fc20004	lw	r2,4(r30)
  645  000015d4  20430001	addi	r3,r2,#1
  646  000015d8  afc30004	sw	4(r30),r3
  647  000015dc  80420000	lb	r2,(r2)
  648  000015e0  a0220000	sb	(r1),r2
  649  000015e4  a3c2fff3	sb	-13(r30),r2
  650  000015e8          	L12_LF2:
  651  000015e8  93c1fff3	lbu	r1,-13(r30)
  652  000015ec  64220000	snei	r2,r1,#0
  653  000015f0  1440000c	bnez	r2,L13_LF2
  654  000015f4  54000000	nop; delay slot nop
  655  000015f8  0800000c	j	L11_LF2
  656  000015fc  54000000	nop; delay slot nop
  657  00001600          	L13_LF2:
  658  00001600  0bffffc0	j	L10_LF2
  659  00001604  54000000	nop; delay slot nop
  660  00001608          	L11_LF2:
  661  00001608  8fc1fff4	lw	r1,-12(r30)
  662  0000160c  08000004	j	L9_LF2
  663  00001610  54000000	nop; delay slot nop
  664  00001614          	L9_LF2:
  665  00001614  8fa20000	lw	r2,0(r29)
  666  00001618  8fa30004	lw	r3,4(r29)
  667  0000161c  8fdffff8	lw	r31,-8(r30)
  668  00001620  001ee820	add	r29,r0,r30
  669  00001624  8fdefffc	lw	r30,-4(r30)
  670  00001628  4be00000	jr	r31
  671  0000162c  54000000	nop
  672  00001630          	.endproc _dstrcpy
  673  00001630          	.align 2
  674  00001630          	.proc _dstrncpy
  675  00001630          	.global _dstrncpy
  676  00001630          	_dstrncpy:
  677                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  678  00001630  afbefffc	sw	-4(r29),r30; push fp
  679  00001634  001df020	add	r30,r0,r29; fp = sp
  680  00001638  afbffff8	sw	-8(r29),r31; push ret addr
  681  0000163c  2fbd0018	subui	r29,r29,#24; alloc local storage
  682  00001640  afa20000	sw	0(r29),r2
  683  00001644  afa30004	sw	4(r29),r3
  684  00001648  8fc10000	lw	r1,(r30)
  685  0000164c  afc1fff4	sw	-12(r30),r1
  686  00001650          	L15_LF2:
  687  00001650  8fc10008	lw	r1,8(r30)
  688  00001654  2022ffff	addi	r2,r1,#-1
  689  00001658  afc20008	sw	8(r30),r2
  690  0000165c  70210000	slei	r1,r1,#0
  691  00001660  1020000c	beqz	r1,L18_LF2
  692  00001664  54000000	nop; delay slot nop
  693  00001668  08000048	j	L16_LF2
  694  0000166c  54000000	nop; delay slot nop
  695  00001670          	L18_LF2:
  696  00001670  8fc10000	lw	r1,(r30)
  697  00001674  20220001	addi	r2,r1,#1
  698  00001678  afc20000	sw	(r30),r2
  699  0000167c  8fc20004	lw	r2,4(r30)
  700  00001680  20430001	addi	r3,r2,#1
  701  00001684  afc30004	sw	4(r30),r3
  702  00001688  80420000	lb	r2,(r2)
  703  0000168c  a0220000	sb	(r1),r2
  704  00001690  a3c2fff3	sb	-13(r30),r2
  705  00001694          	L17_LF2:
  706  00001694  93c1fff3	lbu	r1,-13(r30)
  707  00001698  64220000	snei	r2,r1,#0
  708  0000169c  1440000c	bnez	r2,L19_LF2
  709  000016a0  54000000	nop; delay slot nop
  710  000016a4  0800000c	j	L16_LF2
  711  000016a8  54000000	nop; delay slot nop
  712  000016ac          	L19_LF2:
  713  000016ac  0bffffa0	j	L15_LF2
  714  000016b0  54000000	nop; delay slot nop
  715  000016b4          	L16_LF2:
  716  000016b4  8fc1fff4	lw	r1,-12(r30)
  717  000016b8  08000004	j	L14_LF2
  718  000016bc  54000000	nop; delay slot nop
  719  000016c0          	L14_LF2:
  720  000016c0  8fa20000	lw	r2,0(r29)
  721  000016c4  8fa30004	lw	r3,4(r29)
  722  000016c8  8fdffff8	lw	r31,-8(r30)
  723  000016cc  001ee820	add	r29,r0,r30
  724  000016d0  8fdefffc	lw	r30,-4(r30)
  725  000016d4  4be00000	jr	r31
  726  000016d8  54000000	nop
  727  000016dc          	.endproc _dstrncpy
  728  000016dc          	.align 2
  729  000016dc          	.proc _dstrcat
  730  000016dc          	.global _dstrcat
  731  000016dc          	_dstrcat:
  732                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  733  000016dc  afbefffc	sw	-4(r29),r30; push fp
  734  000016e0  001df020	add	r30,r0,r29; fp = sp
  735  000016e4  afbffff8	sw	-8(r29),r31; push ret addr
  736  000016e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  737  000016ec  afa20000	sw	0(r29),r2
  738  000016f0  8fc10000	lw	r1,(r30)
  739  000016f4  afc1fff4	sw	-12(r30),r1
  740  000016f8          	L21_LF2:
  741  000016f8  8fc10000	lw	r1,(r30)
  742  000016fc  90220000	lbu	r2,(r1)
  743  00001700  64410000	snei	r1,r2,#0
  744  00001704  1420000c	bnez	r1,L23_LF2
  745  00001708  54000000	nop; delay slot nop
  746  0000170c  0800001c	j	L22_LF2
  747  00001710  54000000	nop; delay slot nop
  748  00001714          	L23_LF2:
  749  00001714  8fc20000	lw	r2,(r30)
  750  00001718  20410001	addi	r1,r2,#1
  751  0000171c  00011020	add	r2,r0,r1
  752  00001720  afc20000	sw	(r30),r2
  753  00001724  0bffffd0	j	L21_LF2
  754  00001728  54000000	nop; delay slot nop
  755  0000172c          	L22_LF2:
  756  0000172c  23bdfff8	addi	r29,r29,#-8
  757  00001730  001d0820	add	r1,r0,r29
  758  00001734  8fc20000	lw	r2,(r30)
  759  00001738  ac220000	sw	(r1),r2
  760  0000173c  8fc20004	lw	r2,4(r30)
  761  00001740  ac220004	sw	4(r1),r2
  762  00001744  0ffffe5c	jal	_dstrcpy
  763  00001748  54000000	nop; delay slot nop
  764  0000174c  23bd0008	addi	r29,r29,#8
  765  00001750  8fc1fff4	lw	r1,-12(r30)
  766  00001754  08000004	j	L20_LF2
  767  00001758  54000000	nop; delay slot nop
  768  0000175c          	L20_LF2:
  769  0000175c  8fa20000	lw	r2,0(r29)
  770  00001760  8fdffff8	lw	r31,-8(r30)
  771  00001764  001ee820	add	r29,r0,r30
  772  00001768  8fdefffc	lw	r30,-4(r30)
  773  0000176c  4be00000	jr	r31
  774  00001770  54000000	nop
  775  00001774          	.endproc _dstrcat
  776  00001774          	.align 2
  777  00001774          	.proc _dstrncmp
  778  00001774          	.global _dstrncmp
  779  00001774          	_dstrncmp:
  780                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  781  00001774  afbefffc	sw	-4(r29),r30; push fp
  782  00001778  001df020	add	r30,r0,r29; fp = sp
  783  0000177c  afbffff8	sw	-8(r29),r31; push ret addr
  784  00001780  2fbd0018	subui	r29,r29,#24; alloc local storage
  785  00001784  afa20000	sw	0(r29),r2
  786  00001788  afa30004	sw	4(r29),r3
  787  0000178c  54000000	nop
  788  00001790  20010000	addi	r1,r0,#0
  789  00001794  afc1fff4	sw	-12(r30),r1
  790  00001798          	L25_LF2:
  791  00001798  8fc1fff4	lw	r1,-12(r30)
  792  0000179c  8fc20008	lw	r2,8(r30)
  793  000017a0  0022082a	slt	r1,r1,r2
  794  000017a4  1420000c	bnez	r1,L28_LF2
  795  000017a8  54000000	nop; delay slot nop
  796  000017ac  08000088	j	L26_LF2
  797  000017b0  54000000	nop; delay slot nop
  798  000017b4          	L28_LF2:
  799  000017b4  8fc10004	lw	r1,4(r30)
  800  000017b8  90220000	lbu	r2,(r1)
  801  000017bc  64410000	snei	r1,r2,#0
  802  000017c0  14200018	bnez	r1,L29_LF2
  803  000017c4  54000000	nop; delay slot nop
  804  000017c8  20010000	addi	r1,r0,#0
  805  000017cc  080000d8	j	L24_LF2
  806  000017d0  54000000	nop; delay slot nop
  807  000017d4  08000028	j	L30_LF2
  808  000017d8  54000000	nop; delay slot nop
  809  000017dc          	L29_LF2:
  810  000017dc  8fc10000	lw	r1,(r30)
  811  000017e0  8fc20004	lw	r2,4(r30)
  812  000017e4  90210000	lbu	r1,(r1)
  813  000017e8  90420000	lbu	r2,(r2)
  814  000017ec  00220829	sne	r1,r1,r2
  815  000017f0  1020000c	beqz	r1,L30_LF2
  816  000017f4  54000000	nop; delay slot nop
  817  000017f8  0800003c	j	L26_LF2
  818  000017fc  54000000	nop; delay slot nop
  819  00001800          	L31_LF2:
  820  00001800          	L30_LF2:
  821  00001800  8fc20000	lw	r2,(r30)
  822  00001804  20410001	addi	r1,r2,#1
  823  00001808  00011020	add	r2,r0,r1
  824  0000180c  afc20000	sw	(r30),r2
  825  00001810  8fc20004	lw	r2,4(r30)
  826  00001814  20410001	addi	r1,r2,#1
  827  00001818  00011020	add	r2,r0,r1
  828  0000181c  afc20004	sw	4(r30),r2
  829  00001820          	L27_LF2:
  830  00001820  8fc2fff4	lw	r2,-12(r30)
  831  00001824  20410001	addi	r1,r2,#1
  832  00001828  00011020	add	r2,r0,r1
  833  0000182c  afc2fff4	sw	-12(r30),r2
  834  00001830  0bffff64	j	L25_LF2
  835  00001834  54000000	nop; delay slot nop
  836  00001838          	L26_LF2:
  837  00001838  8fc1fff4	lw	r1,-12(r30)
  838  0000183c  8fc20008	lw	r2,8(r30)
  839  00001840  00220828	seq	r1,r1,r2
  840  00001844  10200018	beqz	r1,L32_LF2
  841  00001848  54000000	nop; delay slot nop
  842  0000184c  20010000	addi	r1,r0,#0
  843  00001850  08000054	j	L24_LF2
  844  00001854  54000000	nop; delay slot nop
  845  00001858  0800004c	j	L33_LF2
  846  0000185c  54000000	nop; delay slot nop
  847  00001860          	L32_LF2:
  848  00001860  8fc20000	lw	r2,(r30)
  849  00001864  90410000	lbu	r1,(r2)
  850  00001868  8fc20004	lw	r2,4(r30)
  851  0000186c  90430000	lbu	r3,(r2)
  852  00001870  00230822	sub	r1,r1,r3
  853  00001874  74220000	sgei	r2,r1,#0
  854  00001878  10400020	beqz	r2,L34_LF2
  855  0000187c  54000000	nop; delay slot nop
  856  00001880  8fc10000	lw	r1,(r30)
  857  00001884  8fc20004	lw	r2,4(r30)
  858  00001888  90210000	lbu	r1,(r1)
  859  0000188c  90420000	lbu	r2,(r2)
  860  00001890  00220829	sne	r1,r1,r2
  861  00001894  08000008	j	L35_LF2
  862  00001898  54000000	nop; delay slot nop
  863  0000189c          	L34_LF2:
  864  0000189c  2001ffff	addi	r1,r0,#-1
  865  000018a0          	L35_LF2:
  866  000018a0  08000004	j	L24_LF2
  867  000018a4  54000000	nop; delay slot nop
  868  000018a8          	L33_LF2:
  869  000018a8          	L24_LF2:
  870  000018a8  8fa20000	lw	r2,0(r29)
  871  000018ac  8fa30004	lw	r3,4(r29)
  872  000018b0  8fdffff8	lw	r31,-8(r30)
  873  000018b4  001ee820	add	r29,r0,r30
  874  000018b8  8fdefffc	lw	r30,-4(r30)
  875  000018bc  4be00000	jr	r31
  876  000018c0  54000000	nop
  877  000018c4          	.endproc _dstrncmp
  878  000018c4          	.align 2
  879  000018c4          	.proc _dstrlen
  880  000018c4          	.global _dstrlen
  881  000018c4          	_dstrlen:
  882                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  883  000018c4  afbefffc	sw	-4(r29),r30; push fp
  884  000018c8  001df020	add	r30,r0,r29; fp = sp
  885  000018cc  afbffff8	sw	-8(r29),r31; push ret addr
  886  000018d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  887  000018d4  afa20000	sw	0(r29),r2
  888  000018d8  20010000	addi	r1,r0,#0
  889  000018dc  afc1fff4	sw	-12(r30),r1
  890  000018e0          	L37_LF2:
  891  000018e0  8fc10000	lw	r1,(r30)
  892  000018e4  20220001	addi	r2,r1,#1
  893  000018e8  afc20000	sw	(r30),r2
  894  000018ec  90210000	lbu	r1,(r1)
  895  000018f0  64220000	snei	r2,r1,#0
  896  000018f4  1440000c	bnez	r2,L39_LF2
  897  000018f8  54000000	nop; delay slot nop
  898  000018fc  0800001c	j	L38_LF2
  899  00001900  54000000	nop; delay slot nop
  900  00001904          	L39_LF2:
  901  00001904  8fc2fff4	lw	r2,-12(r30)
  902  00001908  20410001	addi	r1,r2,#1
  903  0000190c  00011020	add	r2,r0,r1
  904  00001910  afc2fff4	sw	-12(r30),r2
  905  00001914  0bffffc8	j	L37_LF2
  906  00001918  54000000	nop; delay slot nop
  907  0000191c          	L38_LF2:
  908  0000191c  8fc1fff4	lw	r1,-12(r30)
  909  00001920  08000004	j	L36_LF2
  910  00001924  54000000	nop; delay slot nop
  911  00001928          	L36_LF2:
  912  00001928  8fa20000	lw	r2,0(r29)
  913  0000192c  8fdffff8	lw	r31,-8(r30)
  914  00001930  001ee820	add	r29,r0,r30
  915  00001934  8fdefffc	lw	r30,-4(r30)
  916  00001938  4be00000	jr	r31
  917  0000193c  54000000	nop
  918  00001940          	.endproc _dstrlen
  919  00001940          	.align 2
  920  00001940          	.proc _dstrstr
  921  00001940          	.global _dstrstr
  922  00001940          	_dstrstr:
  923                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  924  00001940  afbefffc	sw	-4(r29),r30; push fp
  925  00001944  001df020	add	r30,r0,r29; fp = sp
  926  00001948  afbffff8	sw	-8(r29),r31; push ret addr
  927  0000194c  2fbd0018	subui	r29,r29,#24; alloc local storage
  928  00001950  afa20000	sw	0(r29),r2
  929  00001954  23bdfff8	addi	r29,r29,#-8
  930  00001958  001d0820	add	r1,r0,r29
  931  0000195c  8fc20004	lw	r2,4(r30)
  932  00001960  ac220000	sw	(r1),r2
  933  00001964  0fffff5c	jal	_dstrlen
  934  00001968  54000000	nop; delay slot nop
  935  0000196c  23bd0008	addi	r29,r29,#8
  936  00001970  afc1fff4	sw	-12(r30),r1
  937  00001974          	L41_LF2:
  938  00001974  8fc10000	lw	r1,(r30)
  939  00001978  90220000	lbu	r2,(r1)
  940  0000197c  64410000	snei	r1,r2,#0
  941  00001980  1420000c	bnez	r1,L43_LF2
  942  00001984  54000000	nop; delay slot nop
  943  00001988  08000060	j	L42_LF2
  944  0000198c  54000000	nop; delay slot nop
  945  00001990          	L43_LF2:
  946  00001990  23bdfff0	addi	r29,r29,#-16
  947  00001994  001d0820	add	r1,r0,r29
  948  00001998  8fc20000	lw	r2,(r30)
  949  0000199c  ac220000	sw	(r1),r2
  950  000019a0  8fc20004	lw	r2,4(r30)
  951  000019a4  ac220004	sw	4(r1),r2
  952  000019a8  8fc2fff4	lw	r2,-12(r30)
  953  000019ac  ac220008	sw	8(r1),r2
  954  000019b0  0ffffdc0	jal	_dstrncmp
  955  000019b4  54000000	nop; delay slot nop
  956  000019b8  23bd0010	addi	r29,r29,#16
  957  000019bc  64220000	snei	r2,r1,#0
  958  000019c0  14400010	bnez	r2,L44_LF2
  959  000019c4  54000000	nop; delay slot nop
  960  000019c8  8fc10000	lw	r1,(r30)
  961  000019cc  08000028	j	L40_LF2
  962  000019d0  54000000	nop; delay slot nop
  963  000019d4          	L44_LF2:
  964  000019d4  8fc20000	lw	r2,(r30)
  965  000019d8  20410001	addi	r1,r2,#1
  966  000019dc  00011020	add	r2,r0,r1
  967  000019e0  afc20000	sw	(r30),r2
  968  000019e4  0bffff8c	j	L41_LF2
  969  000019e8  54000000	nop; delay slot nop
  970  000019ec          	L42_LF2:
  971  000019ec  20010000	addi	r1,r0,#0
  972  000019f0  08000004	j	L40_LF2
  973  000019f4  54000000	nop; delay slot nop
  974  000019f8          	L40_LF2:
  975  000019f8  8fa20000	lw	r2,0(r29)
  976  000019fc  8fdffff8	lw	r31,-8(r30)
  977  00001a00  001ee820	add	r29,r0,r30
  978  00001a04  8fdefffc	lw	r30,-4(r30)
  979  00001a08  4be00000	jr	r31
  980  00001a0c  54000000	nop
  981  00001a10          	.endproc _dstrstr
  982  00001a10          	.align 2
  983  00001a10          	.proc _dmindex
  984  00001a10          	.global _dmindex
  985  00001a10          	_dmindex:
  986                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  987  00001a10  afbefffc	sw	-4(r29),r30; push fp
  988  00001a14  001df020	add	r30,r0,r29; fp = sp
  989  00001a18  afbffff8	sw	-8(r29),r31; push ret addr
  990  00001a1c  2fbd0018	subui	r29,r29,#24; alloc local storage
  991  00001a20  afa20000	sw	0(r29),r2
  992  00001a24  54000000	nop
  993  00001a28          	L46_LF2:
  994  00001a28  8fc10000	lw	r1,(r30)
  995  00001a2c  90220000	lbu	r2,(r1)
  996  00001a30  64410000	snei	r1,r2,#0
  997  00001a34  1420000c	bnez	r1,L48_LF2
  998  00001a38  54000000	nop; delay slot nop
  999  00001a3c  08000070	j	L47_LF2
 1000  00001a40  54000000	nop; delay slot nop
 1001  00001a44          	L48_LF2:
 1002  00001a44  8fc10004	lw	r1,4(r30)
 1003  00001a48  afc1fff4	sw	-12(r30),r1
 1004  00001a4c          	L49_LF2:
 1005  00001a4c  8fc1fff4	lw	r1,-12(r30)
 1006  00001a50  90220000	lbu	r2,(r1)
 1007  00001a54  64410000	snei	r1,r2,#0
 1008  00001a58  1420000c	bnez	r1,L52_LF2
 1009  00001a5c  54000000	nop; delay slot nop
 1010  00001a60  08000044	j	L50_LF2
 1011  00001a64  54000000	nop; delay slot nop
 1012  00001a68          	L52_LF2:
 1013  00001a68  8fc10000	lw	r1,(r30)
 1014  00001a6c  8fc2fff4	lw	r2,-12(r30)
 1015  00001a70  90210000	lbu	r1,(r1)
 1016  00001a74  90420000	lbu	r2,(r2)
 1017  00001a78  00220828	seq	r1,r1,r2
 1018  00001a7c  10200010	beqz	r1,L51_LF2
 1019  00001a80  54000000	nop; delay slot nop
 1020  00001a84  8fc10000	lw	r1,(r30)
 1021  00001a88  08000030	j	L45_LF2
 1022  00001a8c  54000000	nop; delay slot nop
 1023  00001a90          	L53_LF2:
 1024  00001a90          	L51_LF2:
 1025  00001a90  8fc2fff4	lw	r2,-12(r30)
 1026  00001a94  20410001	addi	r1,r2,#1
 1027  00001a98  00011020	add	r2,r0,r1
 1028  00001a9c  afc2fff4	sw	-12(r30),r2
 1029  00001aa0  0bffffa8	j	L49_LF2
 1030  00001aa4  54000000	nop; delay slot nop
 1031  00001aa8          	L50_LF2:
 1032  00001aa8  0bffff7c	j	L46_LF2
 1033  00001aac  54000000	nop; delay slot nop
 1034  00001ab0          	L47_LF2:
 1035  00001ab0  20010000	addi	r1,r0,#0
 1036  00001ab4  08000004	j	L45_LF2
 1037  00001ab8  54000000	nop; delay slot nop
 1038  00001abc          	L45_LF2:
 1039  00001abc  8fa20000	lw	r2,0(r29)
 1040  00001ac0  8fdffff8	lw	r31,-8(r30)
 1041  00001ac4  001ee820	add	r29,r0,r30
 1042  00001ac8  8fdefffc	lw	r30,-4(r30)
 1043  00001acc  4be00000	jr	r31
 1044  00001ad0  54000000	nop
 1045  00001ad4          	.endproc _dmindex
 1046  00001ad4          	.align 2
 1047  00001ad4          	.proc _dindex
 1048  00001ad4          	.global _dindex
 1049  00001ad4          	_dindex:
 1050                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1051  00001ad4  afbefffc	sw	-4(r29),r30; push fp
 1052  00001ad8  001df020	add	r30,r0,r29; fp = sp
 1053  00001adc  afbffff8	sw	-8(r29),r31; push ret addr
 1054  00001ae0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1055  00001ae4  afa20000	sw	0(r29),r2
 1056  00001ae8  54000000	nop
 1057  00001aec          	L55_LF2:
 1058  00001aec  8fc10000	lw	r1,(r30)
 1059  00001af0  90220000	lbu	r2,(r1)
 1060  00001af4  64410000	snei	r1,r2,#0
 1061  00001af8  1420000c	bnez	r1,L57_LF2
 1062  00001afc  54000000	nop; delay slot nop
 1063  00001b00  08000040	j	L56_LF2
 1064  00001b04  54000000	nop; delay slot nop
 1065  00001b08          	L57_LF2:
 1066  00001b08  8fc10000	lw	r1,(r30)
 1067  00001b0c  90220000	lbu	r2,(r1)
 1068  00001b10  8fc10004	lw	r1,4(r30)
 1069  00001b14  00411028	seq	r2,r2,r1
 1070  00001b18  10400010	beqz	r2,L58_LF2
 1071  00001b1c  54000000	nop; delay slot nop
 1072  00001b20  8fc10000	lw	r1,(r30)
 1073  00001b24  08000028	j	L54_LF2
 1074  00001b28  54000000	nop; delay slot nop
 1075  00001b2c          	L58_LF2:
 1076  00001b2c  8fc20000	lw	r2,(r30)
 1077  00001b30  20410001	addi	r1,r2,#1
 1078  00001b34  00011020	add	r2,r0,r1
 1079  00001b38  afc20000	sw	(r30),r2
 1080  00001b3c  0bffffac	j	L55_LF2
 1081  00001b40  54000000	nop; delay slot nop
 1082  00001b44          	L56_LF2:
 1083  00001b44  20010000	addi	r1,r0,#0
 1084  00001b48  08000004	j	L54_LF2
 1085  00001b4c  54000000	nop; delay slot nop
 1086  00001b50          	L54_LF2:
 1087  00001b50  8fa20000	lw	r2,0(r29)
 1088  00001b54  8fdffff8	lw	r31,-8(r30)
 1089  00001b58  001ee820	add	r29,r0,r30
 1090  00001b5c  8fdefffc	lw	r30,-4(r30)
 1091  00001b60  4be00000	jr	r31
 1092  00001b64  54000000	nop
 1093  00001b68          	.endproc _dindex
 1094  00001b68          	.align 2
 1095  00001b68          	.proc _ditoa
 1096  00001b68          	.global _ditoa
 1097  00001b68          	_ditoa:
 1098                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1099  00001b68  afbefffc	sw	-4(r29),r30; push fp
 1100  00001b6c  001df020	add	r30,r0,r29; fp = sp
 1101  00001b70  afbffff8	sw	-8(r29),r31; push ret addr
 1102  00001b74  2fbd0018	subui	r29,r29,#24; alloc local storage
 1103  00001b78  afa20000	sw	0(r29),r2
 1104  00001b7c  afa30004	sw	4(r29),r3
 1105  00001b80  8fc10000	lw	r1,(r30)
 1106  00001b84  68220000	slti	r2,r1,#0
 1107  00001b88  1040002c	beqz	r2,L60_LF2
 1108  00001b8c  54000000	nop; delay slot nop
 1109  00001b90  8fc10004	lw	r1,4(r30)
 1110  00001b94  20220001	addi	r2,r1,#1
 1111  00001b98  afc20004	sw	4(r30),r2
 1112  00001b9c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1113  00001ba0  a0220000	sb	(r1),r2
 1114  00001ba4  8fc10000	lw	r1,(r30)
 1115  00001ba8  00011022	sub	r2,r0,r1
 1116  00001bac  afc20000	sw	(r30),r2
 1117  00001bb0  08000118	j	L61_LF2
 1118  00001bb4  54000000	nop; delay slot nop
 1119  00001bb8          	L60_LF2:
 1120  00001bb8  8fc10000	lw	r1,(r30)
 1121  00001bbc  64220000	snei	r2,r1,#0
 1122  00001bc0  14400020	bnez	r2,L62_LF2
 1123  00001bc4  54000000	nop; delay slot nop
 1124  00001bc8  8fc10004	lw	r1,4(r30)
 1125  00001bcc  20220001	addi	r2,r1,#1
 1126  00001bd0  afc20004	sw	4(r30),r2
 1127  00001bd4  20020030	addi	r2,r0,(#0x30)&0xff
 1128  00001bd8  a0220000	sb	(r1),r2
 1129  00001bdc  080000ec	j	L61_LF2
 1130  00001be0  54000000	nop; delay slot nop
 1131  00001be4          	L62_LF2:
 1132  00001be4  20010001	addi	r1,r0,#1
 1133  00001be8  afc1fff4	sw	-12(r30),r1
 1134  00001bec          	L64_LF2:
 1135  00001bec  8fc1fff4	lw	r1,-12(r30)
 1136  00001bf0  8fc20000	lw	r2,(r30)
 1137  00001bf4  0022082c	sle	r1,r1,r2
 1138  00001bf8  1420000c	bnez	r1,L66_LF2
 1139  00001bfc  54000000	nop; delay slot nop
 1140  00001c00  08000024	j	L65_LF2
 1141  00001c04  54000000	nop; delay slot nop
 1142  00001c08          	L67_LF2:
 1143  00001c08          	L66_LF2:
 1144  00001c08  8fc1fff4	lw	r1,-12(r30)
 1145  00001c0c  00011820	add	r3,r0,r1
 1146  00001c10  50620002	slli	r2,r3,#0x2
 1147  00001c14  00411020	add	r2,r2,r1
 1148  00001c18  50410001	slli	r1,r2,#0x1
 1149  00001c1c  afc1fff4	sw	-12(r30),r1
 1150  00001c20  0bffffc8	j	L64_LF2
 1151  00001c24  54000000	nop; delay slot nop
 1152  00001c28          	L65_LF2:
 1153  00001c28  54000000	nop
 1154  00001c2c          	L68_LF2:
 1155  00001c2c  8fc1fff4	lw	r1,-12(r30)
 1156  00001c30  2002000a	addi	r2,r0,#10
 1157  00001c34  00200035	movi2fp	f0,r1
 1158  00001c38  00400835	movi2fp	f1,r2
 1159  00001c3c  0401000f	div	f0,f0,f1
 1160  00001c40  00000834	movfp2i	r1,f0
 1161  00001c44  afc1fff4	sw	-12(r30),r1
 1162  00001c48  8fc10004	lw	r1,4(r30)
 1163  00001c4c  20220001	addi	r2,r1,#1
 1164  00001c50  afc20004	sw	4(r30),r2
 1165  00001c54  8fc20000	lw	r2,(r30)
 1166  00001c58  8fc3fff4	lw	r3,-12(r30)
 1167  00001c5c  00400035	movi2fp	f0,r2
 1168  00001c60  00600835	movi2fp	f1,r3
 1169  00001c64  0401000f	div	f0,f0,f1
 1170  00001c68  00001034	movfp2i	r2,f0
 1171  00001c6c  00021820	add	r3,r0,r2
 1172  00001c70  20620030	addi	r2,r3,#48
 1173  00001c74  a0220000	sb	(r1),r2
 1174  00001c78  8fc10000	lw	r1,(r30)
 1175  00001c7c  8fc3fff4	lw	r3,-12(r30)
 1176  00001c80  00200035	movi2fp	f0,r1
 1177  00001c84  00600835	movi2fp	f1,r3
 1178  00001c88  0401000f	div	f0,f0,f1
 1179  00001c8c  00001034	movfp2i	r2,f0
 1180  00001c90  8fc3fff4	lw	r3,-12(r30)
 1181  00001c94  00400035	movi2fp	f0,r2
 1182  00001c98  00600835	movi2fp	f1,r3
 1183  00001c9c  0401000e	mult	f0,f0,f1
 1184  00001ca0  00001034	movfp2i	r2,f0
 1185  00001ca4  00220822	sub	r1,r1,r2
 1186  00001ca8  afc10000	sw	(r30),r1
 1187  00001cac          	L70_LF2:
 1188  00001cac  8fc1fff4	lw	r1,-12(r30)
 1189  00001cb0  6c220001	sgti	r2,r1,#1
 1190  00001cb4  1440000c	bnez	r2,L71_LF2
 1191  00001cb8  54000000	nop; delay slot nop
 1192  00001cbc  0800000c	j	L61_LF2
 1193  00001cc0  54000000	nop; delay slot nop
 1194  00001cc4          	L71_LF2:
 1195  00001cc4  0bffff64	j	L68_LF2
 1196  00001cc8  54000000	nop; delay slot nop
 1197  00001ccc          	L69_LF2:
 1198  00001ccc          	L63_LF2:
 1199  00001ccc          	L61_LF2:
 1200  00001ccc  8fc10004	lw	r1,4(r30)
 1201  00001cd0  20020000	addi	r2,r0,(#0x0)&0xff
 1202  00001cd4  a0220000	sb	(r1),r2
 1203  00001cd8          	L59_LF2:
 1204  00001cd8  8fa20000	lw	r2,0(r29)
 1205  00001cdc  8fa30004	lw	r3,4(r29)
 1206  00001ce0  8fdffff8	lw	r31,-8(r30)
 1207  00001ce4  001ee820	add	r29,r0,r30
 1208  00001ce8  8fdefffc	lw	r30,-4(r30)
 1209  00001cec  4be00000	jr	r31
 1210  00001cf0  54000000	nop
 1211  00001cf4          	.endproc _ditoa
 1212  00001cf4          	.align 2
 1213  00001cf4          	.proc _dstrtol
 1214  00001cf4          	.global _dstrtol
 1215  00001cf4          	_dstrtol:
 1216                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1217  00001cf4  afbefffc	sw	-4(r29),r30; push fp
 1218  00001cf8  001df020	add	r30,r0,r29; fp = sp
 1219  00001cfc  afbffff8	sw	-8(r29),r31; push ret addr
 1220  00001d00  2fbd0020	subui	r29,r29,#32; alloc local storage
 1221  00001d04  afa20000	sw	0(r29),r2
 1222  00001d08  20010000	addi	r1,r0,#0
 1223  00001d0c  afc1fff4	sw	-12(r30),r1
 1224  00001d10          	L73_LF2:
 1225  00001d10  8fc10000	lw	r1,(r30)
 1226  00001d14  90220000	lbu	r2,(r1)
 1227  00001d18  60410020	seqi	r1,r2,#32
 1228  00001d1c  14200034	bnez	r1,L75_LF2
 1229  00001d20  54000000	nop; delay slot nop
 1230  00001d24  8fc10000	lw	r1,(r30)
 1231  00001d28  90220000	lbu	r2,(r1)
 1232  00001d2c  60410009	seqi	r1,r2,#9
 1233  00001d30  14200020	bnez	r1,L75_LF2
 1234  00001d34  54000000	nop; delay slot nop
 1235  00001d38  8fc10000	lw	r1,(r30)
 1236  00001d3c  90220000	lbu	r2,(r1)
 1237  00001d40  6041000a	seqi	r1,r2,#10
 1238  00001d44  1420000c	bnez	r1,L75_LF2
 1239  00001d48  54000000	nop; delay slot nop
 1240  00001d4c  0800001c	j	L74_LF2
 1241  00001d50  54000000	nop; delay slot nop
 1242  00001d54          	L75_LF2:
 1243  00001d54  8fc20000	lw	r2,(r30)
 1244  00001d58  20410001	addi	r1,r2,#1
 1245  00001d5c  00011020	add	r2,r0,r1
 1246  00001d60  afc20000	sw	(r30),r2
 1247  00001d64  0bffffa8	j	L73_LF2
 1248  00001d68  54000000	nop; delay slot nop
 1249  00001d6c          	L74_LF2:
 1250  00001d6c  8fc10004	lw	r1,4(r30)
 1251  00001d70  64220000	snei	r2,r1,#0
 1252  00001d74  10400010	beqz	r2,L76_LF2
 1253  00001d78  54000000	nop; delay slot nop
 1254  00001d7c  8fc10004	lw	r1,4(r30)
 1255  00001d80  8fc20000	lw	r2,(r30)
 1256  00001d84  ac220000	sw	(r1),r2
 1257  00001d88          	L76_LF2:
 1258  00001d88  8fc10000	lw	r1,(r30)
 1259  00001d8c  90220000	lbu	r2,(r1)
 1260  00001d90  64410000	snei	r1,r2,#0
 1261  00001d94  14200010	bnez	r1,L77_LF2
 1262  00001d98  54000000	nop; delay slot nop
 1263  00001d9c  8fc1fff4	lw	r1,-12(r30)
 1264  00001da0  08000294	j	L72_LF2
 1265  00001da4  54000000	nop; delay slot nop
 1266  00001da8          	L77_LF2:
 1267  00001da8  8fc10000	lw	r1,(r30)
 1268  00001dac  90220000	lbu	r2,(r1)
 1269  00001db0  6041002d	seqi	r1,r2,#45
 1270  00001db4  10200024	beqz	r1,L78_LF2
 1271  00001db8  54000000	nop; delay slot nop
 1272  00001dbc  2001ffff	addi	r1,r0,#-1
 1273  00001dc0  afc1ffec	sw	-20(r30),r1
 1274  00001dc4  8fc20000	lw	r2,(r30)
 1275  00001dc8  20410001	addi	r1,r2,#1
 1276  00001dcc  00011020	add	r2,r0,r1
 1277  00001dd0  afc20000	sw	(r30),r2
 1278  00001dd4  0800000c	j	L79_LF2
 1279  00001dd8  54000000	nop; delay slot nop
 1280  00001ddc          	L78_LF2:
 1281  00001ddc  20010001	addi	r1,r0,#1
 1282  00001de0  afc1ffec	sw	-20(r30),r1
 1283  00001de4          	L79_LF2:
 1284  00001de4  8fc10008	lw	r1,8(r30)
 1285  00001de8  64220000	snei	r2,r1,#0
 1286  00001dec  14400090	bnez	r2,L80_LF2
 1287  00001df0  54000000	nop; delay slot nop
 1288  00001df4  8fc10000	lw	r1,(r30)
 1289  00001df8  90220000	lbu	r2,(r1)
 1290  00001dfc  60410030	seqi	r1,r2,#48
 1291  00001e00  10200074	beqz	r1,L81_LF2
 1292  00001e04  54000000	nop; delay slot nop
 1293  00001e08  8fc20000	lw	r2,(r30)
 1294  00001e0c  20410001	addi	r1,r2,#1
 1295  00001e10  00011020	add	r2,r0,r1
 1296  00001e14  afc20000	sw	(r30),r2
 1297  00001e18  8fc10000	lw	r1,(r30)
 1298  00001e1c  90220000	lbu	r2,(r1)
 1299  00001e20  60410078	seqi	r1,r2,#120
 1300  00001e24  14200020	bnez	r1,L83_LF2
 1301  00001e28  54000000	nop; delay slot nop
 1302  00001e2c  8fc10000	lw	r1,(r30)
 1303  00001e30  90220000	lbu	r2,(r1)
 1304  00001e34  60410058	seqi	r1,r2,#88
 1305  00001e38  1420000c	bnez	r1,L83_LF2
 1306  00001e3c  54000000	nop; delay slot nop
 1307  00001e40  08000024	j	L82_LF2
 1308  00001e44  54000000	nop; delay slot nop
 1309  00001e48          	L83_LF2:
 1310  00001e48  20010010	addi	r1,r0,#16
 1311  00001e4c  afc10008	sw	8(r30),r1
 1312  00001e50  8fc20000	lw	r2,(r30)
 1313  00001e54  20410001	addi	r1,r2,#1
 1314  00001e58  00011020	add	r2,r0,r1
 1315  00001e5c  afc20000	sw	(r30),r2
 1316  00001e60  0800000c	j	L84_LF2
 1317  00001e64  54000000	nop; delay slot nop
 1318  00001e68          	L82_LF2:
 1319  00001e68  20010008	addi	r1,r0,#8
 1320  00001e6c  afc10008	sw	8(r30),r1
 1321  00001e70          	L84_LF2:
 1322  00001e70  0800000c	j	L80_LF2
 1323  00001e74  54000000	nop; delay slot nop
 1324  00001e78          	L81_LF2:
 1325  00001e78  2001000a	addi	r1,r0,#10
 1326  00001e7c  afc10008	sw	8(r30),r1
 1327  00001e80          	L85_LF2:
 1328  00001e80          	L80_LF2:
 1329  00001e80  8fc10008	lw	r1,8(r30)
 1330  00001e84  70220000	slei	r2,r1,#0
 1331  00001e88  1440001c	bnez	r2,L87_LF2
 1332  00001e8c  54000000	nop; delay slot nop
 1333  00001e90  8fc10008	lw	r1,8(r30)
 1334  00001e94  6c220010	sgti	r2,r1,#16
 1335  00001e98  1440000c	bnez	r2,L87_LF2
 1336  00001e9c  54000000	nop; delay slot nop
 1337  00001ea0  08000010	j	L86_LF2
 1338  00001ea4  54000000	nop; delay slot nop
 1339  00001ea8          	L87_LF2:
 1340  00001ea8  8fc1fff4	lw	r1,-12(r30)
 1341  00001eac  08000188	j	L72_LF2
 1342  00001eb0  54000000	nop; delay slot nop
 1343  00001eb4          	L86_LF2:
 1344  00001eb4  54000000	nop
 1345  00001eb8          	L88_LF2:
 1346  00001eb8  8fc10000	lw	r1,(r30)
 1347  00001ebc  90220000	lbu	r2,(r1)
 1348  00001ec0  6c41002f	sgtui	r1,r2,#47
 1349  00001ec4  10200030	beqz	r1,L91_LF2
 1350  00001ec8  54000000	nop; delay slot nop
 1351  00001ecc  8fc10000	lw	r1,(r30)
 1352  00001ed0  90220000	lbu	r2,(r1)
 1353  00001ed4  70410039	sleui	r1,r2,#57
 1354  00001ed8  1020001c	beqz	r1,L91_LF2
 1355  00001edc  54000000	nop; delay slot nop
 1356  00001ee0  8fc10000	lw	r1,(r30)
 1357  00001ee4  90220000	lbu	r2,(r1)
 1358  00001ee8  2041ffd0	addi	r1,r2,#-48
 1359  00001eec  afc1fff0	sw	-16(r30),r1
 1360  00001ef0  0800008c	j	L92_LF2
 1361  00001ef4  54000000	nop; delay slot nop
 1362  00001ef8          	L91_LF2:
 1363  00001ef8  8fc10000	lw	r1,(r30)
 1364  00001efc  90220000	lbu	r2,(r1)
 1365  00001f00  6c410060	sgtui	r1,r2,#96
 1366  00001f04  10200030	beqz	r1,L93_LF2
 1367  00001f08  54000000	nop; delay slot nop
 1368  00001f0c  8fc10000	lw	r1,(r30)
 1369  00001f10  90220000	lbu	r2,(r1)
 1370  00001f14  7041007a	sleui	r1,r2,#122
 1371  00001f18  1020001c	beqz	r1,L93_LF2
 1372  00001f1c  54000000	nop; delay slot nop
 1373  00001f20  8fc10000	lw	r1,(r30)
 1374  00001f24  90220000	lbu	r2,(r1)
 1375  00001f28  2041ffa9	addi	r1,r2,#-87
 1376  00001f2c  afc1fff0	sw	-16(r30),r1
 1377  00001f30  0800004c	j	L92_LF2
 1378  00001f34  54000000	nop; delay slot nop
 1379  00001f38          	L93_LF2:
 1380  00001f38  8fc10000	lw	r1,(r30)
 1381  00001f3c  90220000	lbu	r2,(r1)
 1382  00001f40  6c410040	sgtui	r1,r2,#64
 1383  00001f44  10200030	beqz	r1,L95_LF2
 1384  00001f48  54000000	nop; delay slot nop
 1385  00001f4c  8fc10000	lw	r1,(r30)
 1386  00001f50  90220000	lbu	r2,(r1)
 1387  00001f54  7041005a	sleui	r1,r2,#90
 1388  00001f58  1020001c	beqz	r1,L95_LF2
 1389  00001f5c  54000000	nop; delay slot nop
 1390  00001f60  8fc10000	lw	r1,(r30)
 1391  00001f64  90220000	lbu	r2,(r1)
 1392  00001f68  2041ffc9	addi	r1,r2,#-55
 1393  00001f6c  afc1fff0	sw	-16(r30),r1
 1394  00001f70  0800000c	j	L92_LF2
 1395  00001f74  54000000	nop; delay slot nop
 1396  00001f78          	L95_LF2:
 1397  00001f78  200103e8	addi	r1,r0,#1000
 1398  00001f7c  afc1fff0	sw	-16(r30),r1
 1399  00001f80          	L96_LF2:
 1400  00001f80          	L94_LF2:
 1401  00001f80          	L92_LF2:
 1402  00001f80  8fc1fff0	lw	r1,-16(r30)
 1403  00001f84  8fc20008	lw	r2,8(r30)
 1404  00001f88  0022082a	slt	r1,r1,r2
 1405  00001f8c  10200040	beqz	r1,L90_LF2
 1406  00001f90  54000000	nop; delay slot nop
 1407  00001f94  8fc1fff4	lw	r1,-12(r30)
 1408  00001f98  8fc20008	lw	r2,8(r30)
 1409  00001f9c  00200035	movi2fp	f0,r1
 1410  00001fa0  00400835	movi2fp	f1,r2
 1411  00001fa4  0401000e	mult	f0,f0,f1
 1412  00001fa8  00000834	movfp2i	r1,f0
 1413  00001fac  afc1fff4	sw	-12(r30),r1
 1414  00001fb0  8fc1fff4	lw	r1,-12(r30)
 1415  00001fb4  8fc2fff0	lw	r2,-16(r30)
 1416  00001fb8  00220820	add	r1,r1,r2
 1417  00001fbc  afc1fff4	sw	-12(r30),r1
 1418  00001fc0  8fc20000	lw	r2,(r30)
 1419  00001fc4  20410001	addi	r1,r2,#1
 1420  00001fc8  00011020	add	r2,r0,r1
 1421  00001fcc  afc20000	sw	(r30),r2
 1422  00001fd0          	L97_LF2:
 1423  00001fd0          	L90_LF2:
 1424  00001fd0  8fc1fff0	lw	r1,-16(r30)
 1425  00001fd4  8fc20008	lw	r2,8(r30)
 1426  00001fd8  0022082a	slt	r1,r1,r2
 1427  00001fdc  1420000c	bnez	r1,L98_LF2
 1428  00001fe0  54000000	nop; delay slot nop
 1429  00001fe4  0800000c	j	L89_LF2
 1430  00001fe8  54000000	nop; delay slot nop
 1431  00001fec          	L98_LF2:
 1432  00001fec  0bfffec8	j	L88_LF2
 1433  00001ff0  54000000	nop; delay slot nop
 1434  00001ff4          	L89_LF2:
 1435  00001ff4  8fc10004	lw	r1,4(r30)
 1436  00001ff8  64220000	snei	r2,r1,#0
 1437  00001ffc  10400010	beqz	r2,L99_LF2
 1438  00002000  54000000	nop; delay slot nop
 1439  00002004  8fc10004	lw	r1,4(r30)
 1440  00002008  8fc20000	lw	r2,(r30)
 1441  0000200c  ac220000	sw	(r1),r2
 1442  00002010          	L99_LF2:
 1443  00002010  8fc1fff4	lw	r1,-12(r30)
 1444  00002014  8fc2ffec	lw	r2,-20(r30)
 1445  00002018  00200035	movi2fp	f0,r1
 1446  0000201c  00400835	movi2fp	f1,r2
 1447  00002020  0401000e	mult	f0,f0,f1
 1448  00002024  00000834	movfp2i	r1,f0
 1449  00002028  afc1fff4	sw	-12(r30),r1
 1450  0000202c  8fc1fff4	lw	r1,-12(r30)
 1451  00002030  08000004	j	L72_LF2
 1452  00002034  54000000	nop; delay slot nop
 1453  00002038          	L72_LF2:
 1454  00002038  8fa20000	lw	r2,0(r29)
 1455  0000203c  8fdffff8	lw	r31,-8(r30)
 1456  00002040  001ee820	add	r29,r0,r30
 1457  00002044  8fdefffc	lw	r30,-4(r30)
 1458  00002048  4be00000	jr	r31
 1459  0000204c  54000000	nop
 1460  00002050          	.endproc _dstrtol
 1461  00002050          	.align 2
 1462  00002050          	.proc _bcopy
 1463  00002050          	.global _bcopy
 1464  00002050          	_bcopy:
 1465                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1466  00002050  afbefffc	sw	-4(r29),r30; push fp
 1467  00002054  001df020	add	r30,r0,r29; fp = sp
 1468  00002058  afbffff8	sw	-8(r29),r31; push ret addr
 1469  0000205c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1470  00002060  afa20000	sw	0(r29),r2
 1471  00002064  afa30004	sw	4(r29),r3
 1472  00002068  54000000	nop
 1473  0000206c          	L101_LF2:
 1474  0000206c  8fc10008	lw	r1,8(r30)
 1475  00002070  2022ffff	addi	r2,r1,#-1
 1476  00002074  afc20008	sw	8(r30),r2
 1477  00002078  6c210000	sgti	r1,r1,#0
 1478  0000207c  1420000c	bnez	r1,L103_LF2
 1479  00002080  54000000	nop; delay slot nop
 1480  00002084  0800002c	j	L102_LF2
 1481  00002088  54000000	nop; delay slot nop
 1482  0000208c          	L103_LF2:
 1483  0000208c  8fc10004	lw	r1,4(r30)
 1484  00002090  20220001	addi	r2,r1,#1
 1485  00002094  afc20004	sw	4(r30),r2
 1486  00002098  8fc20000	lw	r2,(r30)
 1487  0000209c  20430001	addi	r3,r2,#1
 1488  000020a0  afc30000	sw	(r30),r3
 1489  000020a4  80420000	lb	r2,(r2)
 1490  000020a8  a0220000	sb	(r1),r2
 1491  000020ac  0bffffbc	j	L101_LF2
 1492  000020b0  54000000	nop; delay slot nop
 1493  000020b4          	L102_LF2:
 1494  000020b4          	L100_LF2:
 1495  000020b4  8fa20000	lw	r2,0(r29)
 1496  000020b8  8fa30004	lw	r3,4(r29)
 1497  000020bc  8fdffff8	lw	r31,-8(r30)
 1498  000020c0  001ee820	add	r29,r0,r30
 1499  000020c4  8fdefffc	lw	r30,-4(r30)
 1500  000020c8  4be00000	jr	r31
 1501  000020cc  54000000	nop
 1502  000020d0          	.endproc _bcopy
 1503  000020d0          	.align 2
 1504  000020d0          	.proc _bzero
 1505  000020d0          	.global _bzero
 1506  000020d0          	_bzero:
 1507                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1508  000020d0  afbefffc	sw	-4(r29),r30; push fp
 1509  000020d4  001df020	add	r30,r0,r29; fp = sp
 1510  000020d8  afbffff8	sw	-8(r29),r31; push ret addr
 1511  000020dc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1512  000020e0  afa20000	sw	0(r29),r2
 1513  000020e4  54000000	nop
 1514  000020e8          	L105_LF2:
 1515  000020e8  8fc10004	lw	r1,4(r30)
 1516  000020ec  2022ffff	addi	r2,r1,#-1
 1517  000020f0  afc20004	sw	4(r30),r2
 1518  000020f4  6c210000	sgti	r1,r1,#0
 1519  000020f8  1420000c	bnez	r1,L107_LF2
 1520  000020fc  54000000	nop; delay slot nop
 1521  00002100  08000020	j	L106_LF2
 1522  00002104  54000000	nop; delay slot nop
 1523  00002108          	L107_LF2:
 1524  00002108  8fc10000	lw	r1,(r30)
 1525  0000210c  20220001	addi	r2,r1,#1
 1526  00002110  afc20000	sw	(r30),r2
 1527  00002114  20020000	addi	r2,r0,(#0x0)&0xff
 1528  00002118  a0220000	sb	(r1),r2
 1529  0000211c  0bffffc8	j	L105_LF2
 1530  00002120  54000000	nop; delay slot nop
 1531  00002124          	L106_LF2:
 1532  00002124          	L104_LF2:
 1533  00002124  8fa20000	lw	r2,0(r29)
 1534  00002128  8fdffff8	lw	r31,-8(r30)
 1535  0000212c  001ee820	add	r29,r0,r30
 1536  00002130  8fdefffc	lw	r30,-4(r30)
 1537  00002134  4be00000	jr	r31
 1538  00002138  54000000	nop
 1539  0000213c          	.endproc _bzero
 1540  0000213c          	.align 2
 1541  0000213c          	.proc _min
 1542  0000213c          	.global _min
 1543  0000213c          	_min:
 1544                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1545  0000213c  afbefffc	sw	-4(r29),r30; push fp
 1546  00002140  001df020	add	r30,r0,r29; fp = sp
 1547  00002144  afbffff8	sw	-8(r29),r31; push ret addr
 1548  00002148  2fbd0010	subui	r29,r29,#16; alloc local storage
 1549  0000214c  afa20000	sw	0(r29),r2
 1550  00002150  afa30004	sw	4(r29),r3
 1551  00002154  8fc10000	lw	r1,(r30)
 1552  00002158  8fc20004	lw	r2,4(r30)
 1553  0000215c  0022182c	sle	r3,r1,r2
 1554  00002160  14600008	bnez	r3,L109_LF2
 1555  00002164  54000000	nop; delay slot nop
 1556  00002168  8fc10004	lw	r1,4(r30)
 1557  0000216c          	L109_LF2:
 1558  0000216c  08000004	j	L108_LF2
 1559  00002170  54000000	nop; delay slot nop
 1560  00002174          	L108_LF2:
 1561  00002174  8fa20000	lw	r2,0(r29)
 1562  00002178  8fa30004	lw	r3,4(r29)
 1563  0000217c  8fdffff8	lw	r31,-8(r30)
 1564  00002180  001ee820	add	r29,r0,r30
 1565  00002184  8fdefffc	lw	r30,-4(r30)
 1566  00002188  4be00000	jr	r31
 1567  0000218c  54000000	nop
 1568  00002190          	.endproc _min
 1569  00002190          	.align 2
 1570  00002190          	.proc _max
 1571  00002190          	.global _max
 1572  00002190          	_max:
 1573                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1574  00002190  afbefffc	sw	-4(r29),r30; push fp
 1575  00002194  001df020	add	r30,r0,r29; fp = sp
 1576  00002198  afbffff8	sw	-8(r29),r31; push ret addr
 1577  0000219c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1578  000021a0  afa20000	sw	0(r29),r2
 1579  000021a4  afa30004	sw	4(r29),r3
 1580  000021a8  8fc10000	lw	r1,(r30)
 1581  000021ac  8fc20004	lw	r2,4(r30)
 1582  000021b0  0022182d	sge	r3,r1,r2
 1583  000021b4  14600008	bnez	r3,L111_LF2
 1584  000021b8  54000000	nop; delay slot nop
 1585  000021bc  8fc10004	lw	r1,4(r30)
 1586  000021c0          	L111_LF2:
 1587  000021c0  08000004	j	L110_LF2
 1588  000021c4  54000000	nop; delay slot nop
 1589  000021c8          	L110_LF2:
 1590  000021c8  8fa20000	lw	r2,0(r29)
 1591  000021cc  8fa30004	lw	r3,4(r29)
 1592  000021d0  8fdffff8	lw	r31,-8(r30)
 1593  000021d4  001ee820	add	r29,r0,r30
 1594  000021d8  8fdefffc	lw	r30,-4(r30)
 1595  000021dc  4be00000	jr	r31
 1596  000021e0  54000000	nop
 1597  000021e4          	.endproc _max
 1598                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1599                      ;;;
 1600                      ;;; Most of the traps are called in files from libtraps.
 1603  000021e4          	.align 2
 1604  000021e4          	.proc _exit
 1605  000021e4          	.global _exit
 1606  000021e4          	_exit:
 1607  000021e4  44000300	trap	#0x300
 1608  000021e8  4be00000	jr	r31
 1609  000021ec  54000000	nop
 1610  000021f0          	.endproc _exit
 1612                      ; for the benefit of gcc.
 1613  000021f0          	.proc ___main
 1614  000021f0          	.global ___main
 1615  000021f0          	___main:
 1616  000021f0  4be00000	jr	r31
 1617  000021f4  54000000	nop
 1618  000021f8          	.endproc ___main
 1619  000021f8          	.text
 1620  000021f8          	.global _etext
 1621  000021f8          	_etext:
 1622  000021f8          	.align 3
 1623  000021f8          	.data
 1624  000030f7          	.global _edata
 1625  000030f7          	_edata:
