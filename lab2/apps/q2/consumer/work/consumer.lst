 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 337
    4                      ; Text size: 4860
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  48656c6c	.ascii "Hello World\000"
   82  00003004  6f20576f	
   82  00003008  726c6400	
   83  0000300c          	.align 2
   84  0000300c          	LC1_LF0:
   85  0000300c  676f7420	.ascii "got to consumer\n\000"
   85  00003010  746f2063	
   85  00003014  6f6e7375	
   85  00003018  6d65720a	
   85  0000301c  00      	
   86  0000301d          	.align 2
   87  00003020          	LC2_LF0:
   88  00003020  55736167	.ascii "Usage: \000"
   88  00003024  653a2000	
   89  00003028          	.align 2
   90  00003028          	LC3_LF0:
   91  00003028  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   91  0000302c  6e646c65	
   91  00003030  5f746f5f	
   91  00003034  73686172	
   91  00003038  65645f6d	
   91  0000303c  656d6f72	
   91  00003040  795f7061	
   91  00003044  67653e20	
   91  00003048  3c68616e	
   91  0000304c  646c655f	
   91  00003050  746f5f70	
   91  00003054  6167655f	
   91  00003058  6d617070	
   91  0000305c  65645f73	
   91  00003060  656d6170	
   91  00003064  686f7265	
   91  00003068  3e0a00  	
   92  0000306b          	.align 2
   93  0000306c          	LC4_LF0:
   94  0000306c  436f756c	.ascii "Could not map the virtual address to the memory in \000"
   94  00003070  64206e6f	
   94  00003074  74206d61	
   94  00003078  70207468	
   94  0000307c  65207669	
   94  00003080  72747561	
   94  00003084  6c206164	
   94  00003088  64726573	
   94  0000308c  7320746f	
   94  00003090  20746865	
   94  00003094  206d656d	
   94  00003098  6f727920	
   94  0000309c  696e2000	
   95  000030a0          	.align 2
   96  000030a0          	LC5_LF0:
   97  000030a0  2c206578	.ascii ", exiting...\n\000"
   97  000030a4  6974696e	
   97  000030a8  672e2e2e	
   97  000030ac  0a00    	
   98  000030ae          	.align 2
   99  000030b0          	LC6_LF0:
  100  000030b0  42616420	.ascii "Bad lock acquire (%d) in \000"
  100  000030b4  6c6f636b	
  100  000030b8  20616371	
  100  000030bc  75697265	
  100  000030c0  20282564	
  100  000030c4  2920696e	
  100  000030c8  2000    	
  101  000030ca          	.align 2
  102  000030cc          	LC7_LF0:
  103  000030cc  0a00    	.ascii "\n\000"
  104  000030ce          	.align 2
  105  000030d0          	LC8_LF0:
  106  000030d0  436f6e73	.ascii "Consumer %d removed: %c\n\000"
  106  000030d4  756d6572	
  106  000030d8  20256420	
  106  000030dc  72656d6f	
  106  000030e0  7665643a	
  106  000030e4  2025630a	
  106  000030e8  00      	
  107  000030e9          	.align 2
  108  000030ec          	LC9_LF0:
  109  000030ec  42616420	.ascii "Bad lock release (%d) in \000"
  109  000030f0  6c6f636b	
  109  000030f4  2072656c	
  109  000030f8  65617365	
  109  000030fc  20282564	
  109  00003100  2920696e	
  109  00003104  2000    	
  110  00003106          	.align 2
  111  00003108          	LC10_LF0:
  112  00003108  636f6e73	.ascii "consumer: PID %d is complete.\n\000"
  112  0000310c  756d6572	
  112  00003110  3a205049	
  112  00003114  44202564	
  112  00003118  20697320	
  112  0000311c  636f6d70	
  112  00003120  6c657465	
  112  00003124  2e0a00  	
  113  00003127          	.align 2
  114  00003128          	LC11_LF0:
  115  00003128  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  115  0000312c  73656d61	
  115  00003130  70686f72	
  115  00003134  6520735f	
  115  00003138  70726f63	
  115  0000313c  735f636f	
  115  00003140  6d706c65	
  115  00003144  74656420	
  115  00003148  28256429	
  115  0000314c  20696e20	
  115  00003150  00      	
  116  00003151          	.text
  117  000010d4          	.align 2
  118  000010d4          	.proc _main
  119  000010d4          	.global _main
  120  000010d4          	_main:
  121                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  122  000010d4  afbefffc	sw	-4(r29),r30; push fp
  123  000010d8  001df020	add	r30,r0,r29; fp = sp
  124  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  125  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  126  000010e4  8fc20000	lw	r2,(r30)
  127  000010e8  8fc70004	lw	r7,4(r30)
  128  000010ec  0c001204	jal	___main
  129  000010f0  54000000	nop; not filled.
  130  000010f4  3c010000	lhi	r1,((LC0_LF0)>>16)&0xffff
  131  000010f8  24213000	addui	r1,r1,(LC0_LF0)&0xffff
  132  000010fc  80290000	lb	r9,(r1)
  133  00001100  a3c9ffe8	sb	-24(r30),r9
  134  00001104  80290001	lb	r9,1(r1)
  135  00001108  a3c9ffe9	sb	-23(r30),r9
  136  0000110c  80290002	lb	r9,2(r1)
  137  00001110  a3c9ffea	sb	-22(r30),r9
  138  00001114  80290003	lb	r9,3(r1)
  139  00001118  a3c9ffeb	sb	-21(r30),r9
  140  0000111c  80290004	lb	r9,4(r1)
  141  00001120  a3c9ffec	sb	-20(r30),r9
  142  00001124  80290005	lb	r9,5(r1)
  143  00001128  a3c9ffed	sb	-19(r30),r9
  144  0000112c  80290006	lb	r9,6(r1)
  145  00001130  a3c9ffee	sb	-18(r30),r9
  146  00001134  80290007	lb	r9,7(r1)
  147  00001138  a3c9ffef	sb	-17(r30),r9
  148  0000113c  80290008	lb	r9,8(r1)
  149  00001140  a3c9fff0	sb	-16(r30),r9
  150  00001144  80290009	lb	r9,9(r1)
  151  00001148  a3c9fff1	sb	-15(r30),r9
  152  0000114c  8029000a	lb	r9,10(r1)
  153  00001150  a3c9fff2	sb	-14(r30),r9
  154  00001154  8021000b	lb	r1,11(r1)
  155  00001158  a3c1fff3	sb	-13(r30),r1
  156  0000115c  20060000	addi	r6,r0,#0
  157  00001160  23bdfff8	addi	r29,r29,#-8
  158  00001164  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  159  00001168  2529300c	addui	r9,r9,(LC1_LF0)&0xffff
  160  0000116c  afa90000	sw	(r29),r9
  161  00001170  0c000378	jal	_Printf
  162  00001174  54000000	nop; not filled.
  163  00001178  23bd0008	addi	r29,r29,#8
  164  0000117c  64410004	snei	r1,r2,#4
  165  00001180  1020004c	beqz	r1,L14_LF0
  166  00001184  54000000	nop; not filled.
  167  00001188  23bdfff8	addi	r29,r29,#-8
  168  0000118c  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  169  00001190  25293020	addui	r9,r9,(LC2_LF0)&0xffff
  170  00001194  afa90000	sw	(r29),r9
  171  00001198  0c000350	jal	_Printf
  172  0000119c  54000000	nop; not filled.
  173  000011a0  8ce90000	lw	r9,(r7)
  174  000011a4  afa90000	sw	(r29),r9
  175  000011a8  0c000340	jal	_Printf
  176  000011ac  54000000	nop; not filled.
  177  000011b0  3c090000	lhi	r9,((LC3_LF0)>>16)&0xffff
  178  000011b4  25293028	addui	r9,r9,(LC3_LF0)&0xffff
  179  000011b8  afa90000	sw	(r29),r9
  180  000011bc  0c00032c	jal	_Printf
  181  000011c0  54000000	nop; not filled.
  182  000011c4  0c0003d8	jal	_Exit
  183  000011c8  54000000	nop; not filled.
  184  000011cc  23bd0008	addi	r29,r29,#8
  185  000011d0          	L14_LF0:
  186  000011d0  23bdfff0	addi	r29,r29,#-16
  187  000011d4  8ce90004	lw	r9,4(r7)
  188  000011d8  afa90000	sw	(r29),r9
  189  000011dc  20090000	addi	r9,r0,#0
  190  000011e0  afa90004	sw	4(r29),r9
  191  000011e4  2009000a	addi	r9,r0,#10
  192  000011e8  afa90008	sw	8(r29),r9
  193  000011ec  0c000c5c	jal	_dstrtol
  194  000011f0  54000000	nop; not filled.
  195  000011f4  00011020	add	r2,r0,r1
  196  000011f8  8ce90008	lw	r9,8(r7)
  197  000011fc  afa90000	sw	(r29),r9
  198  00001200  20090000	addi	r9,r0,#0
  199  00001204  afa90004	sw	4(r29),r9
  200  00001208  2009000a	addi	r9,r0,#10
  201  0000120c  afa90008	sw	8(r29),r9
  202  00001210  0c000c38	jal	_dstrtol
  203  00001214  54000000	nop; not filled.
  204  00001218  00014020	add	r8,r0,r1
  205  0000121c  8ce9000c	lw	r9,12(r7)
  206  00001220  afa90000	sw	(r29),r9
  207  00001224  20090000	addi	r9,r0,#0
  208  00001228  afa90004	sw	4(r29),r9
  209  0000122c  2009000a	addi	r9,r0,#10
  210  00001230  afa90008	sw	8(r29),r9
  211  00001234  0c000c14	jal	_dstrtol
  212  00001238  54000000	nop; not filled.
  213  0000123c  00012820	add	r5,r0,r1
  214  00001240  afa20000	sw	(r29),r2
  215  00001244  0c0002d4	jal	_shmat
  216  00001248  54000000	nop; not filled.
  217  0000124c  00012020	add	r4,r0,r1
  218  00001250  23bd0010	addi	r29,r29,#16
  219  00001254  64810000	snei	r1,r4,#0
  220  00001258  1420004c	bnez	r1,L18_LF0
  221  0000125c  54000000	nop; not filled.
  222  00001260  23bdfff8	addi	r29,r29,#-8
  223  00001264  3c090000	lhi	r9,((LC4_LF0)>>16)&0xffff
  224  00001268  2529306c	addui	r9,r9,(LC4_LF0)&0xffff
  225  0000126c  afa90000	sw	(r29),r9
  226  00001270  0c000278	jal	_Printf
  227  00001274  54000000	nop; not filled.
  228  00001278  8ce90000	lw	r9,(r7)
  229  0000127c  afa90000	sw	(r29),r9
  230  00001280  0c000268	jal	_Printf
  231  00001284  54000000	nop; not filled.
  232  00001288  3c090000	lhi	r9,((LC5_LF0)>>16)&0xffff
  233  0000128c  252930a0	addui	r9,r9,(LC5_LF0)&0xffff
  234  00001290  afa90000	sw	(r29),r9
  235  00001294  0c000254	jal	_Printf
  236  00001298  54000000	nop; not filled.
  237  0000129c  0c000300	jal	_Exit
  238  000012a0  54000000	nop; not filled.
  239  000012a4  23bd0008	addi	r29,r29,#8
  240  000012a8          	L18_LF0:
  241  000012a8  23bdfff8	addi	r29,r29,#-8
  242  000012ac  afa50000	sw	(r29),r5
  243  000012b0  0c0002a4	jal	_lock_acquire
  244  000012b4  54000000	nop; not filled.
  245  000012b8  23bd0008	addi	r29,r29,#8
  246  000012bc  64210001	snei	r1,r1,#1
  247  000012c0  10200050	beqz	r1,L19_LF0
  248  000012c4  54000000	nop; not filled.
  249  000012c8  23bdfff8	addi	r29,r29,#-8
  250  000012cc  3c090000	lhi	r9,((LC6_LF0)>>16)&0xffff
  251  000012d0  252930b0	addui	r9,r9,(LC6_LF0)&0xffff
  252  000012d4  afa90000	sw	(r29),r9
  253  000012d8  afa50004	sw	4(r29),r5
  254  000012dc  0c00020c	jal	_Printf
  255  000012e0  54000000	nop; not filled.
  256  000012e4  8ce90000	lw	r9,(r7)
  257  000012e8  afa90000	sw	(r29),r9
  258  000012ec  0c0001fc	jal	_Printf
  259  000012f0  54000000	nop; not filled.
  260  000012f4  3c090000	lhi	r9,((LC7_LF0)>>16)&0xffff
  261  000012f8  252930cc	addui	r9,r9,(LC7_LF0)&0xffff
  262  000012fc  afa90000	sw	(r29),r9
  263  00001300  0c0001e8	jal	_Printf
  264  00001304  54000000	nop; not filled.
  265  00001308  0c000294	jal	_Exit
  266  0000130c  54000000	nop; not filled.
  267  00001310  23bd0008	addi	r29,r29,#8
  268  00001314          	L19_LF0:
  269  00001314  8c810010	lw	r1,16(r4)
  270  00001318  8c82000c	lw	r2,12(r4)
  271  0000131c  00220829	sne	r1,r1,r2
  272  00001320  10200074	beqz	r1,L20_LF0
  273  00001324  54000000	nop; not filled.
  274  00001328  0c0001cc	jal	_getpid
  275  0000132c  54000000	nop; not filled.
  276  00001330  23bdfff0	addi	r29,r29,#-16
  277  00001334  3c090000	lhi	r9,((LC8_LF0)>>16)&0xffff
  278  00001338  252930d0	addui	r9,r9,(LC8_LF0)&0xffff
  279  0000133c  afa90000	sw	(r29),r9
  280  00001340  afa10004	sw	4(r29),r1
  281  00001344  8c81000c	lw	r1,12(r4)
  282  00001348  00810820	add	r1,r4,r1
  283  0000134c  90210000	lbu	r1,(r1)
  284  00001350  afa10008	sw	8(r29),r1
  285  00001354  0c000194	jal	_Printf
  286  00001358  54000000	nop; not filled.
  287  0000135c  8c81000c	lw	r1,12(r4)
  288  00001360  20230001	addi	r3,r1,#1
  289  00001364  2001000b	addi	r1,r0,#11
  290  00001368  00600035	movi2fp	f0,r3
  291  0000136c  00200835	movi2fp	f1,r1
  292  00001370  0401000f	div	f0,f0,f1
  293  00001374  00001034	movfp2i	r2,f0
  294  00001378  50410001	slli	r1,r2,#0x1
  295  0000137c  00220820	add	r1,r1,r2
  296  00001380  50210002	slli	r1,r1,#0x2
  297  00001384  00220822	sub	r1,r1,r2
  298  00001388  00610822	sub	r1,r3,r1
  299  0000138c  ac81000c	sw	12(r4),r1
  300  00001390  20c60001	addi	r6,r6,#1
  301  00001394  23bd0010	addi	r29,r29,#16
  302  00001398          	L20_LF0:
  303  00001398  23bdfff8	addi	r29,r29,#-8
  304  0000139c  afa50000	sw	(r29),r5
  305  000013a0  0c0001c0	jal	_lock_release
  306  000013a4  54000000	nop; not filled.
  307  000013a8  23bd0008	addi	r29,r29,#8
  308  000013ac  64210001	snei	r1,r1,#1
  309  000013b0  10200050	beqz	r1,L16_LF0
  310  000013b4  54000000	nop; not filled.
  311  000013b8  23bdfff8	addi	r29,r29,#-8
  312  000013bc  3c090000	lhi	r9,((LC9_LF0)>>16)&0xffff
  313  000013c0  252930ec	addui	r9,r9,(LC9_LF0)&0xffff
  314  000013c4  afa90000	sw	(r29),r9
  315  000013c8  afa50004	sw	4(r29),r5
  316  000013cc  0c00011c	jal	_Printf
  317  000013d0  54000000	nop; not filled.
  318  000013d4  8ce90000	lw	r9,(r7)
  319  000013d8  afa90000	sw	(r29),r9
  320  000013dc  0c00010c	jal	_Printf
  321  000013e0  54000000	nop; not filled.
  322  000013e4  3c090000	lhi	r9,((LC7_LF0)>>16)&0xffff
  323  000013e8  252930cc	addui	r9,r9,(LC7_LF0)&0xffff
  324  000013ec  afa90000	sw	(r29),r9
  325  000013f0  0c0000f8	jal	_Printf
  326  000013f4  54000000	nop; not filled.
  327  000013f8  0c0001a4	jal	_Exit
  328  000013fc  54000000	nop; not filled.
  329  00001400  23bd0008	addi	r29,r29,#8
  330  00001404          	L16_LF0:
  331  00001404  70c1000a	slei	r1,r6,#10
  332  00001408  1420fe9c	bnez	r1,L18_LF0
  333  0000140c  54000000	nop; not filled.
  334  00001410  0c0000e4	jal	_getpid
  335  00001414  54000000	nop; not filled.
  336  00001418  23bdfff8	addi	r29,r29,#-8
  337  0000141c  3c090000	lhi	r9,((LC10_LF0)>>16)&0xffff
  338  00001420  25293108	addui	r9,r9,(LC10_LF0)&0xffff
  339  00001424  afa90000	sw	(r29),r9
  340  00001428  afa10004	sw	4(r29),r1
  341  0000142c  0c0000bc	jal	_Printf
  342  00001430  54000000	nop; not filled.
  343  00001434  afa80000	sw	(r29),r8
  344  00001438  0c000104	jal	_sem_signal
  345  0000143c  54000000	nop; not filled.
  346  00001440  23bd0008	addi	r29,r29,#8
  347  00001444  64210001	snei	r1,r1,#1
  348  00001448  10200050	beqz	r1,L23_LF0
  349  0000144c  54000000	nop; not filled.
  350  00001450  23bdfff8	addi	r29,r29,#-8
  351  00001454  3c090000	lhi	r9,((LC11_LF0)>>16)&0xffff
  352  00001458  25293128	addui	r9,r9,(LC11_LF0)&0xffff
  353  0000145c  afa90000	sw	(r29),r9
  354  00001460  afa80004	sw	4(r29),r8
  355  00001464  0c000084	jal	_Printf
  356  00001468  54000000	nop; not filled.
  357  0000146c  8ce70000	lw	r7,(r7)
  358  00001470  afa70000	sw	(r29),r7
  359  00001474  0c000074	jal	_Printf
  360  00001478  54000000	nop; not filled.
  361  0000147c  3c090000	lhi	r9,((LC5_LF0)>>16)&0xffff
  362  00001480  252930a0	addui	r9,r9,(LC5_LF0)&0xffff
  363  00001484  afa90000	sw	(r29),r9
  364  00001488  0c000060	jal	_Printf
  365  0000148c  54000000	nop; not filled.
  366  00001490  0c00010c	jal	_Exit
  367  00001494  54000000	nop; not filled.
  368  00001498  23bd0008	addi	r29,r29,#8
  369  0000149c          	L23_LF0:
  370  0000149c  0c000e48	jal	_exit
  371  000014a0  54000000	nop
  372  000014a4          	.endproc _main
  373                      ;;;
  374                      ;;; Stub functions for DLX traps.
  375                      ;;;
  376                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  377                      ;;;
  378                      ;;; The traps such as Open and Close
  379                      ;;; (note the capital letters) are for use by user programs.  The traps
  380                      ;;; with names such as open and close (lower case) are for use by the OS.
  381                      ;;;
  384  000014a4          	.align 2
  386                      ;;; The following are the traps to be used by user-level programs
  387                      ;;;
  389  000014a4          	.align 2
  390  000014a4          	.proc _Open
  391  000014a4          	.global _Open
  392  000014a4          	_Open:
  393                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  394                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  395                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  396  000014a4  44000213	trap	#0x213
  397  000014a8  4be00000	jr	r31
  398  000014ac  54000000	nop
  399  000014b0          	.endproc _Open
  401  000014b0          	.proc _Close
  402  000014b0          	.global _Close
  403  000014b0          	_Close:
  404  000014b0  44000214	trap	#0x214
  405  000014b4  4be00000	jr	r31
  406  000014b8  54000000	nop
  407  000014bc          	.endproc _Close
  409  000014bc          	.proc _Read
  410  000014bc          	.global _Read
  411  000014bc          	_Read:
  412  000014bc  44000210	trap	#0x210
  413  000014c0  4be00000	jr	r31
  414  000014c4  54000000	nop
  415  000014c8          	.endproc _Read
  417  000014c8          	.proc _Write
  418  000014c8          	.global _Write
  419  000014c8          	_Write:
  420  000014c8  44000211	trap	#0x211
  421  000014cc  4be00000	jr	r31
  422  000014d0  54000000	nop
  423  000014d4          	.endproc _Write
  425  000014d4          	.proc _Lseek
  426  000014d4          	.global _Lseek
  427  000014d4          	_Lseek:
  428  000014d4  44000212	trap	#0x212
  429  000014d8  4be00000	jr	r31
  430  000014dc  54000000	nop
  431  000014e0          	.endproc _Lseek
  433  000014e0          	.proc _Putchar
  434  000014e0          	.global _Putchar
  435  000014e0          	_Putchar:
  436  000014e0  44000280	trap	#0x280
  437  000014e4  4be00000	jr	r31
  438  000014e8  54000000	nop
  439  000014ec          	.endproc _Putchar
  441  000014ec          	.proc _Printf
  442  000014ec          	.global _Printf
  443  000014ec          	_Printf:
  444  000014ec  44000201	trap	#0x201
  445  000014f0  4be00000	jr	r31
  446  000014f4  54000000	nop
  447  000014f8          	.endproc _Printf
  449  000014f8          	.proc _getpid
  450  000014f8          	.global _getpid
  451  000014f8          	_getpid:
  452  000014f8  44000431	trap	#0x431
  453  000014fc  4be00000	jr	r31
  454  00001500  54000000	nop
  455  00001504          	.endproc _getpid
  457  00001504          	.proc _process_create
  458  00001504          	.global _process_create
  459  00001504          	_process_create:
  460  00001504  44000432	trap	#0x432
  461  00001508  4be00000	jr	r31
  462  0000150c  54000000	nop
  463  00001510          	.endproc _process_create
  465  00001510          	.proc _shmget
  466  00001510          	.global _shmget
  467  00001510          	_shmget:
  468  00001510  44000440	trap	#0x440
  469  00001514  4be00000	jr	r31
  470  00001518  54000000	nop
  471  0000151c          	.endproc _shmget
  473  0000151c          	.proc _shmat
  474  0000151c          	.global _shmat
  475  0000151c          	_shmat:
  476  0000151c  44000441	trap	#0x441
  477  00001520  4be00000	jr	r31
  478  00001524  54000000	nop
  479  00001528          	.endproc _shmat
  481  00001528          	.proc _sem_create
  482  00001528          	.global _sem_create
  483  00001528          	_sem_create:
  484  00001528  44000450	trap	#0x450
  485  0000152c  4be00000	jr	r31
  486  00001530  54000000	nop
  487  00001534          	.endproc _sem_create
  489  00001534          	.proc _sem_wait
  490  00001534          	.global _sem_wait
  491  00001534          	_sem_wait:
  492  00001534  44000451	trap	#0x451
  493  00001538  4be00000	jr	r31
  494  0000153c  54000000	nop
  495  00001540          	.endproc _sem_wait
  497  00001540          	.proc _sem_signal
  498  00001540          	.global _sem_signal
  499  00001540          	_sem_signal:
  500  00001540  44000452	trap	#0x452
  501  00001544  4be00000	jr	r31
  502  00001548  54000000	nop
  503  0000154c          	.endproc _sem_signal
  505  0000154c          	.proc _lock_create
  506  0000154c          	.global _lock_create
  507  0000154c          	_lock_create:
  508  0000154c  44000453	trap	#0x453
  509  00001550  4be00000	jr	r31
  510  00001554  54000000	nop
  511  00001558          	.endproc _lock_create
  513  00001558          	.proc _lock_acquire
  514  00001558          	.global _lock_acquire
  515  00001558          	_lock_acquire:
  516  00001558  44000454	trap	#0x454
  517  0000155c  4be00000	jr	r31
  518  00001560  54000000	nop
  519  00001564          	.endproc _lock_acquire
  521  00001564          	.proc _lock_release
  522  00001564          	.global _lock_release
  523  00001564          	_lock_release:
  524  00001564  44000455	trap	#0x455
  525  00001568  4be00000	jr	r31
  526  0000156c  54000000	nop
  527  00001570          	.endproc _lock_release
  529  00001570          	.proc _cond_create
  530  00001570          	.global _cond_create
  531  00001570          	_cond_create:
  532  00001570  44000456	trap	#0x456
  533  00001574  4be00000	jr	r31
  534  00001578  54000000	nop
  535  0000157c          	.endproc _cond_create
  537  0000157c          	.proc _cond_wait
  538  0000157c          	.global _cond_wait
  539  0000157c          	_cond_wait:
  540  0000157c  44000457	trap	#0x457
  541  00001580  4be00000	jr	r31
  542  00001584  54000000	nop
  543  00001588          	.endproc _cond_wait
  545  00001588          	.proc _cond_signal
  546  00001588          	.global _cond_signal
  547  00001588          	_cond_signal:
  548  00001588  44000458	trap	#0x458
  549  0000158c  4be00000	jr	r31
  550  00001590  54000000	nop
  551  00001594          	.endproc _cond_signal
  553  00001594          	.proc _cond_broadcast
  554  00001594          	.global _cond_broadcast
  555  00001594          	_cond_broadcast:
  556  00001594  44000455	trap	#0x455
  557  00001598  4be00000	jr	r31
  558  0000159c  54000000	nop
  559  000015a0          	.endproc _cond_broadcast
  561  000015a0          	.proc _Exit
  562  000015a0          	.global _Exit
  563  000015a0          	_Exit:
  564  000015a0  44000500	trap	#0x500
  565  000015a4  4be00000	jr	r31
  566  000015a8  54000000	nop
  567  000015ac          	.endproc _Exit
  568                      ; Compiled by GCC
  570  000015ac          	.align 2
  571  000015ac          	.proc _isspace
  572  000015ac          	.global _isspace
  573  000015ac          	_isspace:
  574                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  575  000015ac  afbefffc	sw	-4(r29),r30; push fp
  576  000015b0  001df020	add	r30,r0,r29; fp = sp
  577  000015b4  afbffff8	sw	-8(r29),r31; push ret addr
  578  000015b8  2fbd0018	subui	r29,r29,#24; alloc local storage
  579  000015bc  afa20000	sw	0(r29),r2
  580  000015c0  afa30004	sw	4(r29),r3
  581  000015c4  afa40008	sw	8(r29),r4
  582  000015c8  83c20003	lb	r2,3(r30)
  583  000015cc  20010000	addi	r1,r0,#0
  584  000015d0  304300ff	andi	r3,r2,#0x00ff
  585  000015d4  60640020	seqi	r4,r3,#32
  586  000015d8  1480002c	bnez	r4,L3_LF2
  587  000015dc  54000000	nop; delay slot nop
  588  000015e0  304300ff	andi	r3,r2,#0x00ff
  589  000015e4  60640009	seqi	r4,r3,#9
  590  000015e8  1480001c	bnez	r4,L3_LF2
  591  000015ec  54000000	nop; delay slot nop
  592  000015f0  304300ff	andi	r3,r2,#0x00ff
  593  000015f4  6064000a	seqi	r4,r3,#10
  594  000015f8  1480000c	bnez	r4,L3_LF2
  595  000015fc  54000000	nop; delay slot nop
  596  00001600  08000008	j	L2_LF2
  597  00001604  54000000	nop; delay slot nop
  598  00001608          	L3_LF2:
  599  00001608  20010001	addi	r1,r0,#1
  600  0000160c          	L2_LF2:
  601  0000160c  08000004	j	L1_LF2
  602  00001610  54000000	nop; delay slot nop
  603  00001614          	L1_LF2:
  604  00001614  8fa20000	lw	r2,0(r29)
  605  00001618  8fa30004	lw	r3,4(r29)
  606  0000161c  8fa40008	lw	r4,8(r29)
  607  00001620  8fdffff8	lw	r31,-8(r30)
  608  00001624  001ee820	add	r29,r0,r30
  609  00001628  8fdefffc	lw	r30,-4(r30)
  610  0000162c  4be00000	jr	r31
  611  00001630  54000000	nop
  612  00001634          	.endproc _isspace
  613  00001634          	.align 2
  614  00001634          	.proc _isxdigit
  615  00001634          	.global _isxdigit
  616  00001634          	_isxdigit:
  617                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  618  00001634  afbefffc	sw	-4(r29),r30; push fp
  619  00001638  001df020	add	r30,r0,r29; fp = sp
  620  0000163c  afbffff8	sw	-8(r29),r31; push ret addr
  621  00001640  2fbd0018	subui	r29,r29,#24; alloc local storage
  622  00001644  afa20000	sw	0(r29),r2
  623  00001648  afa30004	sw	4(r29),r3
  624  0000164c  afa40008	sw	8(r29),r4
  625  00001650  83c20003	lb	r2,3(r30)
  626  00001654  20010000	addi	r1,r0,#0
  627  00001658  304300ff	andi	r3,r2,#0x00ff
  628  0000165c  6c64002f	sgtui	r4,r3,#47
  629  00001660  1080001c	beqz	r4,L7_LF2
  630  00001664  54000000	nop; delay slot nop
  631  00001668  304300ff	andi	r3,r2,#0x00ff
  632  0000166c  70640039	sleui	r4,r3,#57
  633  00001670  1480005c	bnez	r4,L6_LF2
  634  00001674  54000000	nop; delay slot nop
  635  00001678  08000004	j	L7_LF2
  636  0000167c  54000000	nop; delay slot nop
  637  00001680          	L7_LF2:
  638  00001680  304300ff	andi	r3,r2,#0x00ff
  639  00001684  6c640060	sgtui	r4,r3,#96
  640  00001688  1080001c	beqz	r4,L8_LF2
  641  0000168c  54000000	nop; delay slot nop
  642  00001690  304300ff	andi	r3,r2,#0x00ff
  643  00001694  70640066	sleui	r4,r3,#102
  644  00001698  14800034	bnez	r4,L6_LF2
  645  0000169c  54000000	nop; delay slot nop
  646  000016a0  08000004	j	L8_LF2
  647  000016a4  54000000	nop; delay slot nop
  648  000016a8          	L8_LF2:
  649  000016a8  304300ff	andi	r3,r2,#0x00ff
  650  000016ac  6c640040	sgtui	r4,r3,#64
  651  000016b0  10800020	beqz	r4,L5_LF2
  652  000016b4  54000000	nop; delay slot nop
  653  000016b8  304300ff	andi	r3,r2,#0x00ff
  654  000016bc  70640041	sleui	r4,r3,#65
  655  000016c0  1480000c	bnez	r4,L6_LF2
  656  000016c4  54000000	nop; delay slot nop
  657  000016c8  08000008	j	L5_LF2
  658  000016cc  54000000	nop; delay slot nop
  659  000016d0          	L6_LF2:
  660  000016d0  20010001	addi	r1,r0,#1
  661  000016d4          	L5_LF2:
  662  000016d4  08000004	j	L4_LF2
  663  000016d8  54000000	nop; delay slot nop
  664  000016dc          	L4_LF2:
  665  000016dc  8fa20000	lw	r2,0(r29)
  666  000016e0  8fa30004	lw	r3,4(r29)
  667  000016e4  8fa40008	lw	r4,8(r29)
  668  000016e8  8fdffff8	lw	r31,-8(r30)
  669  000016ec  001ee820	add	r29,r0,r30
  670  000016f0  8fdefffc	lw	r30,-4(r30)
  671  000016f4  4be00000	jr	r31
  672  000016f8  54000000	nop
  673  000016fc          	.endproc _isxdigit
  674  000016fc          	.align 2
  675  000016fc          	.proc _dstrcpy
  676  000016fc          	.global _dstrcpy
  677  000016fc          	_dstrcpy:
  678                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  679  000016fc  afbefffc	sw	-4(r29),r30; push fp
  680  00001700  001df020	add	r30,r0,r29; fp = sp
  681  00001704  afbffff8	sw	-8(r29),r31; push ret addr
  682  00001708  2fbd0018	subui	r29,r29,#24; alloc local storage
  683  0000170c  afa20000	sw	0(r29),r2
  684  00001710  afa30004	sw	4(r29),r3
  685  00001714  8fc10000	lw	r1,(r30)
  686  00001718  afc1fff4	sw	-12(r30),r1
  687  0000171c          	L10_LF2:
  688  0000171c  8fc10000	lw	r1,(r30)
  689  00001720  20220001	addi	r2,r1,#1
  690  00001724  afc20000	sw	(r30),r2
  691  00001728  8fc20004	lw	r2,4(r30)
  692  0000172c  20430001	addi	r3,r2,#1
  693  00001730  afc30004	sw	4(r30),r3
  694  00001734  80420000	lb	r2,(r2)
  695  00001738  a0220000	sb	(r1),r2
  696  0000173c  a3c2fff3	sb	-13(r30),r2
  697  00001740          	L12_LF2:
  698  00001740  93c1fff3	lbu	r1,-13(r30)
  699  00001744  64220000	snei	r2,r1,#0
  700  00001748  1440000c	bnez	r2,L13_LF2
  701  0000174c  54000000	nop; delay slot nop
  702  00001750  0800000c	j	L11_LF2
  703  00001754  54000000	nop; delay slot nop
  704  00001758          	L13_LF2:
  705  00001758  0bffffc0	j	L10_LF2
  706  0000175c  54000000	nop; delay slot nop
  707  00001760          	L11_LF2:
  708  00001760  8fc1fff4	lw	r1,-12(r30)
  709  00001764  08000004	j	L9_LF2
  710  00001768  54000000	nop; delay slot nop
  711  0000176c          	L9_LF2:
  712  0000176c  8fa20000	lw	r2,0(r29)
  713  00001770  8fa30004	lw	r3,4(r29)
  714  00001774  8fdffff8	lw	r31,-8(r30)
  715  00001778  001ee820	add	r29,r0,r30
  716  0000177c  8fdefffc	lw	r30,-4(r30)
  717  00001780  4be00000	jr	r31
  718  00001784  54000000	nop
  719  00001788          	.endproc _dstrcpy
  720  00001788          	.align 2
  721  00001788          	.proc _dstrncpy
  722  00001788          	.global _dstrncpy
  723  00001788          	_dstrncpy:
  724                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  725  00001788  afbefffc	sw	-4(r29),r30; push fp
  726  0000178c  001df020	add	r30,r0,r29; fp = sp
  727  00001790  afbffff8	sw	-8(r29),r31; push ret addr
  728  00001794  2fbd0018	subui	r29,r29,#24; alloc local storage
  729  00001798  afa20000	sw	0(r29),r2
  730  0000179c  afa30004	sw	4(r29),r3
  731  000017a0  8fc10000	lw	r1,(r30)
  732  000017a4  afc1fff4	sw	-12(r30),r1
  733  000017a8          	L15_LF2:
  734  000017a8  8fc10008	lw	r1,8(r30)
  735  000017ac  2022ffff	addi	r2,r1,#-1
  736  000017b0  afc20008	sw	8(r30),r2
  737  000017b4  70210000	slei	r1,r1,#0
  738  000017b8  1020000c	beqz	r1,L18_LF2
  739  000017bc  54000000	nop; delay slot nop
  740  000017c0  08000048	j	L16_LF2
  741  000017c4  54000000	nop; delay slot nop
  742  000017c8          	L18_LF2:
  743  000017c8  8fc10000	lw	r1,(r30)
  744  000017cc  20220001	addi	r2,r1,#1
  745  000017d0  afc20000	sw	(r30),r2
  746  000017d4  8fc20004	lw	r2,4(r30)
  747  000017d8  20430001	addi	r3,r2,#1
  748  000017dc  afc30004	sw	4(r30),r3
  749  000017e0  80420000	lb	r2,(r2)
  750  000017e4  a0220000	sb	(r1),r2
  751  000017e8  a3c2fff3	sb	-13(r30),r2
  752  000017ec          	L17_LF2:
  753  000017ec  93c1fff3	lbu	r1,-13(r30)
  754  000017f0  64220000	snei	r2,r1,#0
  755  000017f4  1440000c	bnez	r2,L19_LF2
  756  000017f8  54000000	nop; delay slot nop
  757  000017fc  0800000c	j	L16_LF2
  758  00001800  54000000	nop; delay slot nop
  759  00001804          	L19_LF2:
  760  00001804  0bffffa0	j	L15_LF2
  761  00001808  54000000	nop; delay slot nop
  762  0000180c          	L16_LF2:
  763  0000180c  8fc1fff4	lw	r1,-12(r30)
  764  00001810  08000004	j	L14_LF2
  765  00001814  54000000	nop; delay slot nop
  766  00001818          	L14_LF2:
  767  00001818  8fa20000	lw	r2,0(r29)
  768  0000181c  8fa30004	lw	r3,4(r29)
  769  00001820  8fdffff8	lw	r31,-8(r30)
  770  00001824  001ee820	add	r29,r0,r30
  771  00001828  8fdefffc	lw	r30,-4(r30)
  772  0000182c  4be00000	jr	r31
  773  00001830  54000000	nop
  774  00001834          	.endproc _dstrncpy
  775  00001834          	.align 2
  776  00001834          	.proc _dstrcat
  777  00001834          	.global _dstrcat
  778  00001834          	_dstrcat:
  779                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  780  00001834  afbefffc	sw	-4(r29),r30; push fp
  781  00001838  001df020	add	r30,r0,r29; fp = sp
  782  0000183c  afbffff8	sw	-8(r29),r31; push ret addr
  783  00001840  2fbd0018	subui	r29,r29,#24; alloc local storage
  784  00001844  afa20000	sw	0(r29),r2
  785  00001848  8fc10000	lw	r1,(r30)
  786  0000184c  afc1fff4	sw	-12(r30),r1
  787  00001850          	L21_LF2:
  788  00001850  8fc10000	lw	r1,(r30)
  789  00001854  90220000	lbu	r2,(r1)
  790  00001858  64410000	snei	r1,r2,#0
  791  0000185c  1420000c	bnez	r1,L23_LF2
  792  00001860  54000000	nop; delay slot nop
  793  00001864  0800001c	j	L22_LF2
  794  00001868  54000000	nop; delay slot nop
  795  0000186c          	L23_LF2:
  796  0000186c  8fc20000	lw	r2,(r30)
  797  00001870  20410001	addi	r1,r2,#1
  798  00001874  00011020	add	r2,r0,r1
  799  00001878  afc20000	sw	(r30),r2
  800  0000187c  0bffffd0	j	L21_LF2
  801  00001880  54000000	nop; delay slot nop
  802  00001884          	L22_LF2:
  803  00001884  23bdfff8	addi	r29,r29,#-8
  804  00001888  001d0820	add	r1,r0,r29
  805  0000188c  8fc20000	lw	r2,(r30)
  806  00001890  ac220000	sw	(r1),r2
  807  00001894  8fc20004	lw	r2,4(r30)
  808  00001898  ac220004	sw	4(r1),r2
  809  0000189c  0ffffe5c	jal	_dstrcpy
  810  000018a0  54000000	nop; delay slot nop
  811  000018a4  23bd0008	addi	r29,r29,#8
  812  000018a8  8fc1fff4	lw	r1,-12(r30)
  813  000018ac  08000004	j	L20_LF2
  814  000018b0  54000000	nop; delay slot nop
  815  000018b4          	L20_LF2:
  816  000018b4  8fa20000	lw	r2,0(r29)
  817  000018b8  8fdffff8	lw	r31,-8(r30)
  818  000018bc  001ee820	add	r29,r0,r30
  819  000018c0  8fdefffc	lw	r30,-4(r30)
  820  000018c4  4be00000	jr	r31
  821  000018c8  54000000	nop
  822  000018cc          	.endproc _dstrcat
  823  000018cc          	.align 2
  824  000018cc          	.proc _dstrncmp
  825  000018cc          	.global _dstrncmp
  826  000018cc          	_dstrncmp:
  827                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  828  000018cc  afbefffc	sw	-4(r29),r30; push fp
  829  000018d0  001df020	add	r30,r0,r29; fp = sp
  830  000018d4  afbffff8	sw	-8(r29),r31; push ret addr
  831  000018d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  832  000018dc  afa20000	sw	0(r29),r2
  833  000018e0  afa30004	sw	4(r29),r3
  834  000018e4  54000000	nop
  835  000018e8  20010000	addi	r1,r0,#0
  836  000018ec  afc1fff4	sw	-12(r30),r1
  837  000018f0          	L25_LF2:
  838  000018f0  8fc1fff4	lw	r1,-12(r30)
  839  000018f4  8fc20008	lw	r2,8(r30)
  840  000018f8  0022082a	slt	r1,r1,r2
  841  000018fc  1420000c	bnez	r1,L28_LF2
  842  00001900  54000000	nop; delay slot nop
  843  00001904  08000088	j	L26_LF2
  844  00001908  54000000	nop; delay slot nop
  845  0000190c          	L28_LF2:
  846  0000190c  8fc10004	lw	r1,4(r30)
  847  00001910  90220000	lbu	r2,(r1)
  848  00001914  64410000	snei	r1,r2,#0
  849  00001918  14200018	bnez	r1,L29_LF2
  850  0000191c  54000000	nop; delay slot nop
  851  00001920  20010000	addi	r1,r0,#0
  852  00001924  080000d8	j	L24_LF2
  853  00001928  54000000	nop; delay slot nop
  854  0000192c  08000028	j	L30_LF2
  855  00001930  54000000	nop; delay slot nop
  856  00001934          	L29_LF2:
  857  00001934  8fc10000	lw	r1,(r30)
  858  00001938  8fc20004	lw	r2,4(r30)
  859  0000193c  90210000	lbu	r1,(r1)
  860  00001940  90420000	lbu	r2,(r2)
  861  00001944  00220829	sne	r1,r1,r2
  862  00001948  1020000c	beqz	r1,L30_LF2
  863  0000194c  54000000	nop; delay slot nop
  864  00001950  0800003c	j	L26_LF2
  865  00001954  54000000	nop; delay slot nop
  866  00001958          	L31_LF2:
  867  00001958          	L30_LF2:
  868  00001958  8fc20000	lw	r2,(r30)
  869  0000195c  20410001	addi	r1,r2,#1
  870  00001960  00011020	add	r2,r0,r1
  871  00001964  afc20000	sw	(r30),r2
  872  00001968  8fc20004	lw	r2,4(r30)
  873  0000196c  20410001	addi	r1,r2,#1
  874  00001970  00011020	add	r2,r0,r1
  875  00001974  afc20004	sw	4(r30),r2
  876  00001978          	L27_LF2:
  877  00001978  8fc2fff4	lw	r2,-12(r30)
  878  0000197c  20410001	addi	r1,r2,#1
  879  00001980  00011020	add	r2,r0,r1
  880  00001984  afc2fff4	sw	-12(r30),r2
  881  00001988  0bffff64	j	L25_LF2
  882  0000198c  54000000	nop; delay slot nop
  883  00001990          	L26_LF2:
  884  00001990  8fc1fff4	lw	r1,-12(r30)
  885  00001994  8fc20008	lw	r2,8(r30)
  886  00001998  00220828	seq	r1,r1,r2
  887  0000199c  10200018	beqz	r1,L32_LF2
  888  000019a0  54000000	nop; delay slot nop
  889  000019a4  20010000	addi	r1,r0,#0
  890  000019a8  08000054	j	L24_LF2
  891  000019ac  54000000	nop; delay slot nop
  892  000019b0  0800004c	j	L33_LF2
  893  000019b4  54000000	nop; delay slot nop
  894  000019b8          	L32_LF2:
  895  000019b8  8fc20000	lw	r2,(r30)
  896  000019bc  90410000	lbu	r1,(r2)
  897  000019c0  8fc20004	lw	r2,4(r30)
  898  000019c4  90430000	lbu	r3,(r2)
  899  000019c8  00230822	sub	r1,r1,r3
  900  000019cc  74220000	sgei	r2,r1,#0
  901  000019d0  10400020	beqz	r2,L34_LF2
  902  000019d4  54000000	nop; delay slot nop
  903  000019d8  8fc10000	lw	r1,(r30)
  904  000019dc  8fc20004	lw	r2,4(r30)
  905  000019e0  90210000	lbu	r1,(r1)
  906  000019e4  90420000	lbu	r2,(r2)
  907  000019e8  00220829	sne	r1,r1,r2
  908  000019ec  08000008	j	L35_LF2
  909  000019f0  54000000	nop; delay slot nop
  910  000019f4          	L34_LF2:
  911  000019f4  2001ffff	addi	r1,r0,#-1
  912  000019f8          	L35_LF2:
  913  000019f8  08000004	j	L24_LF2
  914  000019fc  54000000	nop; delay slot nop
  915  00001a00          	L33_LF2:
  916  00001a00          	L24_LF2:
  917  00001a00  8fa20000	lw	r2,0(r29)
  918  00001a04  8fa30004	lw	r3,4(r29)
  919  00001a08  8fdffff8	lw	r31,-8(r30)
  920  00001a0c  001ee820	add	r29,r0,r30
  921  00001a10  8fdefffc	lw	r30,-4(r30)
  922  00001a14  4be00000	jr	r31
  923  00001a18  54000000	nop
  924  00001a1c          	.endproc _dstrncmp
  925  00001a1c          	.align 2
  926  00001a1c          	.proc _dstrlen
  927  00001a1c          	.global _dstrlen
  928  00001a1c          	_dstrlen:
  929                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  930  00001a1c  afbefffc	sw	-4(r29),r30; push fp
  931  00001a20  001df020	add	r30,r0,r29; fp = sp
  932  00001a24  afbffff8	sw	-8(r29),r31; push ret addr
  933  00001a28  2fbd0018	subui	r29,r29,#24; alloc local storage
  934  00001a2c  afa20000	sw	0(r29),r2
  935  00001a30  20010000	addi	r1,r0,#0
  936  00001a34  afc1fff4	sw	-12(r30),r1
  937  00001a38          	L37_LF2:
  938  00001a38  8fc10000	lw	r1,(r30)
  939  00001a3c  20220001	addi	r2,r1,#1
  940  00001a40  afc20000	sw	(r30),r2
  941  00001a44  90210000	lbu	r1,(r1)
  942  00001a48  64220000	snei	r2,r1,#0
  943  00001a4c  1440000c	bnez	r2,L39_LF2
  944  00001a50  54000000	nop; delay slot nop
  945  00001a54  0800001c	j	L38_LF2
  946  00001a58  54000000	nop; delay slot nop
  947  00001a5c          	L39_LF2:
  948  00001a5c  8fc2fff4	lw	r2,-12(r30)
  949  00001a60  20410001	addi	r1,r2,#1
  950  00001a64  00011020	add	r2,r0,r1
  951  00001a68  afc2fff4	sw	-12(r30),r2
  952  00001a6c  0bffffc8	j	L37_LF2
  953  00001a70  54000000	nop; delay slot nop
  954  00001a74          	L38_LF2:
  955  00001a74  8fc1fff4	lw	r1,-12(r30)
  956  00001a78  08000004	j	L36_LF2
  957  00001a7c  54000000	nop; delay slot nop
  958  00001a80          	L36_LF2:
  959  00001a80  8fa20000	lw	r2,0(r29)
  960  00001a84  8fdffff8	lw	r31,-8(r30)
  961  00001a88  001ee820	add	r29,r0,r30
  962  00001a8c  8fdefffc	lw	r30,-4(r30)
  963  00001a90  4be00000	jr	r31
  964  00001a94  54000000	nop
  965  00001a98          	.endproc _dstrlen
  966  00001a98          	.align 2
  967  00001a98          	.proc _dstrstr
  968  00001a98          	.global _dstrstr
  969  00001a98          	_dstrstr:
  970                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  971  00001a98  afbefffc	sw	-4(r29),r30; push fp
  972  00001a9c  001df020	add	r30,r0,r29; fp = sp
  973  00001aa0  afbffff8	sw	-8(r29),r31; push ret addr
  974  00001aa4  2fbd0018	subui	r29,r29,#24; alloc local storage
  975  00001aa8  afa20000	sw	0(r29),r2
  976  00001aac  23bdfff8	addi	r29,r29,#-8
  977  00001ab0  001d0820	add	r1,r0,r29
  978  00001ab4  8fc20004	lw	r2,4(r30)
  979  00001ab8  ac220000	sw	(r1),r2
  980  00001abc  0fffff5c	jal	_dstrlen
  981  00001ac0  54000000	nop; delay slot nop
  982  00001ac4  23bd0008	addi	r29,r29,#8
  983  00001ac8  afc1fff4	sw	-12(r30),r1
  984  00001acc          	L41_LF2:
  985  00001acc  8fc10000	lw	r1,(r30)
  986  00001ad0  90220000	lbu	r2,(r1)
  987  00001ad4  64410000	snei	r1,r2,#0
  988  00001ad8  1420000c	bnez	r1,L43_LF2
  989  00001adc  54000000	nop; delay slot nop
  990  00001ae0  08000060	j	L42_LF2
  991  00001ae4  54000000	nop; delay slot nop
  992  00001ae8          	L43_LF2:
  993  00001ae8  23bdfff0	addi	r29,r29,#-16
  994  00001aec  001d0820	add	r1,r0,r29
  995  00001af0  8fc20000	lw	r2,(r30)
  996  00001af4  ac220000	sw	(r1),r2
  997  00001af8  8fc20004	lw	r2,4(r30)
  998  00001afc  ac220004	sw	4(r1),r2
  999  00001b00  8fc2fff4	lw	r2,-12(r30)
 1000  00001b04  ac220008	sw	8(r1),r2
 1001  00001b08  0ffffdc0	jal	_dstrncmp
 1002  00001b0c  54000000	nop; delay slot nop
 1003  00001b10  23bd0010	addi	r29,r29,#16
 1004  00001b14  64220000	snei	r2,r1,#0
 1005  00001b18  14400010	bnez	r2,L44_LF2
 1006  00001b1c  54000000	nop; delay slot nop
 1007  00001b20  8fc10000	lw	r1,(r30)
 1008  00001b24  08000028	j	L40_LF2
 1009  00001b28  54000000	nop; delay slot nop
 1010  00001b2c          	L44_LF2:
 1011  00001b2c  8fc20000	lw	r2,(r30)
 1012  00001b30  20410001	addi	r1,r2,#1
 1013  00001b34  00011020	add	r2,r0,r1
 1014  00001b38  afc20000	sw	(r30),r2
 1015  00001b3c  0bffff8c	j	L41_LF2
 1016  00001b40  54000000	nop; delay slot nop
 1017  00001b44          	L42_LF2:
 1018  00001b44  20010000	addi	r1,r0,#0
 1019  00001b48  08000004	j	L40_LF2
 1020  00001b4c  54000000	nop; delay slot nop
 1021  00001b50          	L40_LF2:
 1022  00001b50  8fa20000	lw	r2,0(r29)
 1023  00001b54  8fdffff8	lw	r31,-8(r30)
 1024  00001b58  001ee820	add	r29,r0,r30
 1025  00001b5c  8fdefffc	lw	r30,-4(r30)
 1026  00001b60  4be00000	jr	r31
 1027  00001b64  54000000	nop
 1028  00001b68          	.endproc _dstrstr
 1029  00001b68          	.align 2
 1030  00001b68          	.proc _dmindex
 1031  00001b68          	.global _dmindex
 1032  00001b68          	_dmindex:
 1033                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1034  00001b68  afbefffc	sw	-4(r29),r30; push fp
 1035  00001b6c  001df020	add	r30,r0,r29; fp = sp
 1036  00001b70  afbffff8	sw	-8(r29),r31; push ret addr
 1037  00001b74  2fbd0018	subui	r29,r29,#24; alloc local storage
 1038  00001b78  afa20000	sw	0(r29),r2
 1039  00001b7c  54000000	nop
 1040  00001b80          	L46_LF2:
 1041  00001b80  8fc10000	lw	r1,(r30)
 1042  00001b84  90220000	lbu	r2,(r1)
 1043  00001b88  64410000	snei	r1,r2,#0
 1044  00001b8c  1420000c	bnez	r1,L48_LF2
 1045  00001b90  54000000	nop; delay slot nop
 1046  00001b94  08000070	j	L47_LF2
 1047  00001b98  54000000	nop; delay slot nop
 1048  00001b9c          	L48_LF2:
 1049  00001b9c  8fc10004	lw	r1,4(r30)
 1050  00001ba0  afc1fff4	sw	-12(r30),r1
 1051  00001ba4          	L49_LF2:
 1052  00001ba4  8fc1fff4	lw	r1,-12(r30)
 1053  00001ba8  90220000	lbu	r2,(r1)
 1054  00001bac  64410000	snei	r1,r2,#0
 1055  00001bb0  1420000c	bnez	r1,L52_LF2
 1056  00001bb4  54000000	nop; delay slot nop
 1057  00001bb8  08000044	j	L50_LF2
 1058  00001bbc  54000000	nop; delay slot nop
 1059  00001bc0          	L52_LF2:
 1060  00001bc0  8fc10000	lw	r1,(r30)
 1061  00001bc4  8fc2fff4	lw	r2,-12(r30)
 1062  00001bc8  90210000	lbu	r1,(r1)
 1063  00001bcc  90420000	lbu	r2,(r2)
 1064  00001bd0  00220828	seq	r1,r1,r2
 1065  00001bd4  10200010	beqz	r1,L51_LF2
 1066  00001bd8  54000000	nop; delay slot nop
 1067  00001bdc  8fc10000	lw	r1,(r30)
 1068  00001be0  08000030	j	L45_LF2
 1069  00001be4  54000000	nop; delay slot nop
 1070  00001be8          	L53_LF2:
 1071  00001be8          	L51_LF2:
 1072  00001be8  8fc2fff4	lw	r2,-12(r30)
 1073  00001bec  20410001	addi	r1,r2,#1
 1074  00001bf0  00011020	add	r2,r0,r1
 1075  00001bf4  afc2fff4	sw	-12(r30),r2
 1076  00001bf8  0bffffa8	j	L49_LF2
 1077  00001bfc  54000000	nop; delay slot nop
 1078  00001c00          	L50_LF2:
 1079  00001c00  0bffff7c	j	L46_LF2
 1080  00001c04  54000000	nop; delay slot nop
 1081  00001c08          	L47_LF2:
 1082  00001c08  20010000	addi	r1,r0,#0
 1083  00001c0c  08000004	j	L45_LF2
 1084  00001c10  54000000	nop; delay slot nop
 1085  00001c14          	L45_LF2:
 1086  00001c14  8fa20000	lw	r2,0(r29)
 1087  00001c18  8fdffff8	lw	r31,-8(r30)
 1088  00001c1c  001ee820	add	r29,r0,r30
 1089  00001c20  8fdefffc	lw	r30,-4(r30)
 1090  00001c24  4be00000	jr	r31
 1091  00001c28  54000000	nop
 1092  00001c2c          	.endproc _dmindex
 1093  00001c2c          	.align 2
 1094  00001c2c          	.proc _dindex
 1095  00001c2c          	.global _dindex
 1096  00001c2c          	_dindex:
 1097                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1098  00001c2c  afbefffc	sw	-4(r29),r30; push fp
 1099  00001c30  001df020	add	r30,r0,r29; fp = sp
 1100  00001c34  afbffff8	sw	-8(r29),r31; push ret addr
 1101  00001c38  2fbd0010	subui	r29,r29,#16; alloc local storage
 1102  00001c3c  afa20000	sw	0(r29),r2
 1103  00001c40  54000000	nop
 1104  00001c44          	L55_LF2:
 1105  00001c44  8fc10000	lw	r1,(r30)
 1106  00001c48  90220000	lbu	r2,(r1)
 1107  00001c4c  64410000	snei	r1,r2,#0
 1108  00001c50  1420000c	bnez	r1,L57_LF2
 1109  00001c54  54000000	nop; delay slot nop
 1110  00001c58  08000040	j	L56_LF2
 1111  00001c5c  54000000	nop; delay slot nop
 1112  00001c60          	L57_LF2:
 1113  00001c60  8fc10000	lw	r1,(r30)
 1114  00001c64  90220000	lbu	r2,(r1)
 1115  00001c68  8fc10004	lw	r1,4(r30)
 1116  00001c6c  00411028	seq	r2,r2,r1
 1117  00001c70  10400010	beqz	r2,L58_LF2
 1118  00001c74  54000000	nop; delay slot nop
 1119  00001c78  8fc10000	lw	r1,(r30)
 1120  00001c7c  08000028	j	L54_LF2
 1121  00001c80  54000000	nop; delay slot nop
 1122  00001c84          	L58_LF2:
 1123  00001c84  8fc20000	lw	r2,(r30)
 1124  00001c88  20410001	addi	r1,r2,#1
 1125  00001c8c  00011020	add	r2,r0,r1
 1126  00001c90  afc20000	sw	(r30),r2
 1127  00001c94  0bffffac	j	L55_LF2
 1128  00001c98  54000000	nop; delay slot nop
 1129  00001c9c          	L56_LF2:
 1130  00001c9c  20010000	addi	r1,r0,#0
 1131  00001ca0  08000004	j	L54_LF2
 1132  00001ca4  54000000	nop; delay slot nop
 1133  00001ca8          	L54_LF2:
 1134  00001ca8  8fa20000	lw	r2,0(r29)
 1135  00001cac  8fdffff8	lw	r31,-8(r30)
 1136  00001cb0  001ee820	add	r29,r0,r30
 1137  00001cb4  8fdefffc	lw	r30,-4(r30)
 1138  00001cb8  4be00000	jr	r31
 1139  00001cbc  54000000	nop
 1140  00001cc0          	.endproc _dindex
 1141  00001cc0          	.align 2
 1142  00001cc0          	.proc _ditoa
 1143  00001cc0          	.global _ditoa
 1144  00001cc0          	_ditoa:
 1145                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1146  00001cc0  afbefffc	sw	-4(r29),r30; push fp
 1147  00001cc4  001df020	add	r30,r0,r29; fp = sp
 1148  00001cc8  afbffff8	sw	-8(r29),r31; push ret addr
 1149  00001ccc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1150  00001cd0  afa20000	sw	0(r29),r2
 1151  00001cd4  afa30004	sw	4(r29),r3
 1152  00001cd8  8fc10000	lw	r1,(r30)
 1153  00001cdc  68220000	slti	r2,r1,#0
 1154  00001ce0  1040002c	beqz	r2,L60_LF2
 1155  00001ce4  54000000	nop; delay slot nop
 1156  00001ce8  8fc10004	lw	r1,4(r30)
 1157  00001cec  20220001	addi	r2,r1,#1
 1158  00001cf0  afc20004	sw	4(r30),r2
 1159  00001cf4  2002002d	addi	r2,r0,(#0x2d)&0xff
 1160  00001cf8  a0220000	sb	(r1),r2
 1161  00001cfc  8fc10000	lw	r1,(r30)
 1162  00001d00  00011022	sub	r2,r0,r1
 1163  00001d04  afc20000	sw	(r30),r2
 1164  00001d08  08000118	j	L61_LF2
 1165  00001d0c  54000000	nop; delay slot nop
 1166  00001d10          	L60_LF2:
 1167  00001d10  8fc10000	lw	r1,(r30)
 1168  00001d14  64220000	snei	r2,r1,#0
 1169  00001d18  14400020	bnez	r2,L62_LF2
 1170  00001d1c  54000000	nop; delay slot nop
 1171  00001d20  8fc10004	lw	r1,4(r30)
 1172  00001d24  20220001	addi	r2,r1,#1
 1173  00001d28  afc20004	sw	4(r30),r2
 1174  00001d2c  20020030	addi	r2,r0,(#0x30)&0xff
 1175  00001d30  a0220000	sb	(r1),r2
 1176  00001d34  080000ec	j	L61_LF2
 1177  00001d38  54000000	nop; delay slot nop
 1178  00001d3c          	L62_LF2:
 1179  00001d3c  20010001	addi	r1,r0,#1
 1180  00001d40  afc1fff4	sw	-12(r30),r1
 1181  00001d44          	L64_LF2:
 1182  00001d44  8fc1fff4	lw	r1,-12(r30)
 1183  00001d48  8fc20000	lw	r2,(r30)
 1184  00001d4c  0022082c	sle	r1,r1,r2
 1185  00001d50  1420000c	bnez	r1,L66_LF2
 1186  00001d54  54000000	nop; delay slot nop
 1187  00001d58  08000024	j	L65_LF2
 1188  00001d5c  54000000	nop; delay slot nop
 1189  00001d60          	L67_LF2:
 1190  00001d60          	L66_LF2:
 1191  00001d60  8fc1fff4	lw	r1,-12(r30)
 1192  00001d64  00011820	add	r3,r0,r1
 1193  00001d68  50620002	slli	r2,r3,#0x2
 1194  00001d6c  00411020	add	r2,r2,r1
 1195  00001d70  50410001	slli	r1,r2,#0x1
 1196  00001d74  afc1fff4	sw	-12(r30),r1
 1197  00001d78  0bffffc8	j	L64_LF2
 1198  00001d7c  54000000	nop; delay slot nop
 1199  00001d80          	L65_LF2:
 1200  00001d80  54000000	nop
 1201  00001d84          	L68_LF2:
 1202  00001d84  8fc1fff4	lw	r1,-12(r30)
 1203  00001d88  2002000a	addi	r2,r0,#10
 1204  00001d8c  00200035	movi2fp	f0,r1
 1205  00001d90  00400835	movi2fp	f1,r2
 1206  00001d94  0401000f	div	f0,f0,f1
 1207  00001d98  00000834	movfp2i	r1,f0
 1208  00001d9c  afc1fff4	sw	-12(r30),r1
 1209  00001da0  8fc10004	lw	r1,4(r30)
 1210  00001da4  20220001	addi	r2,r1,#1
 1211  00001da8  afc20004	sw	4(r30),r2
 1212  00001dac  8fc20000	lw	r2,(r30)
 1213  00001db0  8fc3fff4	lw	r3,-12(r30)
 1214  00001db4  00400035	movi2fp	f0,r2
 1215  00001db8  00600835	movi2fp	f1,r3
 1216  00001dbc  0401000f	div	f0,f0,f1
 1217  00001dc0  00001034	movfp2i	r2,f0
 1218  00001dc4  00021820	add	r3,r0,r2
 1219  00001dc8  20620030	addi	r2,r3,#48
 1220  00001dcc  a0220000	sb	(r1),r2
 1221  00001dd0  8fc10000	lw	r1,(r30)
 1222  00001dd4  8fc3fff4	lw	r3,-12(r30)
 1223  00001dd8  00200035	movi2fp	f0,r1
 1224  00001ddc  00600835	movi2fp	f1,r3
 1225  00001de0  0401000f	div	f0,f0,f1
 1226  00001de4  00001034	movfp2i	r2,f0
 1227  00001de8  8fc3fff4	lw	r3,-12(r30)
 1228  00001dec  00400035	movi2fp	f0,r2
 1229  00001df0  00600835	movi2fp	f1,r3
 1230  00001df4  0401000e	mult	f0,f0,f1
 1231  00001df8  00001034	movfp2i	r2,f0
 1232  00001dfc  00220822	sub	r1,r1,r2
 1233  00001e00  afc10000	sw	(r30),r1
 1234  00001e04          	L70_LF2:
 1235  00001e04  8fc1fff4	lw	r1,-12(r30)
 1236  00001e08  6c220001	sgti	r2,r1,#1
 1237  00001e0c  1440000c	bnez	r2,L71_LF2
 1238  00001e10  54000000	nop; delay slot nop
 1239  00001e14  0800000c	j	L61_LF2
 1240  00001e18  54000000	nop; delay slot nop
 1241  00001e1c          	L71_LF2:
 1242  00001e1c  0bffff64	j	L68_LF2
 1243  00001e20  54000000	nop; delay slot nop
 1244  00001e24          	L69_LF2:
 1245  00001e24          	L63_LF2:
 1246  00001e24          	L61_LF2:
 1247  00001e24  8fc10004	lw	r1,4(r30)
 1248  00001e28  20020000	addi	r2,r0,(#0x0)&0xff
 1249  00001e2c  a0220000	sb	(r1),r2
 1250  00001e30          	L59_LF2:
 1251  00001e30  8fa20000	lw	r2,0(r29)
 1252  00001e34  8fa30004	lw	r3,4(r29)
 1253  00001e38  8fdffff8	lw	r31,-8(r30)
 1254  00001e3c  001ee820	add	r29,r0,r30
 1255  00001e40  8fdefffc	lw	r30,-4(r30)
 1256  00001e44  4be00000	jr	r31
 1257  00001e48  54000000	nop
 1258  00001e4c          	.endproc _ditoa
 1259  00001e4c          	.align 2
 1260  00001e4c          	.proc _dstrtol
 1261  00001e4c          	.global _dstrtol
 1262  00001e4c          	_dstrtol:
 1263                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1264  00001e4c  afbefffc	sw	-4(r29),r30; push fp
 1265  00001e50  001df020	add	r30,r0,r29; fp = sp
 1266  00001e54  afbffff8	sw	-8(r29),r31; push ret addr
 1267  00001e58  2fbd0020	subui	r29,r29,#32; alloc local storage
 1268  00001e5c  afa20000	sw	0(r29),r2
 1269  00001e60  20010000	addi	r1,r0,#0
 1270  00001e64  afc1fff4	sw	-12(r30),r1
 1271  00001e68          	L73_LF2:
 1272  00001e68  8fc10000	lw	r1,(r30)
 1273  00001e6c  90220000	lbu	r2,(r1)
 1274  00001e70  60410020	seqi	r1,r2,#32
 1275  00001e74  14200034	bnez	r1,L75_LF2
 1276  00001e78  54000000	nop; delay slot nop
 1277  00001e7c  8fc10000	lw	r1,(r30)
 1278  00001e80  90220000	lbu	r2,(r1)
 1279  00001e84  60410009	seqi	r1,r2,#9
 1280  00001e88  14200020	bnez	r1,L75_LF2
 1281  00001e8c  54000000	nop; delay slot nop
 1282  00001e90  8fc10000	lw	r1,(r30)
 1283  00001e94  90220000	lbu	r2,(r1)
 1284  00001e98  6041000a	seqi	r1,r2,#10
 1285  00001e9c  1420000c	bnez	r1,L75_LF2
 1286  00001ea0  54000000	nop; delay slot nop
 1287  00001ea4  0800001c	j	L74_LF2
 1288  00001ea8  54000000	nop; delay slot nop
 1289  00001eac          	L75_LF2:
 1290  00001eac  8fc20000	lw	r2,(r30)
 1291  00001eb0  20410001	addi	r1,r2,#1
 1292  00001eb4  00011020	add	r2,r0,r1
 1293  00001eb8  afc20000	sw	(r30),r2
 1294  00001ebc  0bffffa8	j	L73_LF2
 1295  00001ec0  54000000	nop; delay slot nop
 1296  00001ec4          	L74_LF2:
 1297  00001ec4  8fc10004	lw	r1,4(r30)
 1298  00001ec8  64220000	snei	r2,r1,#0
 1299  00001ecc  10400010	beqz	r2,L76_LF2
 1300  00001ed0  54000000	nop; delay slot nop
 1301  00001ed4  8fc10004	lw	r1,4(r30)
 1302  00001ed8  8fc20000	lw	r2,(r30)
 1303  00001edc  ac220000	sw	(r1),r2
 1304  00001ee0          	L76_LF2:
 1305  00001ee0  8fc10000	lw	r1,(r30)
 1306  00001ee4  90220000	lbu	r2,(r1)
 1307  00001ee8  64410000	snei	r1,r2,#0
 1308  00001eec  14200010	bnez	r1,L77_LF2
 1309  00001ef0  54000000	nop; delay slot nop
 1310  00001ef4  8fc1fff4	lw	r1,-12(r30)
 1311  00001ef8  08000294	j	L72_LF2
 1312  00001efc  54000000	nop; delay slot nop
 1313  00001f00          	L77_LF2:
 1314  00001f00  8fc10000	lw	r1,(r30)
 1315  00001f04  90220000	lbu	r2,(r1)
 1316  00001f08  6041002d	seqi	r1,r2,#45
 1317  00001f0c  10200024	beqz	r1,L78_LF2
 1318  00001f10  54000000	nop; delay slot nop
 1319  00001f14  2001ffff	addi	r1,r0,#-1
 1320  00001f18  afc1ffec	sw	-20(r30),r1
 1321  00001f1c  8fc20000	lw	r2,(r30)
 1322  00001f20  20410001	addi	r1,r2,#1
 1323  00001f24  00011020	add	r2,r0,r1
 1324  00001f28  afc20000	sw	(r30),r2
 1325  00001f2c  0800000c	j	L79_LF2
 1326  00001f30  54000000	nop; delay slot nop
 1327  00001f34          	L78_LF2:
 1328  00001f34  20010001	addi	r1,r0,#1
 1329  00001f38  afc1ffec	sw	-20(r30),r1
 1330  00001f3c          	L79_LF2:
 1331  00001f3c  8fc10008	lw	r1,8(r30)
 1332  00001f40  64220000	snei	r2,r1,#0
 1333  00001f44  14400090	bnez	r2,L80_LF2
 1334  00001f48  54000000	nop; delay slot nop
 1335  00001f4c  8fc10000	lw	r1,(r30)
 1336  00001f50  90220000	lbu	r2,(r1)
 1337  00001f54  60410030	seqi	r1,r2,#48
 1338  00001f58  10200074	beqz	r1,L81_LF2
 1339  00001f5c  54000000	nop; delay slot nop
 1340  00001f60  8fc20000	lw	r2,(r30)
 1341  00001f64  20410001	addi	r1,r2,#1
 1342  00001f68  00011020	add	r2,r0,r1
 1343  00001f6c  afc20000	sw	(r30),r2
 1344  00001f70  8fc10000	lw	r1,(r30)
 1345  00001f74  90220000	lbu	r2,(r1)
 1346  00001f78  60410078	seqi	r1,r2,#120
 1347  00001f7c  14200020	bnez	r1,L83_LF2
 1348  00001f80  54000000	nop; delay slot nop
 1349  00001f84  8fc10000	lw	r1,(r30)
 1350  00001f88  90220000	lbu	r2,(r1)
 1351  00001f8c  60410058	seqi	r1,r2,#88
 1352  00001f90  1420000c	bnez	r1,L83_LF2
 1353  00001f94  54000000	nop; delay slot nop
 1354  00001f98  08000024	j	L82_LF2
 1355  00001f9c  54000000	nop; delay slot nop
 1356  00001fa0          	L83_LF2:
 1357  00001fa0  20010010	addi	r1,r0,#16
 1358  00001fa4  afc10008	sw	8(r30),r1
 1359  00001fa8  8fc20000	lw	r2,(r30)
 1360  00001fac  20410001	addi	r1,r2,#1
 1361  00001fb0  00011020	add	r2,r0,r1
 1362  00001fb4  afc20000	sw	(r30),r2
 1363  00001fb8  0800000c	j	L84_LF2
 1364  00001fbc  54000000	nop; delay slot nop
 1365  00001fc0          	L82_LF2:
 1366  00001fc0  20010008	addi	r1,r0,#8
 1367  00001fc4  afc10008	sw	8(r30),r1
 1368  00001fc8          	L84_LF2:
 1369  00001fc8  0800000c	j	L80_LF2
 1370  00001fcc  54000000	nop; delay slot nop
 1371  00001fd0          	L81_LF2:
 1372  00001fd0  2001000a	addi	r1,r0,#10
 1373  00001fd4  afc10008	sw	8(r30),r1
 1374  00001fd8          	L85_LF2:
 1375  00001fd8          	L80_LF2:
 1376  00001fd8  8fc10008	lw	r1,8(r30)
 1377  00001fdc  70220000	slei	r2,r1,#0
 1378  00001fe0  1440001c	bnez	r2,L87_LF2
 1379  00001fe4  54000000	nop; delay slot nop
 1380  00001fe8  8fc10008	lw	r1,8(r30)
 1381  00001fec  6c220010	sgti	r2,r1,#16
 1382  00001ff0  1440000c	bnez	r2,L87_LF2
 1383  00001ff4  54000000	nop; delay slot nop
 1384  00001ff8  08000010	j	L86_LF2
 1385  00001ffc  54000000	nop; delay slot nop
 1386  00002000          	L87_LF2:
 1387  00002000  8fc1fff4	lw	r1,-12(r30)
 1388  00002004  08000188	j	L72_LF2
 1389  00002008  54000000	nop; delay slot nop
 1390  0000200c          	L86_LF2:
 1391  0000200c  54000000	nop
 1392  00002010          	L88_LF2:
 1393  00002010  8fc10000	lw	r1,(r30)
 1394  00002014  90220000	lbu	r2,(r1)
 1395  00002018  6c41002f	sgtui	r1,r2,#47
 1396  0000201c  10200030	beqz	r1,L91_LF2
 1397  00002020  54000000	nop; delay slot nop
 1398  00002024  8fc10000	lw	r1,(r30)
 1399  00002028  90220000	lbu	r2,(r1)
 1400  0000202c  70410039	sleui	r1,r2,#57
 1401  00002030  1020001c	beqz	r1,L91_LF2
 1402  00002034  54000000	nop; delay slot nop
 1403  00002038  8fc10000	lw	r1,(r30)
 1404  0000203c  90220000	lbu	r2,(r1)
 1405  00002040  2041ffd0	addi	r1,r2,#-48
 1406  00002044  afc1fff0	sw	-16(r30),r1
 1407  00002048  0800008c	j	L92_LF2
 1408  0000204c  54000000	nop; delay slot nop
 1409  00002050          	L91_LF2:
 1410  00002050  8fc10000	lw	r1,(r30)
 1411  00002054  90220000	lbu	r2,(r1)
 1412  00002058  6c410060	sgtui	r1,r2,#96
 1413  0000205c  10200030	beqz	r1,L93_LF2
 1414  00002060  54000000	nop; delay slot nop
 1415  00002064  8fc10000	lw	r1,(r30)
 1416  00002068  90220000	lbu	r2,(r1)
 1417  0000206c  7041007a	sleui	r1,r2,#122
 1418  00002070  1020001c	beqz	r1,L93_LF2
 1419  00002074  54000000	nop; delay slot nop
 1420  00002078  8fc10000	lw	r1,(r30)
 1421  0000207c  90220000	lbu	r2,(r1)
 1422  00002080  2041ffa9	addi	r1,r2,#-87
 1423  00002084  afc1fff0	sw	-16(r30),r1
 1424  00002088  0800004c	j	L92_LF2
 1425  0000208c  54000000	nop; delay slot nop
 1426  00002090          	L93_LF2:
 1427  00002090  8fc10000	lw	r1,(r30)
 1428  00002094  90220000	lbu	r2,(r1)
 1429  00002098  6c410040	sgtui	r1,r2,#64
 1430  0000209c  10200030	beqz	r1,L95_LF2
 1431  000020a0  54000000	nop; delay slot nop
 1432  000020a4  8fc10000	lw	r1,(r30)
 1433  000020a8  90220000	lbu	r2,(r1)
 1434  000020ac  7041005a	sleui	r1,r2,#90
 1435  000020b0  1020001c	beqz	r1,L95_LF2
 1436  000020b4  54000000	nop; delay slot nop
 1437  000020b8  8fc10000	lw	r1,(r30)
 1438  000020bc  90220000	lbu	r2,(r1)
 1439  000020c0  2041ffc9	addi	r1,r2,#-55
 1440  000020c4  afc1fff0	sw	-16(r30),r1
 1441  000020c8  0800000c	j	L92_LF2
 1442  000020cc  54000000	nop; delay slot nop
 1443  000020d0          	L95_LF2:
 1444  000020d0  200103e8	addi	r1,r0,#1000
 1445  000020d4  afc1fff0	sw	-16(r30),r1
 1446  000020d8          	L96_LF2:
 1447  000020d8          	L94_LF2:
 1448  000020d8          	L92_LF2:
 1449  000020d8  8fc1fff0	lw	r1,-16(r30)
 1450  000020dc  8fc20008	lw	r2,8(r30)
 1451  000020e0  0022082a	slt	r1,r1,r2
 1452  000020e4  10200040	beqz	r1,L90_LF2
 1453  000020e8  54000000	nop; delay slot nop
 1454  000020ec  8fc1fff4	lw	r1,-12(r30)
 1455  000020f0  8fc20008	lw	r2,8(r30)
 1456  000020f4  00200035	movi2fp	f0,r1
 1457  000020f8  00400835	movi2fp	f1,r2
 1458  000020fc  0401000e	mult	f0,f0,f1
 1459  00002100  00000834	movfp2i	r1,f0
 1460  00002104  afc1fff4	sw	-12(r30),r1
 1461  00002108  8fc1fff4	lw	r1,-12(r30)
 1462  0000210c  8fc2fff0	lw	r2,-16(r30)
 1463  00002110  00220820	add	r1,r1,r2
 1464  00002114  afc1fff4	sw	-12(r30),r1
 1465  00002118  8fc20000	lw	r2,(r30)
 1466  0000211c  20410001	addi	r1,r2,#1
 1467  00002120  00011020	add	r2,r0,r1
 1468  00002124  afc20000	sw	(r30),r2
 1469  00002128          	L97_LF2:
 1470  00002128          	L90_LF2:
 1471  00002128  8fc1fff0	lw	r1,-16(r30)
 1472  0000212c  8fc20008	lw	r2,8(r30)
 1473  00002130  0022082a	slt	r1,r1,r2
 1474  00002134  1420000c	bnez	r1,L98_LF2
 1475  00002138  54000000	nop; delay slot nop
 1476  0000213c  0800000c	j	L89_LF2
 1477  00002140  54000000	nop; delay slot nop
 1478  00002144          	L98_LF2:
 1479  00002144  0bfffec8	j	L88_LF2
 1480  00002148  54000000	nop; delay slot nop
 1481  0000214c          	L89_LF2:
 1482  0000214c  8fc10004	lw	r1,4(r30)
 1483  00002150  64220000	snei	r2,r1,#0
 1484  00002154  10400010	beqz	r2,L99_LF2
 1485  00002158  54000000	nop; delay slot nop
 1486  0000215c  8fc10004	lw	r1,4(r30)
 1487  00002160  8fc20000	lw	r2,(r30)
 1488  00002164  ac220000	sw	(r1),r2
 1489  00002168          	L99_LF2:
 1490  00002168  8fc1fff4	lw	r1,-12(r30)
 1491  0000216c  8fc2ffec	lw	r2,-20(r30)
 1492  00002170  00200035	movi2fp	f0,r1
 1493  00002174  00400835	movi2fp	f1,r2
 1494  00002178  0401000e	mult	f0,f0,f1
 1495  0000217c  00000834	movfp2i	r1,f0
 1496  00002180  afc1fff4	sw	-12(r30),r1
 1497  00002184  8fc1fff4	lw	r1,-12(r30)
 1498  00002188  08000004	j	L72_LF2
 1499  0000218c  54000000	nop; delay slot nop
 1500  00002190          	L72_LF2:
 1501  00002190  8fa20000	lw	r2,0(r29)
 1502  00002194  8fdffff8	lw	r31,-8(r30)
 1503  00002198  001ee820	add	r29,r0,r30
 1504  0000219c  8fdefffc	lw	r30,-4(r30)
 1505  000021a0  4be00000	jr	r31
 1506  000021a4  54000000	nop
 1507  000021a8          	.endproc _dstrtol
 1508  000021a8          	.align 2
 1509  000021a8          	.proc _bcopy
 1510  000021a8          	.global _bcopy
 1511  000021a8          	_bcopy:
 1512                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1513  000021a8  afbefffc	sw	-4(r29),r30; push fp
 1514  000021ac  001df020	add	r30,r0,r29; fp = sp
 1515  000021b0  afbffff8	sw	-8(r29),r31; push ret addr
 1516  000021b4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1517  000021b8  afa20000	sw	0(r29),r2
 1518  000021bc  afa30004	sw	4(r29),r3
 1519  000021c0  54000000	nop
 1520  000021c4          	L101_LF2:
 1521  000021c4  8fc10008	lw	r1,8(r30)
 1522  000021c8  2022ffff	addi	r2,r1,#-1
 1523  000021cc  afc20008	sw	8(r30),r2
 1524  000021d0  6c210000	sgti	r1,r1,#0
 1525  000021d4  1420000c	bnez	r1,L103_LF2
 1526  000021d8  54000000	nop; delay slot nop
 1527  000021dc  0800002c	j	L102_LF2
 1528  000021e0  54000000	nop; delay slot nop
 1529  000021e4          	L103_LF2:
 1530  000021e4  8fc10004	lw	r1,4(r30)
 1531  000021e8  20220001	addi	r2,r1,#1
 1532  000021ec  afc20004	sw	4(r30),r2
 1533  000021f0  8fc20000	lw	r2,(r30)
 1534  000021f4  20430001	addi	r3,r2,#1
 1535  000021f8  afc30000	sw	(r30),r3
 1536  000021fc  80420000	lb	r2,(r2)
 1537  00002200  a0220000	sb	(r1),r2
 1538  00002204  0bffffbc	j	L101_LF2
 1539  00002208  54000000	nop; delay slot nop
 1540  0000220c          	L102_LF2:
 1541  0000220c          	L100_LF2:
 1542  0000220c  8fa20000	lw	r2,0(r29)
 1543  00002210  8fa30004	lw	r3,4(r29)
 1544  00002214  8fdffff8	lw	r31,-8(r30)
 1545  00002218  001ee820	add	r29,r0,r30
 1546  0000221c  8fdefffc	lw	r30,-4(r30)
 1547  00002220  4be00000	jr	r31
 1548  00002224  54000000	nop
 1549  00002228          	.endproc _bcopy
 1550  00002228          	.align 2
 1551  00002228          	.proc _bzero
 1552  00002228          	.global _bzero
 1553  00002228          	_bzero:
 1554                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1555  00002228  afbefffc	sw	-4(r29),r30; push fp
 1556  0000222c  001df020	add	r30,r0,r29; fp = sp
 1557  00002230  afbffff8	sw	-8(r29),r31; push ret addr
 1558  00002234  2fbd0010	subui	r29,r29,#16; alloc local storage
 1559  00002238  afa20000	sw	0(r29),r2
 1560  0000223c  54000000	nop
 1561  00002240          	L105_LF2:
 1562  00002240  8fc10004	lw	r1,4(r30)
 1563  00002244  2022ffff	addi	r2,r1,#-1
 1564  00002248  afc20004	sw	4(r30),r2
 1565  0000224c  6c210000	sgti	r1,r1,#0
 1566  00002250  1420000c	bnez	r1,L107_LF2
 1567  00002254  54000000	nop; delay slot nop
 1568  00002258  08000020	j	L106_LF2
 1569  0000225c  54000000	nop; delay slot nop
 1570  00002260          	L107_LF2:
 1571  00002260  8fc10000	lw	r1,(r30)
 1572  00002264  20220001	addi	r2,r1,#1
 1573  00002268  afc20000	sw	(r30),r2
 1574  0000226c  20020000	addi	r2,r0,(#0x0)&0xff
 1575  00002270  a0220000	sb	(r1),r2
 1576  00002274  0bffffc8	j	L105_LF2
 1577  00002278  54000000	nop; delay slot nop
 1578  0000227c          	L106_LF2:
 1579  0000227c          	L104_LF2:
 1580  0000227c  8fa20000	lw	r2,0(r29)
 1581  00002280  8fdffff8	lw	r31,-8(r30)
 1582  00002284  001ee820	add	r29,r0,r30
 1583  00002288  8fdefffc	lw	r30,-4(r30)
 1584  0000228c  4be00000	jr	r31
 1585  00002290  54000000	nop
 1586  00002294          	.endproc _bzero
 1587  00002294          	.align 2
 1588  00002294          	.proc _min
 1589  00002294          	.global _min
 1590  00002294          	_min:
 1591                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1592  00002294  afbefffc	sw	-4(r29),r30; push fp
 1593  00002298  001df020	add	r30,r0,r29; fp = sp
 1594  0000229c  afbffff8	sw	-8(r29),r31; push ret addr
 1595  000022a0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1596  000022a4  afa20000	sw	0(r29),r2
 1597  000022a8  afa30004	sw	4(r29),r3
 1598  000022ac  8fc10000	lw	r1,(r30)
 1599  000022b0  8fc20004	lw	r2,4(r30)
 1600  000022b4  0022182c	sle	r3,r1,r2
 1601  000022b8  14600008	bnez	r3,L109_LF2
 1602  000022bc  54000000	nop; delay slot nop
 1603  000022c0  8fc10004	lw	r1,4(r30)
 1604  000022c4          	L109_LF2:
 1605  000022c4  08000004	j	L108_LF2
 1606  000022c8  54000000	nop; delay slot nop
 1607  000022cc          	L108_LF2:
 1608  000022cc  8fa20000	lw	r2,0(r29)
 1609  000022d0  8fa30004	lw	r3,4(r29)
 1610  000022d4  8fdffff8	lw	r31,-8(r30)
 1611  000022d8  001ee820	add	r29,r0,r30
 1612  000022dc  8fdefffc	lw	r30,-4(r30)
 1613  000022e0  4be00000	jr	r31
 1614  000022e4  54000000	nop
 1615  000022e8          	.endproc _min
 1616                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1617                      ;;;
 1618                      ;;; Most of the traps are called in files from libtraps.
 1621  000022e8          	.align 2
 1622  000022e8          	.proc _exit
 1623  000022e8          	.global _exit
 1624  000022e8          	_exit:
 1625  000022e8  44000300	trap	#0x300
 1626  000022ec  4be00000	jr	r31
 1627  000022f0  54000000	nop
 1628  000022f4          	.endproc _exit
 1630                      ; for the benefit of gcc.
 1631  000022f4          	.proc ___main
 1632  000022f4          	.global ___main
 1633  000022f4          	___main:
 1634  000022f4  4be00000	jr	r31
 1635  000022f8  54000000	nop
 1636  000022fc          	.endproc ___main
 1637  000022fc          	.text
 1638  000022fc          	.global _etext
 1639  000022fc          	_etext:
 1640  000022fc          	.align 3
 1641  00002300          	.data
 1642  00003151          	.global _edata
 1643  00003151          	_edata:
