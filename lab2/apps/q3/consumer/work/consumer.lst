 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 397
    4                      ; Text size: 4952
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  676f7420	.ascii "got to consumer\n\000"
   82  00003004  746f2063	
   82  00003008  6f6e7375	
   82  0000300c  6d65720a	
   82  00003010  00      	
   83  00003011          	.align 2
   84  00003014          	LC1_LF0:
   85  00003014  55736167	.ascii "Usage: \000"
   85  00003018  653a2000	
   86  0000301c          	.align 2
   87  0000301c          	LC2_LF0:
   88  0000301c  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   88  00003020  6e646c65	
   88  00003024  5f746f5f	
   88  00003028  73686172	
   88  0000302c  65645f6d	
   88  00003030  656d6f72	
   88  00003034  795f7061	
   88  00003038  67653e20	
   88  0000303c  3c68616e	
   88  00003040  646c655f	
   88  00003044  746f5f70	
   88  00003048  6167655f	
   88  0000304c  6d617070	
   88  00003050  65645f73	
   88  00003054  656d6170	
   88  00003058  686f7265	
   88  0000305c  3e0a00  	
   89  0000305f          	.align 2
   90  00003060          	LC3_LF0:
   91  00003060  436f756c	.ascii "Could not map the virtual address to the memory in \000"
   91  00003064  64206e6f	
   91  00003068  74206d61	
   91  0000306c  70207468	
   91  00003070  65207669	
   91  00003074  72747561	
   91  00003078  6c206164	
   91  0000307c  64726573	
   91  00003080  7320746f	
   91  00003084  20746865	
   91  00003088  206d656d	
   91  0000308c  6f727920	
   91  00003090  696e2000	
   92  00003094          	.align 2
   93  00003094          	LC4_LF0:
   94  00003094  2c206578	.ascii ", exiting...\n\000"
   94  00003098  6974696e	
   94  0000309c  672e2e2e	
   94  000030a0  0a00    	
   95  000030a2          	.align 2
   96  000030a4          	LC5_LF0:
   97  000030a4  42616420	.ascii "Bad semaphore s_fullslots (%d) in PID: %d \n\000"
   97  000030a8  73656d61	
   97  000030ac  70686f72	
   97  000030b0  6520735f	
   97  000030b4  66756c6c	
   97  000030b8  736c6f74	
   97  000030bc  73202825	
   97  000030c0  64292069	
   97  000030c4  6e205049	
   97  000030c8  443a2025	
   97  000030cc  64200a00	
   98  000030d0          	.align 2
   99  000030d0          	LC6_LF0:
  100  000030d0  42616420	.ascii "Bad lock acquire (%d) in \000"
  100  000030d4  6c6f636b	
  100  000030d8  20616371	
  100  000030dc  75697265	
  100  000030e0  20282564	
  100  000030e4  2920696e	
  100  000030e8  2000    	
  101  000030ea          	.align 2
  102  000030ec          	LC7_LF0:
  103  000030ec  0a00    	.ascii "\n\000"
  104  000030ee          	.align 2
  105  000030f0          	LC8_LF0:
  106  000030f0  436f6e73	.ascii "Consumer %d removed: %c\n\000"
  106  000030f4  756d6572	
  106  000030f8  20256420	
  106  000030fc  72656d6f	
  106  00003100  7665643a	
  106  00003104  2025630a	
  106  00003108  00      	
  107  00003109          	.align 2
  108  0000310c          	LC9_LF0:
  109  0000310c  42616420	.ascii "Bad lock release (%d) in \000"
  109  00003110  6c6f636b	
  109  00003114  2072656c	
  109  00003118  65617365	
  109  0000311c  20282564	
  109  00003120  2920696e	
  109  00003124  2000    	
  110  00003126          	.align 2
  111  00003128          	LC10_LF0:
  112  00003128  42616420	.ascii "Bad semaphore s_emptyslots\n\000"
  112  0000312c  73656d61	
  112  00003130  70686f72	
  112  00003134  6520735f	
  112  00003138  656d7074	
  112  0000313c  79736c6f	
  112  00003140  74730a00	
  113  00003144          	.align 2
  114  00003144          	LC11_LF0:
  115  00003144  636f6e73	.ascii "consumer: PID %d is complete.\n\000"
  115  00003148  756d6572	
  115  0000314c  3a205049	
  115  00003150  44202564	
  115  00003154  20697320	
  115  00003158  636f6d70	
  115  0000315c  6c657465	
  115  00003160  2e0a00  	
  116  00003163          	.align 2
  117  00003164          	LC12_LF0:
  118  00003164  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  118  00003168  73656d61	
  118  0000316c  70686f72	
  118  00003170  6520735f	
  118  00003174  70726f63	
  118  00003178  735f636f	
  118  0000317c  6d706c65	
  118  00003180  74656420	
  118  00003184  28256429	
  118  00003188  20696e20	
  118  0000318c  00      	
  119  0000318d          	.text
  120  000010d4          	.align 2
  121  000010d4          	.proc _main
  122  000010d4          	.global _main
  123  000010d4          	_main:
  124                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  125  000010d4  afbefffc	sw	-4(r29),r30; push fp
  126  000010d8  001df020	add	r30,r0,r29; fp = sp
  127  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  128  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  129  000010e4  8fc20000	lw	r2,(r30)
  130  000010e8  8fc60004	lw	r6,4(r30)
  131  000010ec  0c001260	jal	___main
  132  000010f0  54000000	nop; not filled.
  133  000010f4  20080000	addi	r8,r0,#0
  134  000010f8  23bdfff8	addi	r29,r29,#-8
  135  000010fc  3c0b0000	lhi	r11,((LC0_LF0)>>16)&0xffff
  136  00001100  256b3000	addui	r11,r11,(LC0_LF0)&0xffff
  137  00001104  afab0000	sw	(r29),r11
  138  00001108  0c00043c	jal	_Printf
  139  0000110c  54000000	nop; not filled.
  140  00001110  23bd0008	addi	r29,r29,#8
  141  00001114  64410006	snei	r1,r2,#6
  142  00001118  1020004c	beqz	r1,L14_LF0
  143  0000111c  54000000	nop; not filled.
  144  00001120  23bdfff8	addi	r29,r29,#-8
  145  00001124  3c0b0000	lhi	r11,((LC1_LF0)>>16)&0xffff
  146  00001128  256b3014	addui	r11,r11,(LC1_LF0)&0xffff
  147  0000112c  afab0000	sw	(r29),r11
  148  00001130  0c000414	jal	_Printf
  149  00001134  54000000	nop; not filled.
  150  00001138  8ccb0000	lw	r11,(r6)
  151  0000113c  afab0000	sw	(r29),r11
  152  00001140  0c000404	jal	_Printf
  153  00001144  54000000	nop; not filled.
  154  00001148  3c0b0000	lhi	r11,((LC2_LF0)>>16)&0xffff
  155  0000114c  256b301c	addui	r11,r11,(LC2_LF0)&0xffff
  156  00001150  afab0000	sw	(r29),r11
  157  00001154  0c0003f0	jal	_Printf
  158  00001158  54000000	nop; not filled.
  159  0000115c  0c00049c	jal	_Exit
  160  00001160  54000000	nop; not filled.
  161  00001164  23bd0008	addi	r29,r29,#8
  162  00001168          	L14_LF0:
  163  00001168  23bdfff0	addi	r29,r29,#-16
  164  0000116c  8ccb0004	lw	r11,4(r6)
  165  00001170  afab0000	sw	(r29),r11
  166  00001174  200b0000	addi	r11,r0,#0
  167  00001178  afab0004	sw	4(r29),r11
  168  0000117c  200b000a	addi	r11,r0,#10
  169  00001180  afab0008	sw	8(r29),r11
  170  00001184  0c000d20	jal	_dstrtol
  171  00001188  54000000	nop; not filled.
  172  0000118c  00011020	add	r2,r0,r1
  173  00001190  8ccb0008	lw	r11,8(r6)
  174  00001194  afab0000	sw	(r29),r11
  175  00001198  200b0000	addi	r11,r0,#0
  176  0000119c  afab0004	sw	4(r29),r11
  177  000011a0  200b000a	addi	r11,r0,#10
  178  000011a4  afab0008	sw	8(r29),r11
  179  000011a8  0c000cfc	jal	_dstrtol
  180  000011ac  54000000	nop; not filled.
  181  000011b0  00015020	add	r10,r0,r1
  182  000011b4  8ccb000c	lw	r11,12(r6)
  183  000011b8  afab0000	sw	(r29),r11
  184  000011bc  200b0000	addi	r11,r0,#0
  185  000011c0  afab0004	sw	4(r29),r11
  186  000011c4  200b000a	addi	r11,r0,#10
  187  000011c8  afab0008	sw	8(r29),r11
  188  000011cc  0c000cd8	jal	_dstrtol
  189  000011d0  54000000	nop; not filled.
  190  000011d4  00012820	add	r5,r0,r1
  191  000011d8  8ccb0010	lw	r11,16(r6)
  192  000011dc  afab0000	sw	(r29),r11
  193  000011e0  200b0000	addi	r11,r0,#0
  194  000011e4  afab0004	sw	4(r29),r11
  195  000011e8  200b000a	addi	r11,r0,#10
  196  000011ec  afab0008	sw	8(r29),r11
  197  000011f0  0c000cb4	jal	_dstrtol
  198  000011f4  54000000	nop; not filled.
  199  000011f8  00013820	add	r7,r0,r1
  200  000011fc  8ccb0014	lw	r11,20(r6)
  201  00001200  afab0000	sw	(r29),r11
  202  00001204  200b0000	addi	r11,r0,#0
  203  00001208  afab0004	sw	4(r29),r11
  204  0000120c  200b000a	addi	r11,r0,#10
  205  00001210  afab0008	sw	8(r29),r11
  206  00001214  0c000c90	jal	_dstrtol
  207  00001218  54000000	nop; not filled.
  208  0000121c  00014820	add	r9,r0,r1
  209  00001220  afa20000	sw	(r29),r2
  210  00001224  0c000350	jal	_shmat
  211  00001228  54000000	nop; not filled.
  212  0000122c  00012020	add	r4,r0,r1
  213  00001230  23bd0010	addi	r29,r29,#16
  214  00001234  64810000	snei	r1,r4,#0
  215  00001238  1420004c	bnez	r1,L18_LF0
  216  0000123c  54000000	nop; not filled.
  217  00001240  23bdfff8	addi	r29,r29,#-8
  218  00001244  3c0b0000	lhi	r11,((LC3_LF0)>>16)&0xffff
  219  00001248  256b3060	addui	r11,r11,(LC3_LF0)&0xffff
  220  0000124c  afab0000	sw	(r29),r11
  221  00001250  0c0002f4	jal	_Printf
  222  00001254  54000000	nop; not filled.
  223  00001258  8ccb0000	lw	r11,(r6)
  224  0000125c  afab0000	sw	(r29),r11
  225  00001260  0c0002e4	jal	_Printf
  226  00001264  54000000	nop; not filled.
  227  00001268  3c0b0000	lhi	r11,((LC4_LF0)>>16)&0xffff
  228  0000126c  256b3094	addui	r11,r11,(LC4_LF0)&0xffff
  229  00001270  afab0000	sw	(r29),r11
  230  00001274  0c0002d0	jal	_Printf
  231  00001278  54000000	nop; not filled.
  232  0000127c  0c00037c	jal	_Exit
  233  00001280  54000000	nop; not filled.
  234  00001284  23bd0008	addi	r29,r29,#8
  235  00001288          	L18_LF0:
  236  00001288  23bdfff8	addi	r29,r29,#-8
  237  0000128c  afa70000	sw	(r29),r7
  238  00001290  0c0002fc	jal	_sem_wait
  239  00001294  54000000	nop; not filled.
  240  00001298  23bd0008	addi	r29,r29,#8
  241  0000129c  64210001	snei	r1,r1,#1
  242  000012a0  10200038	beqz	r1,L19_LF0
  243  000012a4  54000000	nop; not filled.
  244  000012a8  0c0002a8	jal	_getpid
  245  000012ac  54000000	nop; not filled.
  246  000012b0  23bdfff0	addi	r29,r29,#-16
  247  000012b4  3c0b0000	lhi	r11,((LC5_LF0)>>16)&0xffff
  248  000012b8  256b30a4	addui	r11,r11,(LC5_LF0)&0xffff
  249  000012bc  afab0000	sw	(r29),r11
  250  000012c0  afa70004	sw	4(r29),r7
  251  000012c4  afa10008	sw	8(r29),r1
  252  000012c8  0c00027c	jal	_Printf
  253  000012cc  54000000	nop; not filled.
  254  000012d0  0c000328	jal	_Exit
  255  000012d4  54000000	nop; not filled.
  256  000012d8  23bd0010	addi	r29,r29,#16
  257  000012dc          	L19_LF0:
  258  000012dc  23bdfff8	addi	r29,r29,#-8
  259  000012e0  afa50000	sw	(r29),r5
  260  000012e4  0c0002cc	jal	_lock_acquire
  261  000012e8  54000000	nop; not filled.
  262  000012ec  23bd0008	addi	r29,r29,#8
  263  000012f0  64210001	snei	r1,r1,#1
  264  000012f4  10200050	beqz	r1,L20_LF0
  265  000012f8  54000000	nop; not filled.
  266  000012fc  23bdfff8	addi	r29,r29,#-8
  267  00001300  3c0b0000	lhi	r11,((LC6_LF0)>>16)&0xffff
  268  00001304  256b30d0	addui	r11,r11,(LC6_LF0)&0xffff
  269  00001308  afab0000	sw	(r29),r11
  270  0000130c  afa50004	sw	4(r29),r5
  271  00001310  0c000234	jal	_Printf
  272  00001314  54000000	nop; not filled.
  273  00001318  8ccb0000	lw	r11,(r6)
  274  0000131c  afab0000	sw	(r29),r11
  275  00001320  0c000224	jal	_Printf
  276  00001324  54000000	nop; not filled.
  277  00001328  3c0b0000	lhi	r11,((LC7_LF0)>>16)&0xffff
  278  0000132c  256b30ec	addui	r11,r11,(LC7_LF0)&0xffff
  279  00001330  afab0000	sw	(r29),r11
  280  00001334  0c000210	jal	_Printf
  281  00001338  54000000	nop; not filled.
  282  0000133c  0c0002bc	jal	_Exit
  283  00001340  54000000	nop; not filled.
  284  00001344  23bd0008	addi	r29,r29,#8
  285  00001348          	L20_LF0:
  286  00001348  0c000208	jal	_getpid
  287  0000134c  54000000	nop; not filled.
  288  00001350  23bdfff0	addi	r29,r29,#-16
  289  00001354  3c0b0000	lhi	r11,((LC8_LF0)>>16)&0xffff
  290  00001358  256b30f0	addui	r11,r11,(LC8_LF0)&0xffff
  291  0000135c  afab0000	sw	(r29),r11
  292  00001360  afa10004	sw	4(r29),r1
  293  00001364  8c81000c	lw	r1,12(r4)
  294  00001368  00810820	add	r1,r4,r1
  295  0000136c  90210000	lbu	r1,(r1)
  296  00001370  afa10008	sw	8(r29),r1
  297  00001374  0c0001d0	jal	_Printf
  298  00001378  54000000	nop; not filled.
  299  0000137c  8c81000c	lw	r1,12(r4)
  300  00001380  20230001	addi	r3,r1,#1
  301  00001384  2001000b	addi	r1,r0,#11
  302  00001388  00600035	movi2fp	f0,r3
  303  0000138c  00200835	movi2fp	f1,r1
  304  00001390  0401000f	div	f0,f0,f1
  305  00001394  00001034	movfp2i	r2,f0
  306  00001398  50410001	slli	r1,r2,#0x1
  307  0000139c  00220820	add	r1,r1,r2
  308  000013a0  50210002	slli	r1,r1,#0x2
  309  000013a4  00220822	sub	r1,r1,r2
  310  000013a8  00610822	sub	r1,r3,r1
  311  000013ac  ac81000c	sw	12(r4),r1
  312  000013b0  21080001	addi	r8,r8,#1
  313  000013b4  afa50000	sw	(r29),r5
  314  000013b8  0c000204	jal	_lock_release
  315  000013bc  54000000	nop; not filled.
  316  000013c0  23bd0010	addi	r29,r29,#16
  317  000013c4  64210001	snei	r1,r1,#1
  318  000013c8  10200050	beqz	r1,L21_LF0
  319  000013cc  54000000	nop; not filled.
  320  000013d0  23bdfff8	addi	r29,r29,#-8
  321  000013d4  3c0b0000	lhi	r11,((LC9_LF0)>>16)&0xffff
  322  000013d8  256b310c	addui	r11,r11,(LC9_LF0)&0xffff
  323  000013dc  afab0000	sw	(r29),r11
  324  000013e0  afa50004	sw	4(r29),r5
  325  000013e4  0c000160	jal	_Printf
  326  000013e8  54000000	nop; not filled.
  327  000013ec  8ccb0000	lw	r11,(r6)
  328  000013f0  afab0000	sw	(r29),r11
  329  000013f4  0c000150	jal	_Printf
  330  000013f8  54000000	nop; not filled.
  331  000013fc  3c0b0000	lhi	r11,((LC7_LF0)>>16)&0xffff
  332  00001400  256b30ec	addui	r11,r11,(LC7_LF0)&0xffff
  333  00001404  afab0000	sw	(r29),r11
  334  00001408  0c00013c	jal	_Printf
  335  0000140c  54000000	nop; not filled.
  336  00001410  0c0001e8	jal	_Exit
  337  00001414  54000000	nop; not filled.
  338  00001418  23bd0008	addi	r29,r29,#8
  339  0000141c          	L21_LF0:
  340  0000141c  23bdfff8	addi	r29,r29,#-8
  341  00001420  afa90000	sw	(r29),r9
  342  00001424  0c000174	jal	_sem_signal
  343  00001428  54000000	nop; not filled.
  344  0000142c  23bd0008	addi	r29,r29,#8
  345  00001430  64210001	snei	r1,r1,#1
  346  00001434  10200028	beqz	r1,L16_LF0
  347  00001438  54000000	nop; not filled.
  348  0000143c  23bdfff8	addi	r29,r29,#-8
  349  00001440  3c0b0000	lhi	r11,((LC10_LF0)>>16)&0xffff
  350  00001444  256b3128	addui	r11,r11,(LC10_LF0)&0xffff
  351  00001448  afab0000	sw	(r29),r11
  352  0000144c  0c0000f8	jal	_Printf
  353  00001450  54000000	nop; not filled.
  354  00001454  0c0001a4	jal	_Exit
  355  00001458  54000000	nop; not filled.
  356  0000145c  23bd0008	addi	r29,r29,#8
  357  00001460          	L16_LF0:
  358  00001460  7101000a	slei	r1,r8,#10
  359  00001464  1420fe20	bnez	r1,L18_LF0
  360  00001468  54000000	nop; not filled.
  361  0000146c  0c0000e4	jal	_getpid
  362  00001470  54000000	nop; not filled.
  363  00001474  23bdfff8	addi	r29,r29,#-8
  364  00001478  3c0b0000	lhi	r11,((LC11_LF0)>>16)&0xffff
  365  0000147c  256b3144	addui	r11,r11,(LC11_LF0)&0xffff
  366  00001480  afab0000	sw	(r29),r11
  367  00001484  afa10004	sw	4(r29),r1
  368  00001488  0c0000bc	jal	_Printf
  369  0000148c  54000000	nop; not filled.
  370  00001490  afaa0000	sw	(r29),r10
  371  00001494  0c000104	jal	_sem_signal
  372  00001498  54000000	nop; not filled.
  373  0000149c  23bd0008	addi	r29,r29,#8
  374  000014a0  64210001	snei	r1,r1,#1
  375  000014a4  10200050	beqz	r1,L24_LF0
  376  000014a8  54000000	nop; not filled.
  377  000014ac  23bdfff8	addi	r29,r29,#-8
  378  000014b0  3c0b0000	lhi	r11,((LC12_LF0)>>16)&0xffff
  379  000014b4  256b3164	addui	r11,r11,(LC12_LF0)&0xffff
  380  000014b8  afab0000	sw	(r29),r11
  381  000014bc  afaa0004	sw	4(r29),r10
  382  000014c0  0c000084	jal	_Printf
  383  000014c4  54000000	nop; not filled.
  384  000014c8  8cc60000	lw	r6,(r6)
  385  000014cc  afa60000	sw	(r29),r6
  386  000014d0  0c000074	jal	_Printf
  387  000014d4  54000000	nop; not filled.
  388  000014d8  3c0b0000	lhi	r11,((LC4_LF0)>>16)&0xffff
  389  000014dc  256b3094	addui	r11,r11,(LC4_LF0)&0xffff
  390  000014e0  afab0000	sw	(r29),r11
  391  000014e4  0c000060	jal	_Printf
  392  000014e8  54000000	nop; not filled.
  393  000014ec  0c00010c	jal	_Exit
  394  000014f0  54000000	nop; not filled.
  395  000014f4  23bd0008	addi	r29,r29,#8
  396  000014f8          	L24_LF0:
  397  000014f8  0c000e48	jal	_exit
  398  000014fc  54000000	nop
  399  00001500          	.endproc _main
  400                      ;;;
  401                      ;;; Stub functions for DLX traps.
  402                      ;;;
  403                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  404                      ;;;
  405                      ;;; The traps such as Open and Close
  406                      ;;; (note the capital letters) are for use by user programs.  The traps
  407                      ;;; with names such as open and close (lower case) are for use by the OS.
  408                      ;;;
  411  00001500          	.align 2
  413                      ;;; The following are the traps to be used by user-level programs
  414                      ;;;
  416  00001500          	.align 2
  417  00001500          	.proc _Open
  418  00001500          	.global _Open
  419  00001500          	_Open:
  420                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  421                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  422                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  423  00001500  44000213	trap	#0x213
  424  00001504  4be00000	jr	r31
  425  00001508  54000000	nop
  426  0000150c          	.endproc _Open
  428  0000150c          	.proc _Close
  429  0000150c          	.global _Close
  430  0000150c          	_Close:
  431  0000150c  44000214	trap	#0x214
  432  00001510  4be00000	jr	r31
  433  00001514  54000000	nop
  434  00001518          	.endproc _Close
  436  00001518          	.proc _Read
  437  00001518          	.global _Read
  438  00001518          	_Read:
  439  00001518  44000210	trap	#0x210
  440  0000151c  4be00000	jr	r31
  441  00001520  54000000	nop
  442  00001524          	.endproc _Read
  444  00001524          	.proc _Write
  445  00001524          	.global _Write
  446  00001524          	_Write:
  447  00001524  44000211	trap	#0x211
  448  00001528  4be00000	jr	r31
  449  0000152c  54000000	nop
  450  00001530          	.endproc _Write
  452  00001530          	.proc _Lseek
  453  00001530          	.global _Lseek
  454  00001530          	_Lseek:
  455  00001530  44000212	trap	#0x212
  456  00001534  4be00000	jr	r31
  457  00001538  54000000	nop
  458  0000153c          	.endproc _Lseek
  460  0000153c          	.proc _Putchar
  461  0000153c          	.global _Putchar
  462  0000153c          	_Putchar:
  463  0000153c  44000280	trap	#0x280
  464  00001540  4be00000	jr	r31
  465  00001544  54000000	nop
  466  00001548          	.endproc _Putchar
  468  00001548          	.proc _Printf
  469  00001548          	.global _Printf
  470  00001548          	_Printf:
  471  00001548  44000201	trap	#0x201
  472  0000154c  4be00000	jr	r31
  473  00001550  54000000	nop
  474  00001554          	.endproc _Printf
  476  00001554          	.proc _getpid
  477  00001554          	.global _getpid
  478  00001554          	_getpid:
  479  00001554  44000431	trap	#0x431
  480  00001558  4be00000	jr	r31
  481  0000155c  54000000	nop
  482  00001560          	.endproc _getpid
  484  00001560          	.proc _process_create
  485  00001560          	.global _process_create
  486  00001560          	_process_create:
  487  00001560  44000432	trap	#0x432
  488  00001564  4be00000	jr	r31
  489  00001568  54000000	nop
  490  0000156c          	.endproc _process_create
  492  0000156c          	.proc _shmget
  493  0000156c          	.global _shmget
  494  0000156c          	_shmget:
  495  0000156c  44000440	trap	#0x440
  496  00001570  4be00000	jr	r31
  497  00001574  54000000	nop
  498  00001578          	.endproc _shmget
  500  00001578          	.proc _shmat
  501  00001578          	.global _shmat
  502  00001578          	_shmat:
  503  00001578  44000441	trap	#0x441
  504  0000157c  4be00000	jr	r31
  505  00001580  54000000	nop
  506  00001584          	.endproc _shmat
  508  00001584          	.proc _sem_create
  509  00001584          	.global _sem_create
  510  00001584          	_sem_create:
  511  00001584  44000450	trap	#0x450
  512  00001588  4be00000	jr	r31
  513  0000158c  54000000	nop
  514  00001590          	.endproc _sem_create
  516  00001590          	.proc _sem_wait
  517  00001590          	.global _sem_wait
  518  00001590          	_sem_wait:
  519  00001590  44000451	trap	#0x451
  520  00001594  4be00000	jr	r31
  521  00001598  54000000	nop
  522  0000159c          	.endproc _sem_wait
  524  0000159c          	.proc _sem_signal
  525  0000159c          	.global _sem_signal
  526  0000159c          	_sem_signal:
  527  0000159c  44000452	trap	#0x452
  528  000015a0  4be00000	jr	r31
  529  000015a4  54000000	nop
  530  000015a8          	.endproc _sem_signal
  532  000015a8          	.proc _lock_create
  533  000015a8          	.global _lock_create
  534  000015a8          	_lock_create:
  535  000015a8  44000453	trap	#0x453
  536  000015ac  4be00000	jr	r31
  537  000015b0  54000000	nop
  538  000015b4          	.endproc _lock_create
  540  000015b4          	.proc _lock_acquire
  541  000015b4          	.global _lock_acquire
  542  000015b4          	_lock_acquire:
  543  000015b4  44000454	trap	#0x454
  544  000015b8  4be00000	jr	r31
  545  000015bc  54000000	nop
  546  000015c0          	.endproc _lock_acquire
  548  000015c0          	.proc _lock_release
  549  000015c0          	.global _lock_release
  550  000015c0          	_lock_release:
  551  000015c0  44000455	trap	#0x455
  552  000015c4  4be00000	jr	r31
  553  000015c8  54000000	nop
  554  000015cc          	.endproc _lock_release
  556  000015cc          	.proc _cond_create
  557  000015cc          	.global _cond_create
  558  000015cc          	_cond_create:
  559  000015cc  44000456	trap	#0x456
  560  000015d0  4be00000	jr	r31
  561  000015d4  54000000	nop
  562  000015d8          	.endproc _cond_create
  564  000015d8          	.proc _cond_wait
  565  000015d8          	.global _cond_wait
  566  000015d8          	_cond_wait:
  567  000015d8  44000457	trap	#0x457
  568  000015dc  4be00000	jr	r31
  569  000015e0  54000000	nop
  570  000015e4          	.endproc _cond_wait
  572  000015e4          	.proc _cond_signal
  573  000015e4          	.global _cond_signal
  574  000015e4          	_cond_signal:
  575  000015e4  44000458	trap	#0x458
  576  000015e8  4be00000	jr	r31
  577  000015ec  54000000	nop
  578  000015f0          	.endproc _cond_signal
  580  000015f0          	.proc _cond_broadcast
  581  000015f0          	.global _cond_broadcast
  582  000015f0          	_cond_broadcast:
  583  000015f0  44000455	trap	#0x455
  584  000015f4  4be00000	jr	r31
  585  000015f8  54000000	nop
  586  000015fc          	.endproc _cond_broadcast
  588  000015fc          	.proc _Exit
  589  000015fc          	.global _Exit
  590  000015fc          	_Exit:
  591  000015fc  44000500	trap	#0x500
  592  00001600  4be00000	jr	r31
  593  00001604  54000000	nop
  594  00001608          	.endproc _Exit
  595                      ; Compiled by GCC
  597  00001608          	.align 2
  598  00001608          	.proc _isspace
  599  00001608          	.global _isspace
  600  00001608          	_isspace:
  601                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  602  00001608  afbefffc	sw	-4(r29),r30; push fp
  603  0000160c  001df020	add	r30,r0,r29; fp = sp
  604  00001610  afbffff8	sw	-8(r29),r31; push ret addr
  605  00001614  2fbd0018	subui	r29,r29,#24; alloc local storage
  606  00001618  afa20000	sw	0(r29),r2
  607  0000161c  afa30004	sw	4(r29),r3
  608  00001620  afa40008	sw	8(r29),r4
  609  00001624  83c20003	lb	r2,3(r30)
  610  00001628  20010000	addi	r1,r0,#0
  611  0000162c  304300ff	andi	r3,r2,#0x00ff
  612  00001630  60640020	seqi	r4,r3,#32
  613  00001634  1480002c	bnez	r4,L3_LF2
  614  00001638  54000000	nop; delay slot nop
  615  0000163c  304300ff	andi	r3,r2,#0x00ff
  616  00001640  60640009	seqi	r4,r3,#9
  617  00001644  1480001c	bnez	r4,L3_LF2
  618  00001648  54000000	nop; delay slot nop
  619  0000164c  304300ff	andi	r3,r2,#0x00ff
  620  00001650  6064000a	seqi	r4,r3,#10
  621  00001654  1480000c	bnez	r4,L3_LF2
  622  00001658  54000000	nop; delay slot nop
  623  0000165c  08000008	j	L2_LF2
  624  00001660  54000000	nop; delay slot nop
  625  00001664          	L3_LF2:
  626  00001664  20010001	addi	r1,r0,#1
  627  00001668          	L2_LF2:
  628  00001668  08000004	j	L1_LF2
  629  0000166c  54000000	nop; delay slot nop
  630  00001670          	L1_LF2:
  631  00001670  8fa20000	lw	r2,0(r29)
  632  00001674  8fa30004	lw	r3,4(r29)
  633  00001678  8fa40008	lw	r4,8(r29)
  634  0000167c  8fdffff8	lw	r31,-8(r30)
  635  00001680  001ee820	add	r29,r0,r30
  636  00001684  8fdefffc	lw	r30,-4(r30)
  637  00001688  4be00000	jr	r31
  638  0000168c  54000000	nop
  639  00001690          	.endproc _isspace
  640  00001690          	.align 2
  641  00001690          	.proc _isxdigit
  642  00001690          	.global _isxdigit
  643  00001690          	_isxdigit:
  644                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  645  00001690  afbefffc	sw	-4(r29),r30; push fp
  646  00001694  001df020	add	r30,r0,r29; fp = sp
  647  00001698  afbffff8	sw	-8(r29),r31; push ret addr
  648  0000169c  2fbd0018	subui	r29,r29,#24; alloc local storage
  649  000016a0  afa20000	sw	0(r29),r2
  650  000016a4  afa30004	sw	4(r29),r3
  651  000016a8  afa40008	sw	8(r29),r4
  652  000016ac  83c20003	lb	r2,3(r30)
  653  000016b0  20010000	addi	r1,r0,#0
  654  000016b4  304300ff	andi	r3,r2,#0x00ff
  655  000016b8  6c64002f	sgtui	r4,r3,#47
  656  000016bc  1080001c	beqz	r4,L7_LF2
  657  000016c0  54000000	nop; delay slot nop
  658  000016c4  304300ff	andi	r3,r2,#0x00ff
  659  000016c8  70640039	sleui	r4,r3,#57
  660  000016cc  1480005c	bnez	r4,L6_LF2
  661  000016d0  54000000	nop; delay slot nop
  662  000016d4  08000004	j	L7_LF2
  663  000016d8  54000000	nop; delay slot nop
  664  000016dc          	L7_LF2:
  665  000016dc  304300ff	andi	r3,r2,#0x00ff
  666  000016e0  6c640060	sgtui	r4,r3,#96
  667  000016e4  1080001c	beqz	r4,L8_LF2
  668  000016e8  54000000	nop; delay slot nop
  669  000016ec  304300ff	andi	r3,r2,#0x00ff
  670  000016f0  70640066	sleui	r4,r3,#102
  671  000016f4  14800034	bnez	r4,L6_LF2
  672  000016f8  54000000	nop; delay slot nop
  673  000016fc  08000004	j	L8_LF2
  674  00001700  54000000	nop; delay slot nop
  675  00001704          	L8_LF2:
  676  00001704  304300ff	andi	r3,r2,#0x00ff
  677  00001708  6c640040	sgtui	r4,r3,#64
  678  0000170c  10800020	beqz	r4,L5_LF2
  679  00001710  54000000	nop; delay slot nop
  680  00001714  304300ff	andi	r3,r2,#0x00ff
  681  00001718  70640041	sleui	r4,r3,#65
  682  0000171c  1480000c	bnez	r4,L6_LF2
  683  00001720  54000000	nop; delay slot nop
  684  00001724  08000008	j	L5_LF2
  685  00001728  54000000	nop; delay slot nop
  686  0000172c          	L6_LF2:
  687  0000172c  20010001	addi	r1,r0,#1
  688  00001730          	L5_LF2:
  689  00001730  08000004	j	L4_LF2
  690  00001734  54000000	nop; delay slot nop
  691  00001738          	L4_LF2:
  692  00001738  8fa20000	lw	r2,0(r29)
  693  0000173c  8fa30004	lw	r3,4(r29)
  694  00001740  8fa40008	lw	r4,8(r29)
  695  00001744  8fdffff8	lw	r31,-8(r30)
  696  00001748  001ee820	add	r29,r0,r30
  697  0000174c  8fdefffc	lw	r30,-4(r30)
  698  00001750  4be00000	jr	r31
  699  00001754  54000000	nop
  700  00001758          	.endproc _isxdigit
  701  00001758          	.align 2
  702  00001758          	.proc _dstrcpy
  703  00001758          	.global _dstrcpy
  704  00001758          	_dstrcpy:
  705                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  706  00001758  afbefffc	sw	-4(r29),r30; push fp
  707  0000175c  001df020	add	r30,r0,r29; fp = sp
  708  00001760  afbffff8	sw	-8(r29),r31; push ret addr
  709  00001764  2fbd0018	subui	r29,r29,#24; alloc local storage
  710  00001768  afa20000	sw	0(r29),r2
  711  0000176c  afa30004	sw	4(r29),r3
  712  00001770  8fc10000	lw	r1,(r30)
  713  00001774  afc1fff4	sw	-12(r30),r1
  714  00001778          	L10_LF2:
  715  00001778  8fc10000	lw	r1,(r30)
  716  0000177c  20220001	addi	r2,r1,#1
  717  00001780  afc20000	sw	(r30),r2
  718  00001784  8fc20004	lw	r2,4(r30)
  719  00001788  20430001	addi	r3,r2,#1
  720  0000178c  afc30004	sw	4(r30),r3
  721  00001790  80420000	lb	r2,(r2)
  722  00001794  a0220000	sb	(r1),r2
  723  00001798  a3c2fff3	sb	-13(r30),r2
  724  0000179c          	L12_LF2:
  725  0000179c  93c1fff3	lbu	r1,-13(r30)
  726  000017a0  64220000	snei	r2,r1,#0
  727  000017a4  1440000c	bnez	r2,L13_LF2
  728  000017a8  54000000	nop; delay slot nop
  729  000017ac  0800000c	j	L11_LF2
  730  000017b0  54000000	nop; delay slot nop
  731  000017b4          	L13_LF2:
  732  000017b4  0bffffc0	j	L10_LF2
  733  000017b8  54000000	nop; delay slot nop
  734  000017bc          	L11_LF2:
  735  000017bc  8fc1fff4	lw	r1,-12(r30)
  736  000017c0  08000004	j	L9_LF2
  737  000017c4  54000000	nop; delay slot nop
  738  000017c8          	L9_LF2:
  739  000017c8  8fa20000	lw	r2,0(r29)
  740  000017cc  8fa30004	lw	r3,4(r29)
  741  000017d0  8fdffff8	lw	r31,-8(r30)
  742  000017d4  001ee820	add	r29,r0,r30
  743  000017d8  8fdefffc	lw	r30,-4(r30)
  744  000017dc  4be00000	jr	r31
  745  000017e0  54000000	nop
  746  000017e4          	.endproc _dstrcpy
  747  000017e4          	.align 2
  748  000017e4          	.proc _dstrncpy
  749  000017e4          	.global _dstrncpy
  750  000017e4          	_dstrncpy:
  751                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  752  000017e4  afbefffc	sw	-4(r29),r30; push fp
  753  000017e8  001df020	add	r30,r0,r29; fp = sp
  754  000017ec  afbffff8	sw	-8(r29),r31; push ret addr
  755  000017f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  756  000017f4  afa20000	sw	0(r29),r2
  757  000017f8  afa30004	sw	4(r29),r3
  758  000017fc  8fc10000	lw	r1,(r30)
  759  00001800  afc1fff4	sw	-12(r30),r1
  760  00001804          	L15_LF2:
  761  00001804  8fc10008	lw	r1,8(r30)
  762  00001808  2022ffff	addi	r2,r1,#-1
  763  0000180c  afc20008	sw	8(r30),r2
  764  00001810  70210000	slei	r1,r1,#0
  765  00001814  1020000c	beqz	r1,L18_LF2
  766  00001818  54000000	nop; delay slot nop
  767  0000181c  08000048	j	L16_LF2
  768  00001820  54000000	nop; delay slot nop
  769  00001824          	L18_LF2:
  770  00001824  8fc10000	lw	r1,(r30)
  771  00001828  20220001	addi	r2,r1,#1
  772  0000182c  afc20000	sw	(r30),r2
  773  00001830  8fc20004	lw	r2,4(r30)
  774  00001834  20430001	addi	r3,r2,#1
  775  00001838  afc30004	sw	4(r30),r3
  776  0000183c  80420000	lb	r2,(r2)
  777  00001840  a0220000	sb	(r1),r2
  778  00001844  a3c2fff3	sb	-13(r30),r2
  779  00001848          	L17_LF2:
  780  00001848  93c1fff3	lbu	r1,-13(r30)
  781  0000184c  64220000	snei	r2,r1,#0
  782  00001850  1440000c	bnez	r2,L19_LF2
  783  00001854  54000000	nop; delay slot nop
  784  00001858  0800000c	j	L16_LF2
  785  0000185c  54000000	nop; delay slot nop
  786  00001860          	L19_LF2:
  787  00001860  0bffffa0	j	L15_LF2
  788  00001864  54000000	nop; delay slot nop
  789  00001868          	L16_LF2:
  790  00001868  8fc1fff4	lw	r1,-12(r30)
  791  0000186c  08000004	j	L14_LF2
  792  00001870  54000000	nop; delay slot nop
  793  00001874          	L14_LF2:
  794  00001874  8fa20000	lw	r2,0(r29)
  795  00001878  8fa30004	lw	r3,4(r29)
  796  0000187c  8fdffff8	lw	r31,-8(r30)
  797  00001880  001ee820	add	r29,r0,r30
  798  00001884  8fdefffc	lw	r30,-4(r30)
  799  00001888  4be00000	jr	r31
  800  0000188c  54000000	nop
  801  00001890          	.endproc _dstrncpy
  802  00001890          	.align 2
  803  00001890          	.proc _dstrcat
  804  00001890          	.global _dstrcat
  805  00001890          	_dstrcat:
  806                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  807  00001890  afbefffc	sw	-4(r29),r30; push fp
  808  00001894  001df020	add	r30,r0,r29; fp = sp
  809  00001898  afbffff8	sw	-8(r29),r31; push ret addr
  810  0000189c  2fbd0018	subui	r29,r29,#24; alloc local storage
  811  000018a0  afa20000	sw	0(r29),r2
  812  000018a4  8fc10000	lw	r1,(r30)
  813  000018a8  afc1fff4	sw	-12(r30),r1
  814  000018ac          	L21_LF2:
  815  000018ac  8fc10000	lw	r1,(r30)
  816  000018b0  90220000	lbu	r2,(r1)
  817  000018b4  64410000	snei	r1,r2,#0
  818  000018b8  1420000c	bnez	r1,L23_LF2
  819  000018bc  54000000	nop; delay slot nop
  820  000018c0  0800001c	j	L22_LF2
  821  000018c4  54000000	nop; delay slot nop
  822  000018c8          	L23_LF2:
  823  000018c8  8fc20000	lw	r2,(r30)
  824  000018cc  20410001	addi	r1,r2,#1
  825  000018d0  00011020	add	r2,r0,r1
  826  000018d4  afc20000	sw	(r30),r2
  827  000018d8  0bffffd0	j	L21_LF2
  828  000018dc  54000000	nop; delay slot nop
  829  000018e0          	L22_LF2:
  830  000018e0  23bdfff8	addi	r29,r29,#-8
  831  000018e4  001d0820	add	r1,r0,r29
  832  000018e8  8fc20000	lw	r2,(r30)
  833  000018ec  ac220000	sw	(r1),r2
  834  000018f0  8fc20004	lw	r2,4(r30)
  835  000018f4  ac220004	sw	4(r1),r2
  836  000018f8  0ffffe5c	jal	_dstrcpy
  837  000018fc  54000000	nop; delay slot nop
  838  00001900  23bd0008	addi	r29,r29,#8
  839  00001904  8fc1fff4	lw	r1,-12(r30)
  840  00001908  08000004	j	L20_LF2
  841  0000190c  54000000	nop; delay slot nop
  842  00001910          	L20_LF2:
  843  00001910  8fa20000	lw	r2,0(r29)
  844  00001914  8fdffff8	lw	r31,-8(r30)
  845  00001918  001ee820	add	r29,r0,r30
  846  0000191c  8fdefffc	lw	r30,-4(r30)
  847  00001920  4be00000	jr	r31
  848  00001924  54000000	nop
  849  00001928          	.endproc _dstrcat
  850  00001928          	.align 2
  851  00001928          	.proc _dstrncmp
  852  00001928          	.global _dstrncmp
  853  00001928          	_dstrncmp:
  854                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  855  00001928  afbefffc	sw	-4(r29),r30; push fp
  856  0000192c  001df020	add	r30,r0,r29; fp = sp
  857  00001930  afbffff8	sw	-8(r29),r31; push ret addr
  858  00001934  2fbd0018	subui	r29,r29,#24; alloc local storage
  859  00001938  afa20000	sw	0(r29),r2
  860  0000193c  afa30004	sw	4(r29),r3
  861  00001940  54000000	nop
  862  00001944  20010000	addi	r1,r0,#0
  863  00001948  afc1fff4	sw	-12(r30),r1
  864  0000194c          	L25_LF2:
  865  0000194c  8fc1fff4	lw	r1,-12(r30)
  866  00001950  8fc20008	lw	r2,8(r30)
  867  00001954  0022082a	slt	r1,r1,r2
  868  00001958  1420000c	bnez	r1,L28_LF2
  869  0000195c  54000000	nop; delay slot nop
  870  00001960  08000088	j	L26_LF2
  871  00001964  54000000	nop; delay slot nop
  872  00001968          	L28_LF2:
  873  00001968  8fc10004	lw	r1,4(r30)
  874  0000196c  90220000	lbu	r2,(r1)
  875  00001970  64410000	snei	r1,r2,#0
  876  00001974  14200018	bnez	r1,L29_LF2
  877  00001978  54000000	nop; delay slot nop
  878  0000197c  20010000	addi	r1,r0,#0
  879  00001980  080000d8	j	L24_LF2
  880  00001984  54000000	nop; delay slot nop
  881  00001988  08000028	j	L30_LF2
  882  0000198c  54000000	nop; delay slot nop
  883  00001990          	L29_LF2:
  884  00001990  8fc10000	lw	r1,(r30)
  885  00001994  8fc20004	lw	r2,4(r30)
  886  00001998  90210000	lbu	r1,(r1)
  887  0000199c  90420000	lbu	r2,(r2)
  888  000019a0  00220829	sne	r1,r1,r2
  889  000019a4  1020000c	beqz	r1,L30_LF2
  890  000019a8  54000000	nop; delay slot nop
  891  000019ac  0800003c	j	L26_LF2
  892  000019b0  54000000	nop; delay slot nop
  893  000019b4          	L31_LF2:
  894  000019b4          	L30_LF2:
  895  000019b4  8fc20000	lw	r2,(r30)
  896  000019b8  20410001	addi	r1,r2,#1
  897  000019bc  00011020	add	r2,r0,r1
  898  000019c0  afc20000	sw	(r30),r2
  899  000019c4  8fc20004	lw	r2,4(r30)
  900  000019c8  20410001	addi	r1,r2,#1
  901  000019cc  00011020	add	r2,r0,r1
  902  000019d0  afc20004	sw	4(r30),r2
  903  000019d4          	L27_LF2:
  904  000019d4  8fc2fff4	lw	r2,-12(r30)
  905  000019d8  20410001	addi	r1,r2,#1
  906  000019dc  00011020	add	r2,r0,r1
  907  000019e0  afc2fff4	sw	-12(r30),r2
  908  000019e4  0bffff64	j	L25_LF2
  909  000019e8  54000000	nop; delay slot nop
  910  000019ec          	L26_LF2:
  911  000019ec  8fc1fff4	lw	r1,-12(r30)
  912  000019f0  8fc20008	lw	r2,8(r30)
  913  000019f4  00220828	seq	r1,r1,r2
  914  000019f8  10200018	beqz	r1,L32_LF2
  915  000019fc  54000000	nop; delay slot nop
  916  00001a00  20010000	addi	r1,r0,#0
  917  00001a04  08000054	j	L24_LF2
  918  00001a08  54000000	nop; delay slot nop
  919  00001a0c  0800004c	j	L33_LF2
  920  00001a10  54000000	nop; delay slot nop
  921  00001a14          	L32_LF2:
  922  00001a14  8fc20000	lw	r2,(r30)
  923  00001a18  90410000	lbu	r1,(r2)
  924  00001a1c  8fc20004	lw	r2,4(r30)
  925  00001a20  90430000	lbu	r3,(r2)
  926  00001a24  00230822	sub	r1,r1,r3
  927  00001a28  74220000	sgei	r2,r1,#0
  928  00001a2c  10400020	beqz	r2,L34_LF2
  929  00001a30  54000000	nop; delay slot nop
  930  00001a34  8fc10000	lw	r1,(r30)
  931  00001a38  8fc20004	lw	r2,4(r30)
  932  00001a3c  90210000	lbu	r1,(r1)
  933  00001a40  90420000	lbu	r2,(r2)
  934  00001a44  00220829	sne	r1,r1,r2
  935  00001a48  08000008	j	L35_LF2
  936  00001a4c  54000000	nop; delay slot nop
  937  00001a50          	L34_LF2:
  938  00001a50  2001ffff	addi	r1,r0,#-1
  939  00001a54          	L35_LF2:
  940  00001a54  08000004	j	L24_LF2
  941  00001a58  54000000	nop; delay slot nop
  942  00001a5c          	L33_LF2:
  943  00001a5c          	L24_LF2:
  944  00001a5c  8fa20000	lw	r2,0(r29)
  945  00001a60  8fa30004	lw	r3,4(r29)
  946  00001a64  8fdffff8	lw	r31,-8(r30)
  947  00001a68  001ee820	add	r29,r0,r30
  948  00001a6c  8fdefffc	lw	r30,-4(r30)
  949  00001a70  4be00000	jr	r31
  950  00001a74  54000000	nop
  951  00001a78          	.endproc _dstrncmp
  952  00001a78          	.align 2
  953  00001a78          	.proc _dstrlen
  954  00001a78          	.global _dstrlen
  955  00001a78          	_dstrlen:
  956                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  957  00001a78  afbefffc	sw	-4(r29),r30; push fp
  958  00001a7c  001df020	add	r30,r0,r29; fp = sp
  959  00001a80  afbffff8	sw	-8(r29),r31; push ret addr
  960  00001a84  2fbd0018	subui	r29,r29,#24; alloc local storage
  961  00001a88  afa20000	sw	0(r29),r2
  962  00001a8c  20010000	addi	r1,r0,#0
  963  00001a90  afc1fff4	sw	-12(r30),r1
  964  00001a94          	L37_LF2:
  965  00001a94  8fc10000	lw	r1,(r30)
  966  00001a98  20220001	addi	r2,r1,#1
  967  00001a9c  afc20000	sw	(r30),r2
  968  00001aa0  90210000	lbu	r1,(r1)
  969  00001aa4  64220000	snei	r2,r1,#0
  970  00001aa8  1440000c	bnez	r2,L39_LF2
  971  00001aac  54000000	nop; delay slot nop
  972  00001ab0  0800001c	j	L38_LF2
  973  00001ab4  54000000	nop; delay slot nop
  974  00001ab8          	L39_LF2:
  975  00001ab8  8fc2fff4	lw	r2,-12(r30)
  976  00001abc  20410001	addi	r1,r2,#1
  977  00001ac0  00011020	add	r2,r0,r1
  978  00001ac4  afc2fff4	sw	-12(r30),r2
  979  00001ac8  0bffffc8	j	L37_LF2
  980  00001acc  54000000	nop; delay slot nop
  981  00001ad0          	L38_LF2:
  982  00001ad0  8fc1fff4	lw	r1,-12(r30)
  983  00001ad4  08000004	j	L36_LF2
  984  00001ad8  54000000	nop; delay slot nop
  985  00001adc          	L36_LF2:
  986  00001adc  8fa20000	lw	r2,0(r29)
  987  00001ae0  8fdffff8	lw	r31,-8(r30)
  988  00001ae4  001ee820	add	r29,r0,r30
  989  00001ae8  8fdefffc	lw	r30,-4(r30)
  990  00001aec  4be00000	jr	r31
  991  00001af0  54000000	nop
  992  00001af4          	.endproc _dstrlen
  993  00001af4          	.align 2
  994  00001af4          	.proc _dstrstr
  995  00001af4          	.global _dstrstr
  996  00001af4          	_dstrstr:
  997                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  998  00001af4  afbefffc	sw	-4(r29),r30; push fp
  999  00001af8  001df020	add	r30,r0,r29; fp = sp
 1000  00001afc  afbffff8	sw	-8(r29),r31; push ret addr
 1001  00001b00  2fbd0018	subui	r29,r29,#24; alloc local storage
 1002  00001b04  afa20000	sw	0(r29),r2
 1003  00001b08  23bdfff8	addi	r29,r29,#-8
 1004  00001b0c  001d0820	add	r1,r0,r29
 1005  00001b10  8fc20004	lw	r2,4(r30)
 1006  00001b14  ac220000	sw	(r1),r2
 1007  00001b18  0fffff5c	jal	_dstrlen
 1008  00001b1c  54000000	nop; delay slot nop
 1009  00001b20  23bd0008	addi	r29,r29,#8
 1010  00001b24  afc1fff4	sw	-12(r30),r1
 1011  00001b28          	L41_LF2:
 1012  00001b28  8fc10000	lw	r1,(r30)
 1013  00001b2c  90220000	lbu	r2,(r1)
 1014  00001b30  64410000	snei	r1,r2,#0
 1015  00001b34  1420000c	bnez	r1,L43_LF2
 1016  00001b38  54000000	nop; delay slot nop
 1017  00001b3c  08000060	j	L42_LF2
 1018  00001b40  54000000	nop; delay slot nop
 1019  00001b44          	L43_LF2:
 1020  00001b44  23bdfff0	addi	r29,r29,#-16
 1021  00001b48  001d0820	add	r1,r0,r29
 1022  00001b4c  8fc20000	lw	r2,(r30)
 1023  00001b50  ac220000	sw	(r1),r2
 1024  00001b54  8fc20004	lw	r2,4(r30)
 1025  00001b58  ac220004	sw	4(r1),r2
 1026  00001b5c  8fc2fff4	lw	r2,-12(r30)
 1027  00001b60  ac220008	sw	8(r1),r2
 1028  00001b64  0ffffdc0	jal	_dstrncmp
 1029  00001b68  54000000	nop; delay slot nop
 1030  00001b6c  23bd0010	addi	r29,r29,#16
 1031  00001b70  64220000	snei	r2,r1,#0
 1032  00001b74  14400010	bnez	r2,L44_LF2
 1033  00001b78  54000000	nop; delay slot nop
 1034  00001b7c  8fc10000	lw	r1,(r30)
 1035  00001b80  08000028	j	L40_LF2
 1036  00001b84  54000000	nop; delay slot nop
 1037  00001b88          	L44_LF2:
 1038  00001b88  8fc20000	lw	r2,(r30)
 1039  00001b8c  20410001	addi	r1,r2,#1
 1040  00001b90  00011020	add	r2,r0,r1
 1041  00001b94  afc20000	sw	(r30),r2
 1042  00001b98  0bffff8c	j	L41_LF2
 1043  00001b9c  54000000	nop; delay slot nop
 1044  00001ba0          	L42_LF2:
 1045  00001ba0  20010000	addi	r1,r0,#0
 1046  00001ba4  08000004	j	L40_LF2
 1047  00001ba8  54000000	nop; delay slot nop
 1048  00001bac          	L40_LF2:
 1049  00001bac  8fa20000	lw	r2,0(r29)
 1050  00001bb0  8fdffff8	lw	r31,-8(r30)
 1051  00001bb4  001ee820	add	r29,r0,r30
 1052  00001bb8  8fdefffc	lw	r30,-4(r30)
 1053  00001bbc  4be00000	jr	r31
 1054  00001bc0  54000000	nop
 1055  00001bc4          	.endproc _dstrstr
 1056  00001bc4          	.align 2
 1057  00001bc4          	.proc _dmindex
 1058  00001bc4          	.global _dmindex
 1059  00001bc4          	_dmindex:
 1060                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1061  00001bc4  afbefffc	sw	-4(r29),r30; push fp
 1062  00001bc8  001df020	add	r30,r0,r29; fp = sp
 1063  00001bcc  afbffff8	sw	-8(r29),r31; push ret addr
 1064  00001bd0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1065  00001bd4  afa20000	sw	0(r29),r2
 1066  00001bd8  54000000	nop
 1067  00001bdc          	L46_LF2:
 1068  00001bdc  8fc10000	lw	r1,(r30)
 1069  00001be0  90220000	lbu	r2,(r1)
 1070  00001be4  64410000	snei	r1,r2,#0
 1071  00001be8  1420000c	bnez	r1,L48_LF2
 1072  00001bec  54000000	nop; delay slot nop
 1073  00001bf0  08000070	j	L47_LF2
 1074  00001bf4  54000000	nop; delay slot nop
 1075  00001bf8          	L48_LF2:
 1076  00001bf8  8fc10004	lw	r1,4(r30)
 1077  00001bfc  afc1fff4	sw	-12(r30),r1
 1078  00001c00          	L49_LF2:
 1079  00001c00  8fc1fff4	lw	r1,-12(r30)
 1080  00001c04  90220000	lbu	r2,(r1)
 1081  00001c08  64410000	snei	r1,r2,#0
 1082  00001c0c  1420000c	bnez	r1,L52_LF2
 1083  00001c10  54000000	nop; delay slot nop
 1084  00001c14  08000044	j	L50_LF2
 1085  00001c18  54000000	nop; delay slot nop
 1086  00001c1c          	L52_LF2:
 1087  00001c1c  8fc10000	lw	r1,(r30)
 1088  00001c20  8fc2fff4	lw	r2,-12(r30)
 1089  00001c24  90210000	lbu	r1,(r1)
 1090  00001c28  90420000	lbu	r2,(r2)
 1091  00001c2c  00220828	seq	r1,r1,r2
 1092  00001c30  10200010	beqz	r1,L51_LF2
 1093  00001c34  54000000	nop; delay slot nop
 1094  00001c38  8fc10000	lw	r1,(r30)
 1095  00001c3c  08000030	j	L45_LF2
 1096  00001c40  54000000	nop; delay slot nop
 1097  00001c44          	L53_LF2:
 1098  00001c44          	L51_LF2:
 1099  00001c44  8fc2fff4	lw	r2,-12(r30)
 1100  00001c48  20410001	addi	r1,r2,#1
 1101  00001c4c  00011020	add	r2,r0,r1
 1102  00001c50  afc2fff4	sw	-12(r30),r2
 1103  00001c54  0bffffa8	j	L49_LF2
 1104  00001c58  54000000	nop; delay slot nop
 1105  00001c5c          	L50_LF2:
 1106  00001c5c  0bffff7c	j	L46_LF2
 1107  00001c60  54000000	nop; delay slot nop
 1108  00001c64          	L47_LF2:
 1109  00001c64  20010000	addi	r1,r0,#0
 1110  00001c68  08000004	j	L45_LF2
 1111  00001c6c  54000000	nop; delay slot nop
 1112  00001c70          	L45_LF2:
 1113  00001c70  8fa20000	lw	r2,0(r29)
 1114  00001c74  8fdffff8	lw	r31,-8(r30)
 1115  00001c78  001ee820	add	r29,r0,r30
 1116  00001c7c  8fdefffc	lw	r30,-4(r30)
 1117  00001c80  4be00000	jr	r31
 1118  00001c84  54000000	nop
 1119  00001c88          	.endproc _dmindex
 1120  00001c88          	.align 2
 1121  00001c88          	.proc _dindex
 1122  00001c88          	.global _dindex
 1123  00001c88          	_dindex:
 1124                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1125  00001c88  afbefffc	sw	-4(r29),r30; push fp
 1126  00001c8c  001df020	add	r30,r0,r29; fp = sp
 1127  00001c90  afbffff8	sw	-8(r29),r31; push ret addr
 1128  00001c94  2fbd0010	subui	r29,r29,#16; alloc local storage
 1129  00001c98  afa20000	sw	0(r29),r2
 1130  00001c9c  54000000	nop
 1131  00001ca0          	L55_LF2:
 1132  00001ca0  8fc10000	lw	r1,(r30)
 1133  00001ca4  90220000	lbu	r2,(r1)
 1134  00001ca8  64410000	snei	r1,r2,#0
 1135  00001cac  1420000c	bnez	r1,L57_LF2
 1136  00001cb0  54000000	nop; delay slot nop
 1137  00001cb4  08000040	j	L56_LF2
 1138  00001cb8  54000000	nop; delay slot nop
 1139  00001cbc          	L57_LF2:
 1140  00001cbc  8fc10000	lw	r1,(r30)
 1141  00001cc0  90220000	lbu	r2,(r1)
 1142  00001cc4  8fc10004	lw	r1,4(r30)
 1143  00001cc8  00411028	seq	r2,r2,r1
 1144  00001ccc  10400010	beqz	r2,L58_LF2
 1145  00001cd0  54000000	nop; delay slot nop
 1146  00001cd4  8fc10000	lw	r1,(r30)
 1147  00001cd8  08000028	j	L54_LF2
 1148  00001cdc  54000000	nop; delay slot nop
 1149  00001ce0          	L58_LF2:
 1150  00001ce0  8fc20000	lw	r2,(r30)
 1151  00001ce4  20410001	addi	r1,r2,#1
 1152  00001ce8  00011020	add	r2,r0,r1
 1153  00001cec  afc20000	sw	(r30),r2
 1154  00001cf0  0bffffac	j	L55_LF2
 1155  00001cf4  54000000	nop; delay slot nop
 1156  00001cf8          	L56_LF2:
 1157  00001cf8  20010000	addi	r1,r0,#0
 1158  00001cfc  08000004	j	L54_LF2
 1159  00001d00  54000000	nop; delay slot nop
 1160  00001d04          	L54_LF2:
 1161  00001d04  8fa20000	lw	r2,0(r29)
 1162  00001d08  8fdffff8	lw	r31,-8(r30)
 1163  00001d0c  001ee820	add	r29,r0,r30
 1164  00001d10  8fdefffc	lw	r30,-4(r30)
 1165  00001d14  4be00000	jr	r31
 1166  00001d18  54000000	nop
 1167  00001d1c          	.endproc _dindex
 1168  00001d1c          	.align 2
 1169  00001d1c          	.proc _ditoa
 1170  00001d1c          	.global _ditoa
 1171  00001d1c          	_ditoa:
 1172                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1173  00001d1c  afbefffc	sw	-4(r29),r30; push fp
 1174  00001d20  001df020	add	r30,r0,r29; fp = sp
 1175  00001d24  afbffff8	sw	-8(r29),r31; push ret addr
 1176  00001d28  2fbd0018	subui	r29,r29,#24; alloc local storage
 1177  00001d2c  afa20000	sw	0(r29),r2
 1178  00001d30  afa30004	sw	4(r29),r3
 1179  00001d34  8fc10000	lw	r1,(r30)
 1180  00001d38  68220000	slti	r2,r1,#0
 1181  00001d3c  1040002c	beqz	r2,L60_LF2
 1182  00001d40  54000000	nop; delay slot nop
 1183  00001d44  8fc10004	lw	r1,4(r30)
 1184  00001d48  20220001	addi	r2,r1,#1
 1185  00001d4c  afc20004	sw	4(r30),r2
 1186  00001d50  2002002d	addi	r2,r0,(#0x2d)&0xff
 1187  00001d54  a0220000	sb	(r1),r2
 1188  00001d58  8fc10000	lw	r1,(r30)
 1189  00001d5c  00011022	sub	r2,r0,r1
 1190  00001d60  afc20000	sw	(r30),r2
 1191  00001d64  08000118	j	L61_LF2
 1192  00001d68  54000000	nop; delay slot nop
 1193  00001d6c          	L60_LF2:
 1194  00001d6c  8fc10000	lw	r1,(r30)
 1195  00001d70  64220000	snei	r2,r1,#0
 1196  00001d74  14400020	bnez	r2,L62_LF2
 1197  00001d78  54000000	nop; delay slot nop
 1198  00001d7c  8fc10004	lw	r1,4(r30)
 1199  00001d80  20220001	addi	r2,r1,#1
 1200  00001d84  afc20004	sw	4(r30),r2
 1201  00001d88  20020030	addi	r2,r0,(#0x30)&0xff
 1202  00001d8c  a0220000	sb	(r1),r2
 1203  00001d90  080000ec	j	L61_LF2
 1204  00001d94  54000000	nop; delay slot nop
 1205  00001d98          	L62_LF2:
 1206  00001d98  20010001	addi	r1,r0,#1
 1207  00001d9c  afc1fff4	sw	-12(r30),r1
 1208  00001da0          	L64_LF2:
 1209  00001da0  8fc1fff4	lw	r1,-12(r30)
 1210  00001da4  8fc20000	lw	r2,(r30)
 1211  00001da8  0022082c	sle	r1,r1,r2
 1212  00001dac  1420000c	bnez	r1,L66_LF2
 1213  00001db0  54000000	nop; delay slot nop
 1214  00001db4  08000024	j	L65_LF2
 1215  00001db8  54000000	nop; delay slot nop
 1216  00001dbc          	L67_LF2:
 1217  00001dbc          	L66_LF2:
 1218  00001dbc  8fc1fff4	lw	r1,-12(r30)
 1219  00001dc0  00011820	add	r3,r0,r1
 1220  00001dc4  50620002	slli	r2,r3,#0x2
 1221  00001dc8  00411020	add	r2,r2,r1
 1222  00001dcc  50410001	slli	r1,r2,#0x1
 1223  00001dd0  afc1fff4	sw	-12(r30),r1
 1224  00001dd4  0bffffc8	j	L64_LF2
 1225  00001dd8  54000000	nop; delay slot nop
 1226  00001ddc          	L65_LF2:
 1227  00001ddc  54000000	nop
 1228  00001de0          	L68_LF2:
 1229  00001de0  8fc1fff4	lw	r1,-12(r30)
 1230  00001de4  2002000a	addi	r2,r0,#10
 1231  00001de8  00200035	movi2fp	f0,r1
 1232  00001dec  00400835	movi2fp	f1,r2
 1233  00001df0  0401000f	div	f0,f0,f1
 1234  00001df4  00000834	movfp2i	r1,f0
 1235  00001df8  afc1fff4	sw	-12(r30),r1
 1236  00001dfc  8fc10004	lw	r1,4(r30)
 1237  00001e00  20220001	addi	r2,r1,#1
 1238  00001e04  afc20004	sw	4(r30),r2
 1239  00001e08  8fc20000	lw	r2,(r30)
 1240  00001e0c  8fc3fff4	lw	r3,-12(r30)
 1241  00001e10  00400035	movi2fp	f0,r2
 1242  00001e14  00600835	movi2fp	f1,r3
 1243  00001e18  0401000f	div	f0,f0,f1
 1244  00001e1c  00001034	movfp2i	r2,f0
 1245  00001e20  00021820	add	r3,r0,r2
 1246  00001e24  20620030	addi	r2,r3,#48
 1247  00001e28  a0220000	sb	(r1),r2
 1248  00001e2c  8fc10000	lw	r1,(r30)
 1249  00001e30  8fc3fff4	lw	r3,-12(r30)
 1250  00001e34  00200035	movi2fp	f0,r1
 1251  00001e38  00600835	movi2fp	f1,r3
 1252  00001e3c  0401000f	div	f0,f0,f1
 1253  00001e40  00001034	movfp2i	r2,f0
 1254  00001e44  8fc3fff4	lw	r3,-12(r30)
 1255  00001e48  00400035	movi2fp	f0,r2
 1256  00001e4c  00600835	movi2fp	f1,r3
 1257  00001e50  0401000e	mult	f0,f0,f1
 1258  00001e54  00001034	movfp2i	r2,f0
 1259  00001e58  00220822	sub	r1,r1,r2
 1260  00001e5c  afc10000	sw	(r30),r1
 1261  00001e60          	L70_LF2:
 1262  00001e60  8fc1fff4	lw	r1,-12(r30)
 1263  00001e64  6c220001	sgti	r2,r1,#1
 1264  00001e68  1440000c	bnez	r2,L71_LF2
 1265  00001e6c  54000000	nop; delay slot nop
 1266  00001e70  0800000c	j	L61_LF2
 1267  00001e74  54000000	nop; delay slot nop
 1268  00001e78          	L71_LF2:
 1269  00001e78  0bffff64	j	L68_LF2
 1270  00001e7c  54000000	nop; delay slot nop
 1271  00001e80          	L69_LF2:
 1272  00001e80          	L63_LF2:
 1273  00001e80          	L61_LF2:
 1274  00001e80  8fc10004	lw	r1,4(r30)
 1275  00001e84  20020000	addi	r2,r0,(#0x0)&0xff
 1276  00001e88  a0220000	sb	(r1),r2
 1277  00001e8c          	L59_LF2:
 1278  00001e8c  8fa20000	lw	r2,0(r29)
 1279  00001e90  8fa30004	lw	r3,4(r29)
 1280  00001e94  8fdffff8	lw	r31,-8(r30)
 1281  00001e98  001ee820	add	r29,r0,r30
 1282  00001e9c  8fdefffc	lw	r30,-4(r30)
 1283  00001ea0  4be00000	jr	r31
 1284  00001ea4  54000000	nop
 1285  00001ea8          	.endproc _ditoa
 1286  00001ea8          	.align 2
 1287  00001ea8          	.proc _dstrtol
 1288  00001ea8          	.global _dstrtol
 1289  00001ea8          	_dstrtol:
 1290                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1291  00001ea8  afbefffc	sw	-4(r29),r30; push fp
 1292  00001eac  001df020	add	r30,r0,r29; fp = sp
 1293  00001eb0  afbffff8	sw	-8(r29),r31; push ret addr
 1294  00001eb4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1295  00001eb8  afa20000	sw	0(r29),r2
 1296  00001ebc  20010000	addi	r1,r0,#0
 1297  00001ec0  afc1fff4	sw	-12(r30),r1
 1298  00001ec4          	L73_LF2:
 1299  00001ec4  8fc10000	lw	r1,(r30)
 1300  00001ec8  90220000	lbu	r2,(r1)
 1301  00001ecc  60410020	seqi	r1,r2,#32
 1302  00001ed0  14200034	bnez	r1,L75_LF2
 1303  00001ed4  54000000	nop; delay slot nop
 1304  00001ed8  8fc10000	lw	r1,(r30)
 1305  00001edc  90220000	lbu	r2,(r1)
 1306  00001ee0  60410009	seqi	r1,r2,#9
 1307  00001ee4  14200020	bnez	r1,L75_LF2
 1308  00001ee8  54000000	nop; delay slot nop
 1309  00001eec  8fc10000	lw	r1,(r30)
 1310  00001ef0  90220000	lbu	r2,(r1)
 1311  00001ef4  6041000a	seqi	r1,r2,#10
 1312  00001ef8  1420000c	bnez	r1,L75_LF2
 1313  00001efc  54000000	nop; delay slot nop
 1314  00001f00  0800001c	j	L74_LF2
 1315  00001f04  54000000	nop; delay slot nop
 1316  00001f08          	L75_LF2:
 1317  00001f08  8fc20000	lw	r2,(r30)
 1318  00001f0c  20410001	addi	r1,r2,#1
 1319  00001f10  00011020	add	r2,r0,r1
 1320  00001f14  afc20000	sw	(r30),r2
 1321  00001f18  0bffffa8	j	L73_LF2
 1322  00001f1c  54000000	nop; delay slot nop
 1323  00001f20          	L74_LF2:
 1324  00001f20  8fc10004	lw	r1,4(r30)
 1325  00001f24  64220000	snei	r2,r1,#0
 1326  00001f28  10400010	beqz	r2,L76_LF2
 1327  00001f2c  54000000	nop; delay slot nop
 1328  00001f30  8fc10004	lw	r1,4(r30)
 1329  00001f34  8fc20000	lw	r2,(r30)
 1330  00001f38  ac220000	sw	(r1),r2
 1331  00001f3c          	L76_LF2:
 1332  00001f3c  8fc10000	lw	r1,(r30)
 1333  00001f40  90220000	lbu	r2,(r1)
 1334  00001f44  64410000	snei	r1,r2,#0
 1335  00001f48  14200010	bnez	r1,L77_LF2
 1336  00001f4c  54000000	nop; delay slot nop
 1337  00001f50  8fc1fff4	lw	r1,-12(r30)
 1338  00001f54  08000294	j	L72_LF2
 1339  00001f58  54000000	nop; delay slot nop
 1340  00001f5c          	L77_LF2:
 1341  00001f5c  8fc10000	lw	r1,(r30)
 1342  00001f60  90220000	lbu	r2,(r1)
 1343  00001f64  6041002d	seqi	r1,r2,#45
 1344  00001f68  10200024	beqz	r1,L78_LF2
 1345  00001f6c  54000000	nop; delay slot nop
 1346  00001f70  2001ffff	addi	r1,r0,#-1
 1347  00001f74  afc1ffec	sw	-20(r30),r1
 1348  00001f78  8fc20000	lw	r2,(r30)
 1349  00001f7c  20410001	addi	r1,r2,#1
 1350  00001f80  00011020	add	r2,r0,r1
 1351  00001f84  afc20000	sw	(r30),r2
 1352  00001f88  0800000c	j	L79_LF2
 1353  00001f8c  54000000	nop; delay slot nop
 1354  00001f90          	L78_LF2:
 1355  00001f90  20010001	addi	r1,r0,#1
 1356  00001f94  afc1ffec	sw	-20(r30),r1
 1357  00001f98          	L79_LF2:
 1358  00001f98  8fc10008	lw	r1,8(r30)
 1359  00001f9c  64220000	snei	r2,r1,#0
 1360  00001fa0  14400090	bnez	r2,L80_LF2
 1361  00001fa4  54000000	nop; delay slot nop
 1362  00001fa8  8fc10000	lw	r1,(r30)
 1363  00001fac  90220000	lbu	r2,(r1)
 1364  00001fb0  60410030	seqi	r1,r2,#48
 1365  00001fb4  10200074	beqz	r1,L81_LF2
 1366  00001fb8  54000000	nop; delay slot nop
 1367  00001fbc  8fc20000	lw	r2,(r30)
 1368  00001fc0  20410001	addi	r1,r2,#1
 1369  00001fc4  00011020	add	r2,r0,r1
 1370  00001fc8  afc20000	sw	(r30),r2
 1371  00001fcc  8fc10000	lw	r1,(r30)
 1372  00001fd0  90220000	lbu	r2,(r1)
 1373  00001fd4  60410078	seqi	r1,r2,#120
 1374  00001fd8  14200020	bnez	r1,L83_LF2
 1375  00001fdc  54000000	nop; delay slot nop
 1376  00001fe0  8fc10000	lw	r1,(r30)
 1377  00001fe4  90220000	lbu	r2,(r1)
 1378  00001fe8  60410058	seqi	r1,r2,#88
 1379  00001fec  1420000c	bnez	r1,L83_LF2
 1380  00001ff0  54000000	nop; delay slot nop
 1381  00001ff4  08000024	j	L82_LF2
 1382  00001ff8  54000000	nop; delay slot nop
 1383  00001ffc          	L83_LF2:
 1384  00001ffc  20010010	addi	r1,r0,#16
 1385  00002000  afc10008	sw	8(r30),r1
 1386  00002004  8fc20000	lw	r2,(r30)
 1387  00002008  20410001	addi	r1,r2,#1
 1388  0000200c  00011020	add	r2,r0,r1
 1389  00002010  afc20000	sw	(r30),r2
 1390  00002014  0800000c	j	L84_LF2
 1391  00002018  54000000	nop; delay slot nop
 1392  0000201c          	L82_LF2:
 1393  0000201c  20010008	addi	r1,r0,#8
 1394  00002020  afc10008	sw	8(r30),r1
 1395  00002024          	L84_LF2:
 1396  00002024  0800000c	j	L80_LF2
 1397  00002028  54000000	nop; delay slot nop
 1398  0000202c          	L81_LF2:
 1399  0000202c  2001000a	addi	r1,r0,#10
 1400  00002030  afc10008	sw	8(r30),r1
 1401  00002034          	L85_LF2:
 1402  00002034          	L80_LF2:
 1403  00002034  8fc10008	lw	r1,8(r30)
 1404  00002038  70220000	slei	r2,r1,#0
 1405  0000203c  1440001c	bnez	r2,L87_LF2
 1406  00002040  54000000	nop; delay slot nop
 1407  00002044  8fc10008	lw	r1,8(r30)
 1408  00002048  6c220010	sgti	r2,r1,#16
 1409  0000204c  1440000c	bnez	r2,L87_LF2
 1410  00002050  54000000	nop; delay slot nop
 1411  00002054  08000010	j	L86_LF2
 1412  00002058  54000000	nop; delay slot nop
 1413  0000205c          	L87_LF2:
 1414  0000205c  8fc1fff4	lw	r1,-12(r30)
 1415  00002060  08000188	j	L72_LF2
 1416  00002064  54000000	nop; delay slot nop
 1417  00002068          	L86_LF2:
 1418  00002068  54000000	nop
 1419  0000206c          	L88_LF2:
 1420  0000206c  8fc10000	lw	r1,(r30)
 1421  00002070  90220000	lbu	r2,(r1)
 1422  00002074  6c41002f	sgtui	r1,r2,#47
 1423  00002078  10200030	beqz	r1,L91_LF2
 1424  0000207c  54000000	nop; delay slot nop
 1425  00002080  8fc10000	lw	r1,(r30)
 1426  00002084  90220000	lbu	r2,(r1)
 1427  00002088  70410039	sleui	r1,r2,#57
 1428  0000208c  1020001c	beqz	r1,L91_LF2
 1429  00002090  54000000	nop; delay slot nop
 1430  00002094  8fc10000	lw	r1,(r30)
 1431  00002098  90220000	lbu	r2,(r1)
 1432  0000209c  2041ffd0	addi	r1,r2,#-48
 1433  000020a0  afc1fff0	sw	-16(r30),r1
 1434  000020a4  0800008c	j	L92_LF2
 1435  000020a8  54000000	nop; delay slot nop
 1436  000020ac          	L91_LF2:
 1437  000020ac  8fc10000	lw	r1,(r30)
 1438  000020b0  90220000	lbu	r2,(r1)
 1439  000020b4  6c410060	sgtui	r1,r2,#96
 1440  000020b8  10200030	beqz	r1,L93_LF2
 1441  000020bc  54000000	nop; delay slot nop
 1442  000020c0  8fc10000	lw	r1,(r30)
 1443  000020c4  90220000	lbu	r2,(r1)
 1444  000020c8  7041007a	sleui	r1,r2,#122
 1445  000020cc  1020001c	beqz	r1,L93_LF2
 1446  000020d0  54000000	nop; delay slot nop
 1447  000020d4  8fc10000	lw	r1,(r30)
 1448  000020d8  90220000	lbu	r2,(r1)
 1449  000020dc  2041ffa9	addi	r1,r2,#-87
 1450  000020e0  afc1fff0	sw	-16(r30),r1
 1451  000020e4  0800004c	j	L92_LF2
 1452  000020e8  54000000	nop; delay slot nop
 1453  000020ec          	L93_LF2:
 1454  000020ec  8fc10000	lw	r1,(r30)
 1455  000020f0  90220000	lbu	r2,(r1)
 1456  000020f4  6c410040	sgtui	r1,r2,#64
 1457  000020f8  10200030	beqz	r1,L95_LF2
 1458  000020fc  54000000	nop; delay slot nop
 1459  00002100  8fc10000	lw	r1,(r30)
 1460  00002104  90220000	lbu	r2,(r1)
 1461  00002108  7041005a	sleui	r1,r2,#90
 1462  0000210c  1020001c	beqz	r1,L95_LF2
 1463  00002110  54000000	nop; delay slot nop
 1464  00002114  8fc10000	lw	r1,(r30)
 1465  00002118  90220000	lbu	r2,(r1)
 1466  0000211c  2041ffc9	addi	r1,r2,#-55
 1467  00002120  afc1fff0	sw	-16(r30),r1
 1468  00002124  0800000c	j	L92_LF2
 1469  00002128  54000000	nop; delay slot nop
 1470  0000212c          	L95_LF2:
 1471  0000212c  200103e8	addi	r1,r0,#1000
 1472  00002130  afc1fff0	sw	-16(r30),r1
 1473  00002134          	L96_LF2:
 1474  00002134          	L94_LF2:
 1475  00002134          	L92_LF2:
 1476  00002134  8fc1fff0	lw	r1,-16(r30)
 1477  00002138  8fc20008	lw	r2,8(r30)
 1478  0000213c  0022082a	slt	r1,r1,r2
 1479  00002140  10200040	beqz	r1,L90_LF2
 1480  00002144  54000000	nop; delay slot nop
 1481  00002148  8fc1fff4	lw	r1,-12(r30)
 1482  0000214c  8fc20008	lw	r2,8(r30)
 1483  00002150  00200035	movi2fp	f0,r1
 1484  00002154  00400835	movi2fp	f1,r2
 1485  00002158  0401000e	mult	f0,f0,f1
 1486  0000215c  00000834	movfp2i	r1,f0
 1487  00002160  afc1fff4	sw	-12(r30),r1
 1488  00002164  8fc1fff4	lw	r1,-12(r30)
 1489  00002168  8fc2fff0	lw	r2,-16(r30)
 1490  0000216c  00220820	add	r1,r1,r2
 1491  00002170  afc1fff4	sw	-12(r30),r1
 1492  00002174  8fc20000	lw	r2,(r30)
 1493  00002178  20410001	addi	r1,r2,#1
 1494  0000217c  00011020	add	r2,r0,r1
 1495  00002180  afc20000	sw	(r30),r2
 1496  00002184          	L97_LF2:
 1497  00002184          	L90_LF2:
 1498  00002184  8fc1fff0	lw	r1,-16(r30)
 1499  00002188  8fc20008	lw	r2,8(r30)
 1500  0000218c  0022082a	slt	r1,r1,r2
 1501  00002190  1420000c	bnez	r1,L98_LF2
 1502  00002194  54000000	nop; delay slot nop
 1503  00002198  0800000c	j	L89_LF2
 1504  0000219c  54000000	nop; delay slot nop
 1505  000021a0          	L98_LF2:
 1506  000021a0  0bfffec8	j	L88_LF2
 1507  000021a4  54000000	nop; delay slot nop
 1508  000021a8          	L89_LF2:
 1509  000021a8  8fc10004	lw	r1,4(r30)
 1510  000021ac  64220000	snei	r2,r1,#0
 1511  000021b0  10400010	beqz	r2,L99_LF2
 1512  000021b4  54000000	nop; delay slot nop
 1513  000021b8  8fc10004	lw	r1,4(r30)
 1514  000021bc  8fc20000	lw	r2,(r30)
 1515  000021c0  ac220000	sw	(r1),r2
 1516  000021c4          	L99_LF2:
 1517  000021c4  8fc1fff4	lw	r1,-12(r30)
 1518  000021c8  8fc2ffec	lw	r2,-20(r30)
 1519  000021cc  00200035	movi2fp	f0,r1
 1520  000021d0  00400835	movi2fp	f1,r2
 1521  000021d4  0401000e	mult	f0,f0,f1
 1522  000021d8  00000834	movfp2i	r1,f0
 1523  000021dc  afc1fff4	sw	-12(r30),r1
 1524  000021e0  8fc1fff4	lw	r1,-12(r30)
 1525  000021e4  08000004	j	L72_LF2
 1526  000021e8  54000000	nop; delay slot nop
 1527  000021ec          	L72_LF2:
 1528  000021ec  8fa20000	lw	r2,0(r29)
 1529  000021f0  8fdffff8	lw	r31,-8(r30)
 1530  000021f4  001ee820	add	r29,r0,r30
 1531  000021f8  8fdefffc	lw	r30,-4(r30)
 1532  000021fc  4be00000	jr	r31
 1533  00002200  54000000	nop
 1534  00002204          	.endproc _dstrtol
 1535  00002204          	.align 2
 1536  00002204          	.proc _bcopy
 1537  00002204          	.global _bcopy
 1538  00002204          	_bcopy:
 1539                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1540  00002204  afbefffc	sw	-4(r29),r30; push fp
 1541  00002208  001df020	add	r30,r0,r29; fp = sp
 1542  0000220c  afbffff8	sw	-8(r29),r31; push ret addr
 1543  00002210  2fbd0010	subui	r29,r29,#16; alloc local storage
 1544  00002214  afa20000	sw	0(r29),r2
 1545  00002218  afa30004	sw	4(r29),r3
 1546  0000221c  54000000	nop
 1547  00002220          	L101_LF2:
 1548  00002220  8fc10008	lw	r1,8(r30)
 1549  00002224  2022ffff	addi	r2,r1,#-1
 1550  00002228  afc20008	sw	8(r30),r2
 1551  0000222c  6c210000	sgti	r1,r1,#0
 1552  00002230  1420000c	bnez	r1,L103_LF2
 1553  00002234  54000000	nop; delay slot nop
 1554  00002238  0800002c	j	L102_LF2
 1555  0000223c  54000000	nop; delay slot nop
 1556  00002240          	L103_LF2:
 1557  00002240  8fc10004	lw	r1,4(r30)
 1558  00002244  20220001	addi	r2,r1,#1
 1559  00002248  afc20004	sw	4(r30),r2
 1560  0000224c  8fc20000	lw	r2,(r30)
 1561  00002250  20430001	addi	r3,r2,#1
 1562  00002254  afc30000	sw	(r30),r3
 1563  00002258  80420000	lb	r2,(r2)
 1564  0000225c  a0220000	sb	(r1),r2
 1565  00002260  0bffffbc	j	L101_LF2
 1566  00002264  54000000	nop; delay slot nop
 1567  00002268          	L102_LF2:
 1568  00002268          	L100_LF2:
 1569  00002268  8fa20000	lw	r2,0(r29)
 1570  0000226c  8fa30004	lw	r3,4(r29)
 1571  00002270  8fdffff8	lw	r31,-8(r30)
 1572  00002274  001ee820	add	r29,r0,r30
 1573  00002278  8fdefffc	lw	r30,-4(r30)
 1574  0000227c  4be00000	jr	r31
 1575  00002280  54000000	nop
 1576  00002284          	.endproc _bcopy
 1577  00002284          	.align 2
 1578  00002284          	.proc _bzero
 1579  00002284          	.global _bzero
 1580  00002284          	_bzero:
 1581                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1582  00002284  afbefffc	sw	-4(r29),r30; push fp
 1583  00002288  001df020	add	r30,r0,r29; fp = sp
 1584  0000228c  afbffff8	sw	-8(r29),r31; push ret addr
 1585  00002290  2fbd0010	subui	r29,r29,#16; alloc local storage
 1586  00002294  afa20000	sw	0(r29),r2
 1587  00002298  54000000	nop
 1588  0000229c          	L105_LF2:
 1589  0000229c  8fc10004	lw	r1,4(r30)
 1590  000022a0  2022ffff	addi	r2,r1,#-1
 1591  000022a4  afc20004	sw	4(r30),r2
 1592  000022a8  6c210000	sgti	r1,r1,#0
 1593  000022ac  1420000c	bnez	r1,L107_LF2
 1594  000022b0  54000000	nop; delay slot nop
 1595  000022b4  08000020	j	L106_LF2
 1596  000022b8  54000000	nop; delay slot nop
 1597  000022bc          	L107_LF2:
 1598  000022bc  8fc10000	lw	r1,(r30)
 1599  000022c0  20220001	addi	r2,r1,#1
 1600  000022c4  afc20000	sw	(r30),r2
 1601  000022c8  20020000	addi	r2,r0,(#0x0)&0xff
 1602  000022cc  a0220000	sb	(r1),r2
 1603  000022d0  0bffffc8	j	L105_LF2
 1604  000022d4  54000000	nop; delay slot nop
 1605  000022d8          	L106_LF2:
 1606  000022d8          	L104_LF2:
 1607  000022d8  8fa20000	lw	r2,0(r29)
 1608  000022dc  8fdffff8	lw	r31,-8(r30)
 1609  000022e0  001ee820	add	r29,r0,r30
 1610  000022e4  8fdefffc	lw	r30,-4(r30)
 1611  000022e8  4be00000	jr	r31
 1612  000022ec  54000000	nop
 1613  000022f0          	.endproc _bzero
 1614  000022f0          	.align 2
 1615  000022f0          	.proc _min
 1616  000022f0          	.global _min
 1617  000022f0          	_min:
 1618                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1619  000022f0  afbefffc	sw	-4(r29),r30; push fp
 1620  000022f4  001df020	add	r30,r0,r29; fp = sp
 1621  000022f8  afbffff8	sw	-8(r29),r31; push ret addr
 1622  000022fc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1623  00002300  afa20000	sw	0(r29),r2
 1624  00002304  afa30004	sw	4(r29),r3
 1625  00002308  8fc10000	lw	r1,(r30)
 1626  0000230c  8fc20004	lw	r2,4(r30)
 1627  00002310  0022182c	sle	r3,r1,r2
 1628  00002314  14600008	bnez	r3,L109_LF2
 1629  00002318  54000000	nop; delay slot nop
 1630  0000231c  8fc10004	lw	r1,4(r30)
 1631  00002320          	L109_LF2:
 1632  00002320  08000004	j	L108_LF2
 1633  00002324  54000000	nop; delay slot nop
 1634  00002328          	L108_LF2:
 1635  00002328  8fa20000	lw	r2,0(r29)
 1636  0000232c  8fa30004	lw	r3,4(r29)
 1637  00002330  8fdffff8	lw	r31,-8(r30)
 1638  00002334  001ee820	add	r29,r0,r30
 1639  00002338  8fdefffc	lw	r30,-4(r30)
 1640  0000233c  4be00000	jr	r31
 1641  00002340  54000000	nop
 1642  00002344          	.endproc _min
 1643                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1644                      ;;;
 1645                      ;;; Most of the traps are called in files from libtraps.
 1648  00002344          	.align 2
 1649  00002344          	.proc _exit
 1650  00002344          	.global _exit
 1651  00002344          	_exit:
 1652  00002344  44000300	trap	#0x300
 1653  00002348  4be00000	jr	r31
 1654  0000234c  54000000	nop
 1655  00002350          	.endproc _exit
 1657                      ; for the benefit of gcc.
 1658  00002350          	.proc ___main
 1659  00002350          	.global ___main
 1660  00002350          	___main:
 1661  00002350  4be00000	jr	r31
 1662  00002354  54000000	nop
 1663  00002358          	.endproc ___main
 1664  00002358          	.text
 1665  00002358          	.global _etext
 1666  00002358          	_etext:
 1667  00002358          	.align 3
 1668  00002358          	.data
 1669  0000318d          	.global _edata
 1670  0000318d          	_edata:
